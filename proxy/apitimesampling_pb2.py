# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apitimesampling.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2
import octaneenums_pb2 as octaneenums__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x61pitimesampling.proto\x12\toctaneapi\x1a\x0c\x63ommon.proto\x1a\x11octaneenums.proto\"\x81\x02\n\x0f\x41piTimeSampling\x12&\n\x07pattern\x18\x01 \x01(\x0b\x32\x15.octaneapi.TimeArrayT\x12\x13\n\x0bpatternSize\x18\x02 \x01(\r\x12 \n\x06period\x18\x03 \x01(\x0b\x32\x10.octaneapi.TimeT\x12/\n\ranimationType\x18\x04 \x01(\x0e\x32\x18.octaneapi.AnimationType\x12!\n\x07\x65ndTime\x18\x05 \x01(\x0b\x32\x10.octaneapi.TimeT\x1a\x14\n\x12\x65ndTimeAutoRequest\x1a%\n\x13\x65ndTimeAutoResponse\x12\x0e\n\x06result\x18\x01 \x01(\x02\x32\x86\x01\n\x16\x41piTimeSamplingService\x12l\n\x0b\x65ndTimeAuto\x12-.octaneapi.ApiTimeSampling.endTimeAutoRequest\x1a..octaneapi.ApiTimeSampling.endTimeAutoResponseB\x02H\x02\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'apitimesampling_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'H\002'
  _APITIMESAMPLING._serialized_start=70
  _APITIMESAMPLING._serialized_end=327
  _APITIMESAMPLING_ENDTIMEAUTOREQUEST._serialized_start=268
  _APITIMESAMPLING_ENDTIMEAUTOREQUEST._serialized_end=288
  _APITIMESAMPLING_ENDTIMEAUTORESPONSE._serialized_start=290
  _APITIMESAMPLING_ENDTIMEAUTORESPONSE._serialized_end=327
  _APITIMESAMPLINGSERVICE._serialized_start=330
  _APITIMESAMPLINGSERVICE._serialized_end=464
# @@protoc_insertion_point(module_scope)
