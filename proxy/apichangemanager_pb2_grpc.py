# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import apichangemanager_pb2 as apichangemanager__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in apichangemanager_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ApiChangeManagerServiceStub(object):
    """GRPC interface definition for class 'ApiChangeManager' from 'apichangemanager.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.observeApiItem = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/observeApiItem',
                request_serializer=apichangemanager__pb2.ApiChangeManager.observeApiItemRequest.SerializeToString,
                response_deserializer=apichangemanager__pb2.ApiChangeManager.observeApiItemResponse.FromString,
                _registered_method=True)
        self.stopObserving = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/stopObserving',
                request_serializer=apichangemanager__pb2.ApiChangeManager.stopObservingRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.stopObserving1 = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/stopObserving1',
                request_serializer=apichangemanager__pb2.ApiChangeManager.stopObserving1Request.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.stopObserving2 = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/stopObserving2',
                request_serializer=apichangemanager__pb2.ApiChangeManager.stopObserving2Request.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.update = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/update',
                request_serializer=apichangemanager__pb2.ApiChangeManager.updateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.addTimeObserver = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/addTimeObserver',
                request_serializer=apichangemanager__pb2.ApiChangeManager.addTimeObserverRequest.SerializeToString,
                response_deserializer=apichangemanager__pb2.ApiChangeManager.addTimeObserverResponse.FromString,
                _registered_method=True)
        self.removeTimeObserver = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/removeTimeObserver',
                request_serializer=apichangemanager__pb2.ApiChangeManager.removeTimeObserverRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.stopObservingTime = channel.unary_unary(
                '/octaneapi.ApiChangeManagerService/stopObservingTime',
                request_serializer=apichangemanager__pb2.ApiChangeManager.stopObservingTimeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ApiChangeManagerServiceServicer(object):
    """GRPC interface definition for class 'ApiChangeManager' from 'apichangemanager.h'
    """

    def observeApiItem(self, request, context):
        """/ Registers a callback for receiving change events for the item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopObserving(self, request, context):
        """/ Removes an observer from the item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopObserving1(self, request, context):
        """/ Removes a callback from all the items it's hooked up to
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopObserving2(self, request, context):
        """/ Removes all the observers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """/ Sends an update event to Octane which will then update all its sub-systems, which currently
        / is mainly the render engine
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addTimeObserver(self, request, context):
        """/ Adds a time observer to the observer list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeTimeObserver(self, request, context):
        """/ Removes a time observer from the observer list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopObservingTime(self, request, context):
        """/ Removes all the time observers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiChangeManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'observeApiItem': grpc.unary_unary_rpc_method_handler(
                    servicer.observeApiItem,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.observeApiItemRequest.FromString,
                    response_serializer=apichangemanager__pb2.ApiChangeManager.observeApiItemResponse.SerializeToString,
            ),
            'stopObserving': grpc.unary_unary_rpc_method_handler(
                    servicer.stopObserving,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.stopObservingRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'stopObserving1': grpc.unary_unary_rpc_method_handler(
                    servicer.stopObserving1,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.stopObserving1Request.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'stopObserving2': grpc.unary_unary_rpc_method_handler(
                    servicer.stopObserving2,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.stopObserving2Request.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.updateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'addTimeObserver': grpc.unary_unary_rpc_method_handler(
                    servicer.addTimeObserver,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.addTimeObserverRequest.FromString,
                    response_serializer=apichangemanager__pb2.ApiChangeManager.addTimeObserverResponse.SerializeToString,
            ),
            'removeTimeObserver': grpc.unary_unary_rpc_method_handler(
                    servicer.removeTimeObserver,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.removeTimeObserverRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'stopObservingTime': grpc.unary_unary_rpc_method_handler(
                    servicer.stopObservingTime,
                    request_deserializer=apichangemanager__pb2.ApiChangeManager.stopObservingTimeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiChangeManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiChangeManagerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiChangeManagerService(object):
    """GRPC interface definition for class 'ApiChangeManager' from 'apichangemanager.h'
    """

    @staticmethod
    def observeApiItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/observeApiItem',
            apichangemanager__pb2.ApiChangeManager.observeApiItemRequest.SerializeToString,
            apichangemanager__pb2.ApiChangeManager.observeApiItemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stopObserving(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/stopObserving',
            apichangemanager__pb2.ApiChangeManager.stopObservingRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stopObserving1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/stopObserving1',
            apichangemanager__pb2.ApiChangeManager.stopObserving1Request.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stopObserving2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/stopObserving2',
            apichangemanager__pb2.ApiChangeManager.stopObserving2Request.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/update',
            apichangemanager__pb2.ApiChangeManager.updateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addTimeObserver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/addTimeObserver',
            apichangemanager__pb2.ApiChangeManager.addTimeObserverRequest.SerializeToString,
            apichangemanager__pb2.ApiChangeManager.addTimeObserverResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeTimeObserver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/removeTimeObserver',
            apichangemanager__pb2.ApiChangeManager.removeTimeObserverRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stopObservingTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiChangeManagerService/stopObservingTime',
            apichangemanager__pb2.ApiChangeManager.stopObservingTimeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
