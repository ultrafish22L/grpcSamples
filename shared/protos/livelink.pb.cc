// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: livelink.proto
// Protobuf C++ Version: 6.31.1

#include "livelink.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace livelinkapi {

inline constexpr Vec4D::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0},
        w_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vec4D::Vec4D(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Vec4D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vec4DDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vec4DDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vec4DDefaultTypeInternal() {}
  union {
    Vec4D _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vec4DDefaultTypeInternal _Vec4D_default_instance_;

inline constexpr Vec3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vec3::Vec3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Vec3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vec3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vec3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vec3DefaultTypeInternal() {}
  union {
    Vec3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vec3DefaultTypeInternal _Vec3_default_instance_;

inline constexpr StreamStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR StreamStatus::StreamStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StreamStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StreamStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamStatusDefaultTypeInternal() {}
  union {
    StreamStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamStatusDefaultTypeInternal _StreamStatus_default_instance_;

inline constexpr MeshRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objecthandle_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshRequest::MeshRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MeshRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshRequestDefaultTypeInternal() {}
  union {
    MeshRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshRequestDefaultTypeInternal _MeshRequest_default_instance_;

inline constexpr Mesh::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        objecthandle_{::int64_t{0}},
        id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Mesh::Mesh(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Mesh_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshDefaultTypeInternal() {}
  union {
    Mesh _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshDefaultTypeInternal _Mesh_default_instance_;

inline constexpr FileResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filedata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR FileResponse::FileResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FileResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileResponseDefaultTypeInternal() {}
  union {
    FileResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileResponseDefaultTypeInternal _FileResponse_default_instance_;

inline constexpr FileRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filepath_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR FileRequest::FileRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FileRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileRequestDefaultTypeInternal() {}
  union {
    FileRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileRequestDefaultTypeInternal _FileRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(Empty_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr MeshList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : meshes_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshList::MeshList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MeshList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshListDefaultTypeInternal() {}
  union {
    MeshList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshListDefaultTypeInternal _MeshList_default_instance_;

inline constexpr MatrixD::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        row0_{nullptr},
        row1_{nullptr},
        row2_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MatrixD::MatrixD(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MatrixD_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatrixDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatrixDDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatrixDDefaultTypeInternal() {}
  union {
    MatrixD _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatrixDDefaultTypeInternal _MatrixD_default_instance_;

inline constexpr CameraState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pos_set_{},
        target_set_{},
        up_set_{},
        fov_set_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CameraState::CameraState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CameraState_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CameraStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraStateDefaultTypeInternal() {}
  union {
    CameraState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraStateDefaultTypeInternal _CameraState_default_instance_;

inline constexpr MeshData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        positions_{},
        normals_{},
        vertsperpoly_{},
        _vertsperpoly_cached_byte_size_{0},
        polyvertindices_{},
        _polyvertindices_cached_byte_size_{0},
        polynormalindices_{},
        _polynormalindices_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        worldmatrix_{nullptr},
        windingorder_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshData::MeshData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MeshData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshDataDefaultTypeInternal() {}
  union {
    MeshData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshDataDefaultTypeInternal _MeshData_default_instance_;
}  // namespace livelinkapi
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_livelink_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_livelink_2eproto = nullptr;
const ::uint32_t
    TableStruct_livelink_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec3, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec3, _impl_.z_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec4D, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec4D, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec4D, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec4D, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Vec4D, _impl_.w_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MatrixD, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MatrixD, _impl_.row0_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MatrixD, _impl_.row1_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MatrixD, _impl_.row2_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Mesh, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Mesh, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Mesh, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::Mesh, _impl_.objecthandle_),
        0,
        2,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshList, _impl_.meshes_),
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::CameraState, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::livelinkapi::CameraState, _impl_.pos_set_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::CameraState, _impl_.target_set_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::CameraState, _impl_.up_set_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::CameraState, _impl_.fov_set_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::FileRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::FileRequest, _impl_.filepath_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::FileResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::FileResponse, _impl_.filedata_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshRequest, _impl_.objecthandle_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::StreamStatus, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::StreamStatus, _impl_.message_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.positions_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.normals_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.vertsperpoly_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.polyvertindices_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.polynormalindices_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.windingorder_),
        PROTOBUF_FIELD_OFFSET(::livelinkapi::MeshData, _impl_.worldmatrix_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        1,
        0x000, // bitmap
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::livelinkapi::Vec3)},
        {9, sizeof(::livelinkapi::Vec4D)},
        {20, sizeof(::livelinkapi::MatrixD)},
        {29, sizeof(::livelinkapi::Mesh)},
        {38, sizeof(::livelinkapi::MeshList)},
        {40, sizeof(::livelinkapi::CameraState)},
        {50, sizeof(::livelinkapi::FileRequest)},
        {55, sizeof(::livelinkapi::FileResponse)},
        {60, sizeof(::livelinkapi::MeshRequest)},
        {65, sizeof(::livelinkapi::StreamStatus)},
        {70, sizeof(::livelinkapi::MeshData)},
        {89, sizeof(::livelinkapi::Empty)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::livelinkapi::_Vec3_default_instance_._instance,
    &::livelinkapi::_Vec4D_default_instance_._instance,
    &::livelinkapi::_MatrixD_default_instance_._instance,
    &::livelinkapi::_Mesh_default_instance_._instance,
    &::livelinkapi::_MeshList_default_instance_._instance,
    &::livelinkapi::_CameraState_default_instance_._instance,
    &::livelinkapi::_FileRequest_default_instance_._instance,
    &::livelinkapi::_FileResponse_default_instance_._instance,
    &::livelinkapi::_MeshRequest_default_instance_._instance,
    &::livelinkapi::_StreamStatus_default_instance_._instance,
    &::livelinkapi::_MeshData_default_instance_._instance,
    &::livelinkapi::_Empty_default_instance_._instance,
};
const char descriptor_table_protodef_livelink_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016livelink.proto\022\013livelinkapi\"\'\n\004Vec3\022\t\n"
    "\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"3\n\005Vec4D\022"
    "\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\t\n\001w\030\004 "
    "\001(\001\"o\n\007MatrixD\022 \n\004row0\030\001 \001(\0132\022.livelinka"
    "pi.Vec4D\022 \n\004row1\030\002 \001(\0132\022.livelinkapi.Vec"
    "4D\022 \n\004row2\030\003 \001(\0132\022.livelinkapi.Vec4D\"6\n\004"
    "Mesh\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\024\n\014object"
    "Handle\030\003 \001(\003\"-\n\010MeshList\022!\n\006meshes\030\001 \003(\013"
    "2\021.livelinkapi.Mesh\"\267\001\n\013CameraState\022%\n\010p"
    "osition\030\001 \001(\0132\021.livelinkapi.Vec3H\000\022#\n\006ta"
    "rget\030\002 \001(\0132\021.livelinkapi.Vec3H\001\022\037\n\002up\030\003 "
    "\001(\0132\021.livelinkapi.Vec3H\002\022\r\n\003fov\030\004 \001(\002H\003B"
    "\t\n\007pos_setB\014\n\ntarget_setB\010\n\006up_setB\t\n\007fo"
    "v_set\"\037\n\013FileRequest\022\020\n\010filepath\030\001 \001(\t\" "
    "\n\014FileResponse\022\020\n\010filedata\030\001 \001(\014\"#\n\013Mesh"
    "Request\022\024\n\014objecthandle\030\001 \001(\005\"\037\n\014StreamS"
    "tatus\022\017\n\007message\030\001 \001(\t\"\355\001\n\010MeshData\022\014\n\004n"
    "ame\030\001 \001(\t\022$\n\tpositions\030\002 \003(\0132\021.livelinka"
    "pi.Vec3\022\"\n\007normals\030\003 \003(\0132\021.livelinkapi.V"
    "ec3\022\024\n\014vertsPerPoly\030\004 \003(\r\022\027\n\017polyVertInd"
    "ices\030\005 \003(\r\022\031\n\021polyNormalIndices\030\006 \003(\r\022\024\n"
    "\014windingOrder\030\007 \001(\005\022)\n\013worldMatrix\030\010 \001(\013"
    "2\024.livelinkapi.MatrixD\"\007\n\005Empty2\202\003\n\017Live"
    "LinkService\0229\n\tSetCamera\022\030.livelinkapi.C"
    "ameraState\032\022.livelinkapi.Empty\0229\n\tGetCam"
    "era\022\022.livelinkapi.Empty\032\030.livelinkapi.Ca"
    "meraState\0226\n\tGetMeshes\022\022.livelinkapi.Emp"
    "ty\032\025.livelinkapi.MeshList\022:\n\007GetMesh\022\030.l"
    "ivelinkapi.MeshRequest\032\025.livelinkapi.Mes"
    "hData\022>\n\007GetFile\022\030.livelinkapi.FileReque"
    "st\032\031.livelinkapi.FileResponse\022E\n\014StreamC"
    "amera\022\030.livelinkapi.CameraState\032\031.liveli"
    "nkapi.StreamStatus(\001b\006proto3"
};
static ::absl::once_flag descriptor_table_livelink_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_livelink_2eproto = {
    false,
    false,
    1308,
    descriptor_table_protodef_livelink_2eproto,
    "livelink.proto",
    &descriptor_table_livelink_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_livelink_2eproto::offsets,
    file_level_enum_descriptors_livelink_2eproto,
    file_level_service_descriptors_livelink_2eproto,
};
namespace livelinkapi {
// ===================================================================

class Vec3::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Vec3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Vec3, _impl_._has_bits_);
};

Vec3::Vec3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vec3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.Vec3)
}
Vec3::Vec3(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vec3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vec3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Vec3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Vec3::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vec3::~Vec3() {
  // @@protoc_insertion_point(destructor:livelinkapi.Vec3)
  SharedDtor(*this);
}
inline void Vec3::SharedDtor(MessageLite& self) {
  Vec3& this_ = static_cast<Vec3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Vec3::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Vec3(arena);
}
constexpr auto Vec3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vec3),
                                            alignof(Vec3));
}
constexpr auto Vec3::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Vec3_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Vec3::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Vec3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Vec3::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Vec3>(), &Vec3::ByteSizeLong,
              &Vec3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Vec3, _impl_._cached_size_),
          false,
      },
      &Vec3::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Vec3_class_data_ =
        Vec3::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Vec3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Vec3_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Vec3_class_data_.tc_table);
  return Vec3_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
Vec3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vec3, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Vec3_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::Vec3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.Vec3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Vec3::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Vec3& this_ = static_cast<const Vec3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Vec3::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Vec3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.Vec3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          1, this_._internal_x(), target);
    }
  }

  // float y = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_y(), target);
    }
  }

  // float z = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_z(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.Vec3)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Vec3::ByteSizeLong(const MessageLite& base) {
  const Vec3& this_ = static_cast<const Vec3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Vec3::ByteSizeLong() const {
  const Vec3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.Vec3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // float x = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
        total_size += 5;
      }
    }
    // float y = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
        total_size += 5;
      }
    }
    // float z = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Vec3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vec3*>(&to_msg);
  auto& from = static_cast<const Vec3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.Vec3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
        _this->_impl_.z_ = from._impl_.z_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vec3::CopyFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vec3::InternalSwap(Vec3* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_)
      + sizeof(Vec3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vec3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vec4D::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Vec4D>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Vec4D, _impl_._has_bits_);
};

Vec4D::Vec4D(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vec4D_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.Vec4D)
}
Vec4D::Vec4D(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vec4D& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Vec4D_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Vec4D::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Vec4D::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, w_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::w_));
}
Vec4D::~Vec4D() {
  // @@protoc_insertion_point(destructor:livelinkapi.Vec4D)
  SharedDtor(*this);
}
inline void Vec4D::SharedDtor(MessageLite& self) {
  Vec4D& this_ = static_cast<Vec4D&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Vec4D::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Vec4D(arena);
}
constexpr auto Vec4D::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vec4D),
                                            alignof(Vec4D));
}
constexpr auto Vec4D::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Vec4D_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Vec4D::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Vec4D>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Vec4D::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Vec4D>(), &Vec4D::ByteSizeLong,
              &Vec4D::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Vec4D, _impl_._cached_size_),
          false,
      },
      &Vec4D::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Vec4D_class_data_ =
        Vec4D::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Vec4D::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Vec4D_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Vec4D_class_data_.tc_table);
  return Vec4D_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
Vec4D::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Vec4D, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Vec4D_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::Vec4D>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double w = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.w_)}},
    // double x = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.x_)}},
    // double y = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.y_)}},
    // double z = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1;
    {PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double y = 2;
    {PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double z = 3;
    {PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double w = 4;
    {PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.w_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Vec4D::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.Vec4D)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.w_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.w_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Vec4D::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Vec4D& this_ = static_cast<const Vec4D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Vec4D::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Vec4D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.Vec4D)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_x(), target);
    }
  }

  // double y = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_y(), target);
    }
  }

  // double z = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_z(), target);
    }
  }

  // double w = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_w()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_w(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.Vec4D)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Vec4D::ByteSizeLong(const MessageLite& base) {
  const Vec4D& this_ = static_cast<const Vec4D&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Vec4D::ByteSizeLong() const {
  const Vec4D& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.Vec4D)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // double x = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
        total_size += 9;
      }
    }
    // double y = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
        total_size += 9;
      }
    }
    // double z = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
        total_size += 9;
      }
    }
    // double w = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_w()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Vec4D::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vec4D*>(&to_msg);
  auto& from = static_cast<const Vec4D&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.Vec4D)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
        _this->_impl_.z_ = from._impl_.z_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_w()) != 0) {
        _this->_impl_.w_ = from._impl_.w_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vec4D::CopyFrom(const Vec4D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.Vec4D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vec4D::InternalSwap(Vec4D* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.w_)
      + sizeof(Vec4D::_impl_.w_)
      - PROTOBUF_FIELD_OFFSET(Vec4D, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vec4D::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MatrixD::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MatrixD>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MatrixD, _impl_._has_bits_);
};

MatrixD::MatrixD(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MatrixD_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.MatrixD)
}
PROTOBUF_NDEBUG_INLINE MatrixD::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::MatrixD& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MatrixD::MatrixD(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MatrixD& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MatrixD_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MatrixD* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.row0_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.row0_)
                : nullptr;
  _impl_.row1_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.row1_)
                : nullptr;
  _impl_.row2_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.row2_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:livelinkapi.MatrixD)
}
PROTOBUF_NDEBUG_INLINE MatrixD::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MatrixD::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, row0_),
           0,
           offsetof(Impl_, row2_) -
               offsetof(Impl_, row0_) +
               sizeof(Impl_::row2_));
}
MatrixD::~MatrixD() {
  // @@protoc_insertion_point(destructor:livelinkapi.MatrixD)
  SharedDtor(*this);
}
inline void MatrixD::SharedDtor(MessageLite& self) {
  MatrixD& this_ = static_cast<MatrixD&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.row0_;
  delete this_._impl_.row1_;
  delete this_._impl_.row2_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MatrixD::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MatrixD(arena);
}
constexpr auto MatrixD::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MatrixD),
                                            alignof(MatrixD));
}
constexpr auto MatrixD::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MatrixD_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MatrixD::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MatrixD>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MatrixD::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MatrixD>(), &MatrixD::ByteSizeLong,
              &MatrixD::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MatrixD, _impl_._cached_size_),
          false,
      },
      &MatrixD::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MatrixD_class_data_ =
        MatrixD::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MatrixD::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MatrixD_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MatrixD_class_data_.tc_table);
  return MatrixD_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
MatrixD::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MatrixD, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MatrixD_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::MatrixD>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .livelinkapi.Vec4D row0 = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row0_)}},
    // .livelinkapi.Vec4D row1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row1_)}},
    // .livelinkapi.Vec4D row2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .livelinkapi.Vec4D row0 = 1;
    {PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livelinkapi.Vec4D row1 = 2;
    {PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row1_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livelinkapi.Vec4D row2 = 3;
    {PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row2_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec4D>()},
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec4D>()},
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec4D>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MatrixD::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.MatrixD)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.row0_ != nullptr);
      _impl_.row0_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.row1_ != nullptr);
      _impl_.row1_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.row2_ != nullptr);
      _impl_.row2_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MatrixD::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MatrixD& this_ = static_cast<const MatrixD&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MatrixD::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MatrixD& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.MatrixD)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livelinkapi.Vec4D row0 = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.row0_, this_._impl_.row0_->GetCachedSize(), target,
        stream);
  }

  // .livelinkapi.Vec4D row1 = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.row1_, this_._impl_.row1_->GetCachedSize(), target,
        stream);
  }

  // .livelinkapi.Vec4D row2 = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.row2_, this_._impl_.row2_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.MatrixD)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MatrixD::ByteSizeLong(const MessageLite& base) {
  const MatrixD& this_ = static_cast<const MatrixD&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MatrixD::ByteSizeLong() const {
  const MatrixD& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.MatrixD)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .livelinkapi.Vec4D row0 = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.row0_);
    }
    // .livelinkapi.Vec4D row1 = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.row1_);
    }
    // .livelinkapi.Vec4D row2 = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.row2_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MatrixD::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MatrixD*>(&to_msg);
  auto& from = static_cast<const MatrixD&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.MatrixD)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.row0_ != nullptr);
      if (_this->_impl_.row0_ == nullptr) {
        _this->_impl_.row0_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.row0_);
      } else {
        _this->_impl_.row0_->MergeFrom(*from._impl_.row0_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.row1_ != nullptr);
      if (_this->_impl_.row1_ == nullptr) {
        _this->_impl_.row1_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.row1_);
      } else {
        _this->_impl_.row1_->MergeFrom(*from._impl_.row1_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.row2_ != nullptr);
      if (_this->_impl_.row2_ == nullptr) {
        _this->_impl_.row2_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.row2_);
      } else {
        _this->_impl_.row2_->MergeFrom(*from._impl_.row2_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatrixD::CopyFrom(const MatrixD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.MatrixD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MatrixD::InternalSwap(MatrixD* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row2_)
      + sizeof(MatrixD::_impl_.row2_)
      - PROTOBUF_FIELD_OFFSET(MatrixD, _impl_.row0_)>(
          reinterpret_cast<char*>(&_impl_.row0_),
          reinterpret_cast<char*>(&other->_impl_.row0_));
}

::google::protobuf::Metadata MatrixD::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Mesh::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Mesh>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Mesh, _impl_._has_bits_);
};

Mesh::Mesh(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Mesh_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.Mesh)
}
PROTOBUF_NDEBUG_INLINE Mesh::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::Mesh& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Mesh::Mesh(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Mesh& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Mesh_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Mesh* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objecthandle_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, objecthandle_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, objecthandle_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:livelinkapi.Mesh)
}
PROTOBUF_NDEBUG_INLINE Mesh::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Mesh::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objecthandle_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, objecthandle_) +
               sizeof(Impl_::id_));
}
Mesh::~Mesh() {
  // @@protoc_insertion_point(destructor:livelinkapi.Mesh)
  SharedDtor(*this);
}
inline void Mesh::SharedDtor(MessageLite& self) {
  Mesh& this_ = static_cast<Mesh&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Mesh::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Mesh(arena);
}
constexpr auto Mesh::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Mesh),
                                            alignof(Mesh));
}
constexpr auto Mesh::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Mesh_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Mesh::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Mesh>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Mesh::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Mesh>(), &Mesh::ByteSizeLong,
              &Mesh::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Mesh, _impl_._cached_size_),
          false,
      },
      &Mesh::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Mesh_class_data_ =
        Mesh::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Mesh::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Mesh_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Mesh_class_data_.tc_table);
  return Mesh_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 29, 2>
Mesh::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Mesh, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Mesh_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::Mesh>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Mesh, _impl_.name_)}},
    // int32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Mesh, _impl_.id_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Mesh, _impl_.id_)}},
    // int64 objectHandle = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Mesh, _impl_.objecthandle_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Mesh, _impl_.objecthandle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Mesh, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 id = 2;
    {PROTOBUF_FIELD_OFFSET(Mesh, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 objectHandle = 3;
    {PROTOBUF_FIELD_OFFSET(Mesh, _impl_.objecthandle_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\20\4\0\0\0\0\0\0"
    "livelinkapi.Mesh"
    "name"
  }},
};
PROTOBUF_NOINLINE void Mesh::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.Mesh)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.objecthandle_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.objecthandle_)) + sizeof(_impl_.id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Mesh::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Mesh& this_ = static_cast<const Mesh&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Mesh::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Mesh& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.Mesh)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livelinkapi.Mesh.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_id(), target);
    }
  }

  // int64 objectHandle = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_objecthandle() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_objecthandle(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.Mesh)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Mesh::ByteSizeLong(const MessageLite& base) {
  const Mesh& this_ = static_cast<const Mesh&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Mesh::ByteSizeLong() const {
  const Mesh& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.Mesh)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // int64 objectHandle = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_objecthandle() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_objecthandle());
      }
    }
    // int32 id = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Mesh::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Mesh*>(&to_msg);
  auto& from = static_cast<const Mesh&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.Mesh)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_objecthandle() != 0) {
        _this->_impl_.objecthandle_ = from._impl_.objecthandle_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Mesh::CopyFrom(const Mesh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.Mesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Mesh::InternalSwap(Mesh* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mesh, _impl_.id_)
      + sizeof(Mesh::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Mesh, _impl_.objecthandle_)>(
          reinterpret_cast<char*>(&_impl_.objecthandle_),
          reinterpret_cast<char*>(&other->_impl_.objecthandle_));
}

::google::protobuf::Metadata Mesh::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshList::_Internal {
 public:
};

MeshList::MeshList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeshList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.MeshList)
}
PROTOBUF_NDEBUG_INLINE MeshList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::MeshList& from_msg)
      : meshes_{visibility, arena, from.meshes_},
        _cached_size_{0} {}

MeshList::MeshList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MeshList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeshList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeshList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:livelinkapi.MeshList)
}
PROTOBUF_NDEBUG_INLINE MeshList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : meshes_{visibility, arena},
        _cached_size_{0} {}

inline void MeshList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MeshList::~MeshList() {
  // @@protoc_insertion_point(destructor:livelinkapi.MeshList)
  SharedDtor(*this);
}
inline void MeshList::SharedDtor(MessageLite& self) {
  MeshList& this_ = static_cast<MeshList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MeshList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MeshList(arena);
}
constexpr auto MeshList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MeshList, _impl_.meshes_) +
          decltype(MeshList::_impl_.meshes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MeshList), alignof(MeshList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MeshList::PlacementNew_,
                                 sizeof(MeshList),
                                 alignof(MeshList));
  }
}
constexpr auto MeshList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MeshList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MeshList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MeshList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MeshList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MeshList>(), &MeshList::ByteSizeLong,
              &MeshList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MeshList, _impl_._cached_size_),
          false,
      },
      &MeshList::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MeshList_class_data_ =
        MeshList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MeshList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MeshList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MeshList_class_data_.tc_table);
  return MeshList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
MeshList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MeshList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::MeshList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .livelinkapi.Mesh meshes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MeshList, _impl_.meshes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .livelinkapi.Mesh meshes = 1;
    {PROTOBUF_FIELD_OFFSET(MeshList, _impl_.meshes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livelinkapi::Mesh>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MeshList::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.MeshList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.meshes_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MeshList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MeshList& this_ = static_cast<const MeshList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MeshList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MeshList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.MeshList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .livelinkapi.Mesh meshes = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_meshes_size());
       i < n; i++) {
    const auto& repfield = this_._internal_meshes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.MeshList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MeshList::ByteSizeLong(const MessageLite& base) {
  const MeshList& this_ = static_cast<const MeshList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MeshList::ByteSizeLong() const {
  const MeshList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.MeshList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .livelinkapi.Mesh meshes = 1;
    {
      total_size += 1UL * this_._internal_meshes_size();
      for (const auto& msg : this_._internal_meshes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MeshList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshList*>(&to_msg);
  auto& from = static_cast<const MeshList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.MeshList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_meshes()->MergeFrom(
      from._internal_meshes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshList::CopyFrom(const MeshList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.MeshList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeshList::InternalSwap(MeshList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.meshes_.InternalSwap(&other->_impl_.meshes_);
}

::google::protobuf::Metadata MeshList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CameraState::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::livelinkapi::CameraState, _impl_._oneof_case_);
};

void CameraState::set_allocated_position(::livelinkapi::Vec3* PROTOBUF_NULLABLE position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_pos_set();
  if (position) {
    ::google::protobuf::Arena* submessage_arena = position->GetArena();
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(message_arena, position, submessage_arena);
    }
    set_has_position();
    _impl_.pos_set_.position_ = position;
  }
  // @@protoc_insertion_point(field_set_allocated:livelinkapi.CameraState.position)
}
void CameraState::set_allocated_target(::livelinkapi::Vec3* PROTOBUF_NULLABLE target) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_target_set();
  if (target) {
    ::google::protobuf::Arena* submessage_arena = target->GetArena();
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(message_arena, target, submessage_arena);
    }
    set_has_target();
    _impl_.target_set_.target_ = target;
  }
  // @@protoc_insertion_point(field_set_allocated:livelinkapi.CameraState.target)
}
void CameraState::set_allocated_up(::livelinkapi::Vec3* PROTOBUF_NULLABLE up) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_up_set();
  if (up) {
    ::google::protobuf::Arena* submessage_arena = up->GetArena();
    if (message_arena != submessage_arena) {
      up = ::google::protobuf::internal::GetOwnedMessage(message_arena, up, submessage_arena);
    }
    set_has_up();
    _impl_.up_set_.up_ = up;
  }
  // @@protoc_insertion_point(field_set_allocated:livelinkapi.CameraState.up)
}
CameraState::CameraState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.CameraState)
}
PROTOBUF_NDEBUG_INLINE CameraState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::CameraState& from_msg)
      : pos_set_{},
        target_set_{},
        up_set_{},
        fov_set_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0], from._oneof_case_[1], from._oneof_case_[2], from._oneof_case_[3]} {}

CameraState::CameraState(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CameraState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CameraState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CameraState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (pos_set_case()) {
    case POS_SET_NOT_SET:
      break;
      case kPosition:
        _impl_.pos_set_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_set_.position_);
        break;
  }
  switch (target_set_case()) {
    case TARGET_SET_NOT_SET:
      break;
      case kTarget:
        _impl_.target_set_.target_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.target_set_.target_);
        break;
  }
  switch (up_set_case()) {
    case UP_SET_NOT_SET:
      break;
      case kUp:
        _impl_.up_set_.up_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.up_set_.up_);
        break;
  }
  switch (fov_set_case()) {
    case FOV_SET_NOT_SET:
      break;
      case kFov:
        _impl_.fov_set_.fov_ = from._impl_.fov_set_.fov_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:livelinkapi.CameraState)
}
PROTOBUF_NDEBUG_INLINE CameraState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : pos_set_{},
        target_set_{},
        up_set_{},
        fov_set_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CameraState::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CameraState::~CameraState() {
  // @@protoc_insertion_point(destructor:livelinkapi.CameraState)
  SharedDtor(*this);
}
inline void CameraState::SharedDtor(MessageLite& self) {
  CameraState& this_ = static_cast<CameraState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_pos_set()) {
    this_.clear_pos_set();
  }
  if (this_.has_target_set()) {
    this_.clear_target_set();
  }
  if (this_.has_up_set()) {
    this_.clear_up_set();
  }
  if (this_.has_fov_set()) {
    this_.clear_fov_set();
  }
  this_._impl_.~Impl_();
}

void CameraState::clear_pos_set() {
// @@protoc_insertion_point(one_of_clear_start:livelinkapi.CameraState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (pos_set_case()) {
    case kPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.pos_set_.position_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pos_set_.position_);
      }
      break;
    }
    case POS_SET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = POS_SET_NOT_SET;
}

void CameraState::clear_target_set() {
// @@protoc_insertion_point(one_of_clear_start:livelinkapi.CameraState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (target_set_case()) {
    case kTarget: {
      if (GetArena() == nullptr) {
        delete _impl_.target_set_.target_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.target_set_.target_);
      }
      break;
    }
    case TARGET_SET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = TARGET_SET_NOT_SET;
}

void CameraState::clear_up_set() {
// @@protoc_insertion_point(one_of_clear_start:livelinkapi.CameraState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (up_set_case()) {
    case kUp: {
      if (GetArena() == nullptr) {
        delete _impl_.up_set_.up_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.up_set_.up_);
      }
      break;
    }
    case UP_SET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[2] = UP_SET_NOT_SET;
}

void CameraState::clear_fov_set() {
// @@protoc_insertion_point(one_of_clear_start:livelinkapi.CameraState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (fov_set_case()) {
    case kFov: {
      // No need to clear
      break;
    }
    case FOV_SET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[3] = FOV_SET_NOT_SET;
}


inline void* PROTOBUF_NONNULL CameraState::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CameraState(arena);
}
constexpr auto CameraState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CameraState),
                                            alignof(CameraState));
}
constexpr auto CameraState::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CameraState_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CameraState::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CameraState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CameraState::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CameraState>(), &CameraState::ByteSizeLong,
              &CameraState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CameraState, _impl_._cached_size_),
          false,
      },
      &CameraState::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CameraState_class_data_ =
        CameraState::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CameraState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CameraState_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CameraState_class_data_.tc_table);
  return CameraState_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 3, 0, 2>
CameraState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CameraState_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::CameraState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .livelinkapi.Vec3 position = 1;
    {PROTOBUF_FIELD_OFFSET(CameraState, _impl_.pos_set_.position_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livelinkapi.Vec3 target = 2;
    {PROTOBUF_FIELD_OFFSET(CameraState, _impl_.target_set_.target_), _Internal::kOneofCaseOffset + 4, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .livelinkapi.Vec3 up = 3;
    {PROTOBUF_FIELD_OFFSET(CameraState, _impl_.up_set_.up_), _Internal::kOneofCaseOffset + 8, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // float fov = 4;
    {PROTOBUF_FIELD_OFFSET(CameraState, _impl_.fov_set_.fov_), _Internal::kOneofCaseOffset + 12, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec3>()},
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec3>()},
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec3>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CameraState::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.CameraState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_pos_set();
  clear_target_set();
  clear_up_set();
  clear_fov_set();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CameraState::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CameraState& this_ = static_cast<const CameraState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CameraState::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CameraState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.CameraState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .livelinkapi.Vec3 position = 1;
  if (this_.pos_set_case() == kPosition) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.pos_set_.position_, this_._impl_.pos_set_.position_->GetCachedSize(), target,
        stream);
  }

  // .livelinkapi.Vec3 target = 2;
  if (this_.target_set_case() == kTarget) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.target_set_.target_, this_._impl_.target_set_.target_->GetCachedSize(), target,
        stream);
  }

  // .livelinkapi.Vec3 up = 3;
  if (this_.up_set_case() == kUp) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.up_set_.up_, this_._impl_.up_set_.up_->GetCachedSize(), target,
        stream);
  }

  // float fov = 4;
  if (this_.fov_set_case() == kFov) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this_._internal_fov(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.CameraState)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CameraState::ByteSizeLong(const MessageLite& base) {
  const CameraState& this_ = static_cast<const CameraState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CameraState::ByteSizeLong() const {
  const CameraState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.CameraState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.pos_set_case()) {
    // .livelinkapi.Vec3 position = 1;
    case kPosition: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pos_set_.position_);
      break;
    }
    case POS_SET_NOT_SET: {
      break;
    }
  }
  switch (this_.target_set_case()) {
    // .livelinkapi.Vec3 target = 2;
    case kTarget: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_set_.target_);
      break;
    }
    case TARGET_SET_NOT_SET: {
      break;
    }
  }
  switch (this_.up_set_case()) {
    // .livelinkapi.Vec3 up = 3;
    case kUp: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.up_set_.up_);
      break;
    }
    case UP_SET_NOT_SET: {
      break;
    }
  }
  switch (this_.fov_set_case()) {
    // float fov = 4;
    case kFov: {
      total_size += 5;
      break;
    }
    case FOV_SET_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CameraState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraState*>(&to_msg);
  auto& from = static_cast<const CameraState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.CameraState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_pos_set();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPosition: {
        if (oneof_needs_init) {
          _this->_impl_.pos_set_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pos_set_.position_);
        } else {
          _this->_impl_.pos_set_.position_->MergeFrom(*from._impl_.pos_set_.position_);
        }
        break;
      }
      case POS_SET_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[1]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[1];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_target_set();
      }
      _this->_impl_._oneof_case_[1] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTarget: {
        if (oneof_needs_init) {
          _this->_impl_.target_set_.target_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.target_set_.target_);
        } else {
          _this->_impl_.target_set_.target_->MergeFrom(*from._impl_.target_set_.target_);
        }
        break;
      }
      case TARGET_SET_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[2]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[2];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_up_set();
      }
      _this->_impl_._oneof_case_[2] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUp: {
        if (oneof_needs_init) {
          _this->_impl_.up_set_.up_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.up_set_.up_);
        } else {
          _this->_impl_.up_set_.up_->MergeFrom(*from._impl_.up_set_.up_);
        }
        break;
      }
      case UP_SET_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[3]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[3];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_fov_set();
      }
      _this->_impl_._oneof_case_[3] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFov: {
        _this->_impl_.fov_set_.fov_ = from._impl_.fov_set_.fov_;
        break;
      }
      case FOV_SET_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraState::CopyFrom(const CameraState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.CameraState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraState::InternalSwap(CameraState* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.pos_set_, other->_impl_.pos_set_);
  swap(_impl_.target_set_, other->_impl_.target_set_);
  swap(_impl_.up_set_, other->_impl_.up_set_);
  swap(_impl_.fov_set_, other->_impl_.fov_set_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
  swap(_impl_._oneof_case_[2], other->_impl_._oneof_case_[2]);
  swap(_impl_._oneof_case_[3], other->_impl_._oneof_case_[3]);
}

::google::protobuf::Metadata CameraState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FileRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FileRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FileRequest, _impl_._has_bits_);
};

FileRequest::FileRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FileRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.FileRequest)
}
PROTOBUF_NDEBUG_INLINE FileRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::FileRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        filepath_(arena, from.filepath_) {}

FileRequest::FileRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FileRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FileRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FileRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:livelinkapi.FileRequest)
}
PROTOBUF_NDEBUG_INLINE FileRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        filepath_(arena) {}

inline void FileRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FileRequest::~FileRequest() {
  // @@protoc_insertion_point(destructor:livelinkapi.FileRequest)
  SharedDtor(*this);
}
inline void FileRequest::SharedDtor(MessageLite& self) {
  FileRequest& this_ = static_cast<FileRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.filepath_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FileRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FileRequest(arena);
}
constexpr auto FileRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FileRequest),
                                            alignof(FileRequest));
}
constexpr auto FileRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FileRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FileRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FileRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FileRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FileRequest>(), &FileRequest::ByteSizeLong,
              &FileRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FileRequest, _impl_._cached_size_),
          false,
      },
      &FileRequest::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FileRequest_class_data_ =
        FileRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FileRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FileRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FileRequest_class_data_.tc_table);
  return FileRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2>
FileRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FileRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::FileRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string filepath = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FileRequest, _impl_.filepath_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filepath = 1;
    {PROTOBUF_FIELD_OFFSET(FileRequest, _impl_.filepath_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\10\0\0\0\0\0\0"
    "livelinkapi.FileRequest"
    "filepath"
  }},
};
PROTOBUF_NOINLINE void FileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.FileRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.filepath_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FileRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FileRequest& this_ = static_cast<const FileRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FileRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FileRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.FileRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string filepath = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_filepath().empty()) {
      const ::std::string& _s = this_._internal_filepath();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livelinkapi.FileRequest.filepath");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.FileRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FileRequest::ByteSizeLong(const MessageLite& base) {
  const FileRequest& this_ = static_cast<const FileRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FileRequest::ByteSizeLong() const {
  const FileRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.FileRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string filepath = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_filepath().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_filepath());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FileRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FileRequest*>(&to_msg);
  auto& from = static_cast<const FileRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.FileRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_filepath().empty()) {
      _this->_internal_set_filepath(from._internal_filepath());
    } else {
      if (_this->_impl_.filepath_.IsDefault()) {
        _this->_internal_set_filepath("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileRequest::CopyFrom(const FileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.FileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FileRequest::InternalSwap(FileRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filepath_, &other->_impl_.filepath_, arena);
}

::google::protobuf::Metadata FileRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FileResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FileResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FileResponse, _impl_._has_bits_);
};

FileResponse::FileResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FileResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.FileResponse)
}
PROTOBUF_NDEBUG_INLINE FileResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::FileResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        filedata_(arena, from.filedata_) {}

FileResponse::FileResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FileResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FileResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FileResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:livelinkapi.FileResponse)
}
PROTOBUF_NDEBUG_INLINE FileResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        filedata_(arena) {}

inline void FileResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FileResponse::~FileResponse() {
  // @@protoc_insertion_point(destructor:livelinkapi.FileResponse)
  SharedDtor(*this);
}
inline void FileResponse::SharedDtor(MessageLite& self) {
  FileResponse& this_ = static_cast<FileResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.filedata_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FileResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FileResponse(arena);
}
constexpr auto FileResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FileResponse),
                                            alignof(FileResponse));
}
constexpr auto FileResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FileResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FileResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FileResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FileResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FileResponse>(), &FileResponse::ByteSizeLong,
              &FileResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FileResponse, _impl_._cached_size_),
          false,
      },
      &FileResponse::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FileResponse_class_data_ =
        FileResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FileResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FileResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FileResponse_class_data_.tc_table);
  return FileResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
FileResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FileResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::FileResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes filedata = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FileResponse, _impl_.filedata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes filedata = 1;
    {PROTOBUF_FIELD_OFFSET(FileResponse, _impl_.filedata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void FileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.FileResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.filedata_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FileResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FileResponse& this_ = static_cast<const FileResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FileResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FileResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.FileResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes filedata = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_filedata().empty()) {
      const ::std::string& _s = this_._internal_filedata();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.FileResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FileResponse::ByteSizeLong(const MessageLite& base) {
  const FileResponse& this_ = static_cast<const FileResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FileResponse::ByteSizeLong() const {
  const FileResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.FileResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bytes filedata = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_filedata().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_filedata());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FileResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FileResponse*>(&to_msg);
  auto& from = static_cast<const FileResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.FileResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_filedata().empty()) {
      _this->_internal_set_filedata(from._internal_filedata());
    } else {
      if (_this->_impl_.filedata_.IsDefault()) {
        _this->_internal_set_filedata("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileResponse::CopyFrom(const FileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.FileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FileResponse::InternalSwap(FileResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filedata_, &other->_impl_.filedata_, arena);
}

::google::protobuf::Metadata FileResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MeshRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_._has_bits_);
};

MeshRequest::MeshRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeshRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.MeshRequest)
}
MeshRequest::MeshRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MeshRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeshRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MeshRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MeshRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.objecthandle_ = {};
}
MeshRequest::~MeshRequest() {
  // @@protoc_insertion_point(destructor:livelinkapi.MeshRequest)
  SharedDtor(*this);
}
inline void MeshRequest::SharedDtor(MessageLite& self) {
  MeshRequest& this_ = static_cast<MeshRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MeshRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MeshRequest(arena);
}
constexpr auto MeshRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MeshRequest),
                                            alignof(MeshRequest));
}
constexpr auto MeshRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MeshRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MeshRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MeshRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MeshRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MeshRequest>(), &MeshRequest::ByteSizeLong,
              &MeshRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_._cached_size_),
          false,
      },
      &MeshRequest::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MeshRequest_class_data_ =
        MeshRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MeshRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MeshRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MeshRequest_class_data_.tc_table);
  return MeshRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
MeshRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MeshRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::MeshRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 objecthandle = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeshRequest, _impl_.objecthandle_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_.objecthandle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 objecthandle = 1;
    {PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_.objecthandle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MeshRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.MeshRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.objecthandle_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MeshRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MeshRequest& this_ = static_cast<const MeshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MeshRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MeshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.MeshRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 objecthandle = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_objecthandle() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_objecthandle(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.MeshRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MeshRequest::ByteSizeLong(const MessageLite& base) {
  const MeshRequest& this_ = static_cast<const MeshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MeshRequest::ByteSizeLong() const {
  const MeshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.MeshRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 objecthandle = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_objecthandle() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_objecthandle());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MeshRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshRequest*>(&to_msg);
  auto& from = static_cast<const MeshRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.MeshRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_objecthandle() != 0) {
      _this->_impl_.objecthandle_ = from._impl_.objecthandle_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshRequest::CopyFrom(const MeshRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.MeshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeshRequest::InternalSwap(MeshRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.objecthandle_, other->_impl_.objecthandle_);
}

::google::protobuf::Metadata MeshRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StreamStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StreamStatus, _impl_._has_bits_);
};

StreamStatus::StreamStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.StreamStatus)
}
PROTOBUF_NDEBUG_INLINE StreamStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::StreamStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

StreamStatus::StreamStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StreamStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StreamStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StreamStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:livelinkapi.StreamStatus)
}
PROTOBUF_NDEBUG_INLINE StreamStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void StreamStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StreamStatus::~StreamStatus() {
  // @@protoc_insertion_point(destructor:livelinkapi.StreamStatus)
  SharedDtor(*this);
}
inline void StreamStatus::SharedDtor(MessageLite& self) {
  StreamStatus& this_ = static_cast<StreamStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StreamStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StreamStatus(arena);
}
constexpr auto StreamStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StreamStatus),
                                            alignof(StreamStatus));
}
constexpr auto StreamStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StreamStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StreamStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StreamStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StreamStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StreamStatus>(), &StreamStatus::ByteSizeLong,
              &StreamStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StreamStatus, _impl_._cached_size_),
          false,
      },
      &StreamStatus::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StreamStatus_class_data_ =
        StreamStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StreamStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StreamStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StreamStatus_class_data_.tc_table);
  return StreamStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2>
StreamStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StreamStatus, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StreamStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::StreamStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StreamStatus, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(StreamStatus, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\7\0\0\0\0\0\0"
    "livelinkapi.StreamStatus"
    "message"
  }},
};
PROTOBUF_NOINLINE void StreamStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.StreamStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StreamStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StreamStatus& this_ = static_cast<const StreamStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StreamStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StreamStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.StreamStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livelinkapi.StreamStatus.message");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.StreamStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StreamStatus::ByteSizeLong(const MessageLite& base) {
  const StreamStatus& this_ = static_cast<const StreamStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StreamStatus::ByteSizeLong() const {
  const StreamStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.StreamStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string message = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StreamStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamStatus*>(&to_msg);
  auto& from = static_cast<const StreamStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.StreamStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_message().empty()) {
      _this->_internal_set_message(from._internal_message());
    } else {
      if (_this->_impl_.message_.IsDefault()) {
        _this->_internal_set_message("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamStatus::CopyFrom(const StreamStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.StreamStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StreamStatus::InternalSwap(StreamStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata StreamStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MeshData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MeshData, _impl_._has_bits_);
};

MeshData::MeshData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeshData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:livelinkapi.MeshData)
}
PROTOBUF_NDEBUG_INLINE MeshData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::livelinkapi::MeshData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        positions_{visibility, arena, from.positions_},
        normals_{visibility, arena, from.normals_},
        vertsperpoly_{visibility, arena, from.vertsperpoly_},
        _vertsperpoly_cached_byte_size_{0},
        polyvertindices_{visibility, arena, from.polyvertindices_},
        _polyvertindices_cached_byte_size_{0},
        polynormalindices_{visibility, arena, from.polynormalindices_},
        _polynormalindices_cached_byte_size_{0},
        name_(arena, from.name_) {}

MeshData::MeshData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MeshData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MeshData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeshData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.worldmatrix_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.worldmatrix_)
                : nullptr;
  _impl_.windingorder_ = from._impl_.windingorder_;

  // @@protoc_insertion_point(copy_constructor:livelinkapi.MeshData)
}
PROTOBUF_NDEBUG_INLINE MeshData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        positions_{visibility, arena},
        normals_{visibility, arena},
        vertsperpoly_{visibility, arena},
        _vertsperpoly_cached_byte_size_{0},
        polyvertindices_{visibility, arena},
        _polyvertindices_cached_byte_size_{0},
        polynormalindices_{visibility, arena},
        _polynormalindices_cached_byte_size_{0},
        name_(arena) {}

inline void MeshData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, worldmatrix_),
           0,
           offsetof(Impl_, windingorder_) -
               offsetof(Impl_, worldmatrix_) +
               sizeof(Impl_::windingorder_));
}
MeshData::~MeshData() {
  // @@protoc_insertion_point(destructor:livelinkapi.MeshData)
  SharedDtor(*this);
}
inline void MeshData::SharedDtor(MessageLite& self) {
  MeshData& this_ = static_cast<MeshData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.worldmatrix_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MeshData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MeshData(arena);
}
constexpr auto MeshData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MeshData, _impl_.positions_) +
          decltype(MeshData::_impl_.positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MeshData, _impl_.normals_) +
          decltype(MeshData::_impl_.normals_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MeshData, _impl_.vertsperpoly_) +
          decltype(MeshData::_impl_.vertsperpoly_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MeshData, _impl_.polyvertindices_) +
          decltype(MeshData::_impl_.polyvertindices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MeshData, _impl_.polynormalindices_) +
          decltype(MeshData::_impl_.polynormalindices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MeshData), alignof(MeshData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MeshData::PlacementNew_,
                                 sizeof(MeshData),
                                 alignof(MeshData));
  }
}
constexpr auto MeshData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MeshData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MeshData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MeshData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MeshData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MeshData>(), &MeshData::ByteSizeLong,
              &MeshData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MeshData, _impl_._cached_size_),
          false,
      },
      &MeshData::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MeshData_class_data_ =
        MeshData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MeshData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MeshData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MeshData_class_data_.tc_table);
  return MeshData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 41, 2>
MeshData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MeshData, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MeshData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::MeshData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .livelinkapi.MatrixD worldMatrix = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 2, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.worldmatrix_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.name_)}},
    // repeated .livelinkapi.Vec3 positions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.positions_)}},
    // repeated .livelinkapi.Vec3 normals = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.normals_)}},
    // repeated uint32 vertsPerPoly = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.vertsperpoly_)}},
    // repeated uint32 polyVertIndices = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.polyvertindices_)}},
    // repeated uint32 polyNormalIndices = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.polynormalindices_)}},
    // int32 windingOrder = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MeshData, _impl_.windingorder_), 2>(),
     {56, 2, 0, PROTOBUF_FIELD_OFFSET(MeshData, _impl_.windingorder_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .livelinkapi.Vec3 positions = 2;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.positions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .livelinkapi.Vec3 normals = 3;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.normals_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint32 vertsPerPoly = 4;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.vertsperpoly_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 polyVertIndices = 5;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.polyvertindices_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 polyNormalIndices = 6;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.polynormalindices_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // int32 windingOrder = 7;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.windingorder_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .livelinkapi.MatrixD worldMatrix = 8;
    {PROTOBUF_FIELD_OFFSET(MeshData, _impl_.worldmatrix_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec3>()},
      {::_pbi::TcParser::GetTable<::livelinkapi::Vec3>()},
      {::_pbi::TcParser::GetTable<::livelinkapi::MatrixD>()},
  }},
  {{
    "\24\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "livelinkapi.MeshData"
    "name"
  }},
};
PROTOBUF_NOINLINE void MeshData::Clear() {
// @@protoc_insertion_point(message_clear_start:livelinkapi.MeshData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positions_.Clear();
  _impl_.normals_.Clear();
  _impl_.vertsperpoly_.Clear();
  _impl_.polyvertindices_.Clear();
  _impl_.polynormalindices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.worldmatrix_ != nullptr);
      _impl_.worldmatrix_->Clear();
    }
  }
  _impl_.windingorder_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MeshData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MeshData& this_ = static_cast<const MeshData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MeshData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MeshData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:livelinkapi.MeshData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "livelinkapi.MeshData.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .livelinkapi.Vec3 positions = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_positions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_positions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .livelinkapi.Vec3 normals = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_normals_size());
       i < n; i++) {
    const auto& repfield = this_._internal_normals().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint32 vertsPerPoly = 4;
  {
    int byte_size = this_._impl_._vertsperpoly_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, this_._internal_vertsperpoly(), byte_size, target);
    }
  }

  // repeated uint32 polyVertIndices = 5;
  {
    int byte_size = this_._impl_._polyvertindices_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          5, this_._internal_polyvertindices(), byte_size, target);
    }
  }

  // repeated uint32 polyNormalIndices = 6;
  {
    int byte_size = this_._impl_._polynormalindices_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          6, this_._internal_polynormalindices(), byte_size, target);
    }
  }

  // int32 windingOrder = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_windingorder() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_windingorder(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .livelinkapi.MatrixD worldMatrix = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.worldmatrix_, this_._impl_.worldmatrix_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livelinkapi.MeshData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MeshData::ByteSizeLong(const MessageLite& base) {
  const MeshData& this_ = static_cast<const MeshData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MeshData::ByteSizeLong() const {
  const MeshData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:livelinkapi.MeshData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .livelinkapi.Vec3 positions = 2;
    {
      total_size += 1UL * this_._internal_positions_size();
      for (const auto& msg : this_._internal_positions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .livelinkapi.Vec3 normals = 3;
    {
      total_size += 1UL * this_._internal_normals_size();
      for (const auto& msg : this_._internal_normals()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated uint32 vertsPerPoly = 4;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_vertsperpoly(), 1,
              this_._impl_._vertsperpoly_cached_byte_size_);
    }
    // repeated uint32 polyVertIndices = 5;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_polyvertindices(), 1,
              this_._impl_._polyvertindices_cached_byte_size_);
    }
    // repeated uint32 polyNormalIndices = 6;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_polynormalindices(), 1,
              this_._impl_._polynormalindices_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .livelinkapi.MatrixD worldMatrix = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.worldmatrix_);
    }
    // int32 windingOrder = 7;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_windingorder() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_windingorder());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MeshData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshData*>(&to_msg);
  auto& from = static_cast<const MeshData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:livelinkapi.MeshData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  _this->_internal_mutable_normals()->MergeFrom(
      from._internal_normals());
  _this->_internal_mutable_vertsperpoly()->MergeFrom(from._internal_vertsperpoly());
  _this->_internal_mutable_polyvertindices()->MergeFrom(from._internal_polyvertindices());
  _this->_internal_mutable_polynormalindices()->MergeFrom(from._internal_polynormalindices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.worldmatrix_ != nullptr);
      if (_this->_impl_.worldmatrix_ == nullptr) {
        _this->_impl_.worldmatrix_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.worldmatrix_);
      } else {
        _this->_impl_.worldmatrix_->MergeFrom(*from._impl_.worldmatrix_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_windingorder() != 0) {
        _this->_impl_.windingorder_ = from._impl_.windingorder_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshData::CopyFrom(const MeshData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livelinkapi.MeshData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeshData::InternalSwap(MeshData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
  _impl_.normals_.InternalSwap(&other->_impl_.normals_);
  _impl_.vertsperpoly_.InternalSwap(&other->_impl_.vertsperpoly_);
  _impl_.polyvertindices_.InternalSwap(&other->_impl_.polyvertindices_);
  _impl_.polynormalindices_.InternalSwap(&other->_impl_.polynormalindices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeshData, _impl_.windingorder_)
      + sizeof(MeshData::_impl_.windingorder_)
      - PROTOBUF_FIELD_OFFSET(MeshData, _impl_.worldmatrix_)>(
          reinterpret_cast<char*>(&_impl_.worldmatrix_),
          reinterpret_cast<char*>(&other->_impl_.worldmatrix_));
}

::google::protobuf::Metadata MeshData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, Empty_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:livelinkapi.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Empty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, Empty_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:livelinkapi.Empty)
}

inline void* PROTOBUF_NONNULL Empty::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Empty(arena);
}
constexpr auto Empty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Empty),
                                            alignof(Empty));
}
constexpr auto Empty::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Empty_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Empty::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Empty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Empty::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Empty>(), &Empty::ByteSizeLong,
              &Empty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
          false,
      },
      &Empty::kDescriptorMethods,
      &descriptor_table_livelink_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Empty_class_data_ =
        Empty::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Empty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Empty_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Empty_class_data_.tc_table);
  return Empty_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Empty_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::livelinkapi::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace livelinkapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_livelink_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
