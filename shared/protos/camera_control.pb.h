// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: camera_control.proto
// Protobuf C++ Version: 6.31.1

#ifndef camera_5fcontrol_2eproto_2epb_2eh
#define camera_5fcontrol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_camera_5fcontrol_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_camera_5fcontrol_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_camera_5fcontrol_2eproto;
}  // extern "C"
namespace octaneapi {
class CameraPositionRequest;
struct CameraPositionRequestDefaultTypeInternal;
extern CameraPositionRequestDefaultTypeInternal _CameraPositionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraPositionRequest_class_data_;
class CameraPositionResponse;
struct CameraPositionResponseDefaultTypeInternal;
extern CameraPositionResponseDefaultTypeInternal _CameraPositionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraPositionResponse_class_data_;
class CameraTargetRequest;
struct CameraTargetRequestDefaultTypeInternal;
extern CameraTargetRequestDefaultTypeInternal _CameraTargetRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraTargetRequest_class_data_;
class CameraTargetResponse;
struct CameraTargetResponseDefaultTypeInternal;
extern CameraTargetResponseDefaultTypeInternal _CameraTargetResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraTargetResponse_class_data_;
class CameraUpRequest;
struct CameraUpRequestDefaultTypeInternal;
extern CameraUpRequestDefaultTypeInternal _CameraUpRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraUpRequest_class_data_;
class CameraUpResponse;
struct CameraUpResponseDefaultTypeInternal;
extern CameraUpResponseDefaultTypeInternal _CameraUpResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CameraUpResponse_class_data_;
class Vector3;
struct Vector3DefaultTypeInternal;
extern Vector3DefaultTypeInternal _Vector3_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Vector3_class_data_;
}  // namespace octaneapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace octaneapi {

// ===================================================================


// -------------------------------------------------------------------

class Vector3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.Vector3) */ {
 public:
  inline Vector3() : Vector3(nullptr) {}
  ~Vector3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Vector3* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Vector3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Vector3(::google::protobuf::internal::ConstantInitialized);

  inline Vector3(const Vector3& from) : Vector3(nullptr, from) {}
  inline Vector3(Vector3&& from) noexcept
      : Vector3(nullptr, ::std::move(from)) {}
  inline Vector3& operator=(const Vector3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3& operator=(Vector3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3& default_instance() {
    return *reinterpret_cast<const Vector3*>(
        &_Vector3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Vector3& a, Vector3& b) { a.Swap(&b); }
  inline void Swap(Vector3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Vector3>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Vector3* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.Vector3"; }

 protected:
  explicit Vector3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Vector3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Vector3& from);
  Vector3(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Vector3&& from) noexcept
      : Vector3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.Vector3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Vector3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_5fcontrol_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Vector3_class_data_;
// -------------------------------------------------------------------

class CameraUpResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.CameraUpResponse) */ {
 public:
  inline CameraUpResponse() : CameraUpResponse(nullptr) {}
  ~CameraUpResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraUpResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraUpResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraUpResponse(::google::protobuf::internal::ConstantInitialized);

  inline CameraUpResponse(const CameraUpResponse& from) : CameraUpResponse(nullptr, from) {}
  inline CameraUpResponse(CameraUpResponse&& from) noexcept
      : CameraUpResponse(nullptr, ::std::move(from)) {}
  inline CameraUpResponse& operator=(const CameraUpResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraUpResponse& operator=(CameraUpResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraUpResponse& default_instance() {
    return *reinterpret_cast<const CameraUpResponse*>(
        &_CameraUpResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CameraUpResponse& a, CameraUpResponse& b) { a.Swap(&b); }
  inline void Swap(CameraUpResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraUpResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraUpResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraUpResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraUpResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.CameraUpResponse"; }

 protected:
  explicit CameraUpResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraUpResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraUpResponse& from);
  CameraUpResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraUpResponse&& from) noexcept
      : CameraUpResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpFieldNumber = 1,
  };
  // .octaneapi.Vector3 up = 1;
  bool has_up() const;
  void clear_up() ;
  const ::octaneapi::Vector3& up() const;
  [[nodiscard]] ::octaneapi::Vector3* PROTOBUF_NULLABLE release_up();
  ::octaneapi::Vector3* PROTOBUF_NONNULL mutable_up();
  void set_allocated_up(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_up(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  ::octaneapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_up();

  private:
  const ::octaneapi::Vector3& _internal_up() const;
  ::octaneapi::Vector3* PROTOBUF_NONNULL _internal_mutable_up();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.CameraUpResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraUpResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::Vector3* PROTOBUF_NULLABLE up_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_5fcontrol_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraUpResponse_class_data_;
// -------------------------------------------------------------------

class CameraUpRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.CameraUpRequest) */ {
 public:
  inline CameraUpRequest() : CameraUpRequest(nullptr) {}
  ~CameraUpRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraUpRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraUpRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraUpRequest(::google::protobuf::internal::ConstantInitialized);

  inline CameraUpRequest(const CameraUpRequest& from) : CameraUpRequest(nullptr, from) {}
  inline CameraUpRequest(CameraUpRequest&& from) noexcept
      : CameraUpRequest(nullptr, ::std::move(from)) {}
  inline CameraUpRequest& operator=(const CameraUpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraUpRequest& operator=(CameraUpRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraUpRequest& default_instance() {
    return *reinterpret_cast<const CameraUpRequest*>(
        &_CameraUpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CameraUpRequest& a, CameraUpRequest& b) { a.Swap(&b); }
  inline void Swap(CameraUpRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraUpRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraUpRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraUpRequest>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraUpRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.CameraUpRequest"; }

 protected:
  explicit CameraUpRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraUpRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraUpRequest& from);
  CameraUpRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraUpRequest&& from) noexcept
      : CameraUpRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpFieldNumber = 1,
  };
  // .octaneapi.Vector3 up = 1;
  bool has_up() const;
  void clear_up() ;
  const ::octaneapi::Vector3& up() const;
  [[nodiscard]] ::octaneapi::Vector3* PROTOBUF_NULLABLE release_up();
  ::octaneapi::Vector3* PROTOBUF_NONNULL mutable_up();
  void set_allocated_up(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_up(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  ::octaneapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_up();

  private:
  const ::octaneapi::Vector3& _internal_up() const;
  ::octaneapi::Vector3* PROTOBUF_NONNULL _internal_mutable_up();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.CameraUpRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraUpRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::Vector3* PROTOBUF_NULLABLE up_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_5fcontrol_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraUpRequest_class_data_;
// -------------------------------------------------------------------

class CameraTargetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.CameraTargetResponse) */ {
 public:
  inline CameraTargetResponse() : CameraTargetResponse(nullptr) {}
  ~CameraTargetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraTargetResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraTargetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraTargetResponse(::google::protobuf::internal::ConstantInitialized);

  inline CameraTargetResponse(const CameraTargetResponse& from) : CameraTargetResponse(nullptr, from) {}
  inline CameraTargetResponse(CameraTargetResponse&& from) noexcept
      : CameraTargetResponse(nullptr, ::std::move(from)) {}
  inline CameraTargetResponse& operator=(const CameraTargetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraTargetResponse& operator=(CameraTargetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraTargetResponse& default_instance() {
    return *reinterpret_cast<const CameraTargetResponse*>(
        &_CameraTargetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CameraTargetResponse& a, CameraTargetResponse& b) { a.Swap(&b); }
  inline void Swap(CameraTargetResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraTargetResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraTargetResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraTargetResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraTargetResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.CameraTargetResponse"; }

 protected:
  explicit CameraTargetResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraTargetResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraTargetResponse& from);
  CameraTargetResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraTargetResponse&& from) noexcept
      : CameraTargetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
  };
  // .octaneapi.Vector3 target = 1;
  bool has_target() const;
  void clear_target() ;
  const ::octaneapi::Vector3& target() const;
  [[nodiscard]] ::octaneapi::Vector3* PROTOBUF_NULLABLE release_target();
  ::octaneapi::Vector3* PROTOBUF_NONNULL mutable_target();
  void set_allocated_target(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_target(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  ::octaneapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_target();

  private:
  const ::octaneapi::Vector3& _internal_target() const;
  ::octaneapi::Vector3* PROTOBUF_NONNULL _internal_mutable_target();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.CameraTargetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraTargetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::Vector3* PROTOBUF_NULLABLE target_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_5fcontrol_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraTargetResponse_class_data_;
// -------------------------------------------------------------------

class CameraTargetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.CameraTargetRequest) */ {
 public:
  inline CameraTargetRequest() : CameraTargetRequest(nullptr) {}
  ~CameraTargetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraTargetRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraTargetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraTargetRequest(::google::protobuf::internal::ConstantInitialized);

  inline CameraTargetRequest(const CameraTargetRequest& from) : CameraTargetRequest(nullptr, from) {}
  inline CameraTargetRequest(CameraTargetRequest&& from) noexcept
      : CameraTargetRequest(nullptr, ::std::move(from)) {}
  inline CameraTargetRequest& operator=(const CameraTargetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraTargetRequest& operator=(CameraTargetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraTargetRequest& default_instance() {
    return *reinterpret_cast<const CameraTargetRequest*>(
        &_CameraTargetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CameraTargetRequest& a, CameraTargetRequest& b) { a.Swap(&b); }
  inline void Swap(CameraTargetRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraTargetRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraTargetRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraTargetRequest>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraTargetRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.CameraTargetRequest"; }

 protected:
  explicit CameraTargetRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraTargetRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraTargetRequest& from);
  CameraTargetRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraTargetRequest&& from) noexcept
      : CameraTargetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
  };
  // .octaneapi.Vector3 target = 1;
  bool has_target() const;
  void clear_target() ;
  const ::octaneapi::Vector3& target() const;
  [[nodiscard]] ::octaneapi::Vector3* PROTOBUF_NULLABLE release_target();
  ::octaneapi::Vector3* PROTOBUF_NONNULL mutable_target();
  void set_allocated_target(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_target(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  ::octaneapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_target();

  private:
  const ::octaneapi::Vector3& _internal_target() const;
  ::octaneapi::Vector3* PROTOBUF_NONNULL _internal_mutable_target();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.CameraTargetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraTargetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::Vector3* PROTOBUF_NULLABLE target_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_5fcontrol_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraTargetRequest_class_data_;
// -------------------------------------------------------------------

class CameraPositionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.CameraPositionResponse) */ {
 public:
  inline CameraPositionResponse() : CameraPositionResponse(nullptr) {}
  ~CameraPositionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraPositionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraPositionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraPositionResponse(::google::protobuf::internal::ConstantInitialized);

  inline CameraPositionResponse(const CameraPositionResponse& from) : CameraPositionResponse(nullptr, from) {}
  inline CameraPositionResponse(CameraPositionResponse&& from) noexcept
      : CameraPositionResponse(nullptr, ::std::move(from)) {}
  inline CameraPositionResponse& operator=(const CameraPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraPositionResponse& operator=(CameraPositionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraPositionResponse& default_instance() {
    return *reinterpret_cast<const CameraPositionResponse*>(
        &_CameraPositionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CameraPositionResponse& a, CameraPositionResponse& b) { a.Swap(&b); }
  inline void Swap(CameraPositionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraPositionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraPositionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraPositionResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraPositionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.CameraPositionResponse"; }

 protected:
  explicit CameraPositionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraPositionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraPositionResponse& from);
  CameraPositionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraPositionResponse&& from) noexcept
      : CameraPositionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
  };
  // .octaneapi.Vector3 position = 1;
  bool has_position() const;
  void clear_position() ;
  const ::octaneapi::Vector3& position() const;
  [[nodiscard]] ::octaneapi::Vector3* PROTOBUF_NULLABLE release_position();
  ::octaneapi::Vector3* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  ::octaneapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::octaneapi::Vector3& _internal_position() const;
  ::octaneapi::Vector3* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.CameraPositionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraPositionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::Vector3* PROTOBUF_NULLABLE position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_5fcontrol_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraPositionResponse_class_data_;
// -------------------------------------------------------------------

class CameraPositionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.CameraPositionRequest) */ {
 public:
  inline CameraPositionRequest() : CameraPositionRequest(nullptr) {}
  ~CameraPositionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraPositionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraPositionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraPositionRequest(::google::protobuf::internal::ConstantInitialized);

  inline CameraPositionRequest(const CameraPositionRequest& from) : CameraPositionRequest(nullptr, from) {}
  inline CameraPositionRequest(CameraPositionRequest&& from) noexcept
      : CameraPositionRequest(nullptr, ::std::move(from)) {}
  inline CameraPositionRequest& operator=(const CameraPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraPositionRequest& operator=(CameraPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraPositionRequest& default_instance() {
    return *reinterpret_cast<const CameraPositionRequest*>(
        &_CameraPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CameraPositionRequest& a, CameraPositionRequest& b) { a.Swap(&b); }
  inline void Swap(CameraPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraPositionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraPositionRequest>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraPositionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.CameraPositionRequest"; }

 protected:
  explicit CameraPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CameraPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CameraPositionRequest& from);
  CameraPositionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CameraPositionRequest&& from) noexcept
      : CameraPositionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
  };
  // .octaneapi.Vector3 position = 1;
  bool has_position() const;
  void clear_position() ;
  const ::octaneapi::Vector3& position() const;
  [[nodiscard]] ::octaneapi::Vector3* PROTOBUF_NULLABLE release_position();
  ::octaneapi::Vector3* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::octaneapi::Vector3* PROTOBUF_NULLABLE value);
  ::octaneapi::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::octaneapi::Vector3& _internal_position() const;
  ::octaneapi::Vector3* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.CameraPositionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CameraPositionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::Vector3* PROTOBUF_NULLABLE position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_camera_5fcontrol_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CameraPositionRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Vector3

// float x = 1;
inline void Vector3::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Vector3::x() const {
  // @@protoc_insertion_point(field_get:octaneapi.Vector3.x)
  return _internal_x();
}
inline void Vector3::set_x(float value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:octaneapi.Vector3.x)
}
inline float Vector3::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Vector3::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2;
inline void Vector3::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Vector3::y() const {
  // @@protoc_insertion_point(field_get:octaneapi.Vector3.y)
  return _internal_y();
}
inline void Vector3::set_y(float value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:octaneapi.Vector3.y)
}
inline float Vector3::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Vector3::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 3;
inline void Vector3::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float Vector3::z() const {
  // @@protoc_insertion_point(field_get:octaneapi.Vector3.z)
  return _internal_z();
}
inline void Vector3::set_z(float value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:octaneapi.Vector3.z)
}
inline float Vector3::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Vector3::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// CameraPositionRequest

// .octaneapi.Vector3 position = 1;
inline bool CameraPositionRequest::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void CameraPositionRequest::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::octaneapi::Vector3& CameraPositionRequest::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::Vector3* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::Vector3&>(::octaneapi::_Vector3_default_instance_);
}
inline const ::octaneapi::Vector3& CameraPositionRequest::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.CameraPositionRequest.position)
  return _internal_position();
}
inline void CameraPositionRequest::unsafe_arena_set_allocated_position(
    ::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.CameraPositionRequest.position)
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraPositionRequest::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraPositionRequest::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.CameraPositionRequest.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraPositionRequest::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::Vector3>(GetArena());
    _impl_.position_ = reinterpret_cast<::octaneapi::Vector3*>(p);
  }
  return _impl_.position_;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraPositionRequest::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::Vector3* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:octaneapi.CameraPositionRequest.position)
  return _msg;
}
inline void CameraPositionRequest::set_allocated_position(::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.CameraPositionRequest.position)
}

// -------------------------------------------------------------------

// CameraPositionResponse

// .octaneapi.Vector3 position = 1;
inline bool CameraPositionResponse::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline void CameraPositionResponse::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::octaneapi::Vector3& CameraPositionResponse::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::Vector3* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::Vector3&>(::octaneapi::_Vector3_default_instance_);
}
inline const ::octaneapi::Vector3& CameraPositionResponse::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.CameraPositionResponse.position)
  return _internal_position();
}
inline void CameraPositionResponse::unsafe_arena_set_allocated_position(
    ::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.CameraPositionResponse.position)
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraPositionResponse::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraPositionResponse::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.CameraPositionResponse.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraPositionResponse::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::Vector3>(GetArena());
    _impl_.position_ = reinterpret_cast<::octaneapi::Vector3*>(p);
  }
  return _impl_.position_;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraPositionResponse::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::Vector3* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:octaneapi.CameraPositionResponse.position)
  return _msg;
}
inline void CameraPositionResponse::set_allocated_position(::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.CameraPositionResponse.position)
}

// -------------------------------------------------------------------

// CameraTargetRequest

// .octaneapi.Vector3 target = 1;
inline bool CameraTargetRequest::has_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_ != nullptr);
  return value;
}
inline void CameraTargetRequest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::octaneapi::Vector3& CameraTargetRequest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::Vector3* p = _impl_.target_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::Vector3&>(::octaneapi::_Vector3_default_instance_);
}
inline const ::octaneapi::Vector3& CameraTargetRequest::target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.CameraTargetRequest.target)
  return _internal_target();
}
inline void CameraTargetRequest::unsafe_arena_set_allocated_target(
    ::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }
  _impl_.target_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.CameraTargetRequest.target)
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraTargetRequest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* released = _impl_.target_;
  _impl_.target_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraTargetRequest::unsafe_arena_release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.CameraTargetRequest.target)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* temp = _impl_.target_;
  _impl_.target_ = nullptr;
  return temp;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraTargetRequest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::Vector3>(GetArena());
    _impl_.target_ = reinterpret_cast<::octaneapi::Vector3*>(p);
  }
  return _impl_.target_;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraTargetRequest::mutable_target()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::Vector3* _msg = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:octaneapi.CameraTargetRequest.target)
  return _msg;
}
inline void CameraTargetRequest::set_allocated_target(::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.CameraTargetRequest.target)
}

// -------------------------------------------------------------------

// CameraTargetResponse

// .octaneapi.Vector3 target = 1;
inline bool CameraTargetResponse::has_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.target_ != nullptr);
  return value;
}
inline void CameraTargetResponse::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::octaneapi::Vector3& CameraTargetResponse::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::Vector3* p = _impl_.target_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::Vector3&>(::octaneapi::_Vector3_default_instance_);
}
inline const ::octaneapi::Vector3& CameraTargetResponse::target() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.CameraTargetResponse.target)
  return _internal_target();
}
inline void CameraTargetResponse::unsafe_arena_set_allocated_target(
    ::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }
  _impl_.target_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.CameraTargetResponse.target)
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraTargetResponse::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* released = _impl_.target_;
  _impl_.target_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraTargetResponse::unsafe_arena_release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.CameraTargetResponse.target)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* temp = _impl_.target_;
  _impl_.target_ = nullptr;
  return temp;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraTargetResponse::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::Vector3>(GetArena());
    _impl_.target_ = reinterpret_cast<::octaneapi::Vector3*>(p);
  }
  return _impl_.target_;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraTargetResponse::mutable_target()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::Vector3* _msg = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:octaneapi.CameraTargetResponse.target)
  return _msg;
}
inline void CameraTargetResponse::set_allocated_target(::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.target_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.target_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.CameraTargetResponse.target)
}

// -------------------------------------------------------------------

// CameraUpRequest

// .octaneapi.Vector3 up = 1;
inline bool CameraUpRequest::has_up() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.up_ != nullptr);
  return value;
}
inline void CameraUpRequest::clear_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.up_ != nullptr) _impl_.up_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::octaneapi::Vector3& CameraUpRequest::_internal_up() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::Vector3* p = _impl_.up_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::Vector3&>(::octaneapi::_Vector3_default_instance_);
}
inline const ::octaneapi::Vector3& CameraUpRequest::up() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.CameraUpRequest.up)
  return _internal_up();
}
inline void CameraUpRequest::unsafe_arena_set_allocated_up(
    ::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }
  _impl_.up_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.CameraUpRequest.up)
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraUpRequest::release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* released = _impl_.up_;
  _impl_.up_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraUpRequest::unsafe_arena_release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.CameraUpRequest.up)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* temp = _impl_.up_;
  _impl_.up_ = nullptr;
  return temp;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraUpRequest::_internal_mutable_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.up_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::Vector3>(GetArena());
    _impl_.up_ = reinterpret_cast<::octaneapi::Vector3*>(p);
  }
  return _impl_.up_;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraUpRequest::mutable_up()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::Vector3* _msg = _internal_mutable_up();
  // @@protoc_insertion_point(field_mutable:octaneapi.CameraUpRequest.up)
  return _msg;
}
inline void CameraUpRequest::set_allocated_up(::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.up_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.CameraUpRequest.up)
}

// -------------------------------------------------------------------

// CameraUpResponse

// .octaneapi.Vector3 up = 1;
inline bool CameraUpResponse::has_up() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.up_ != nullptr);
  return value;
}
inline void CameraUpResponse::clear_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.up_ != nullptr) _impl_.up_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::octaneapi::Vector3& CameraUpResponse::_internal_up() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::Vector3* p = _impl_.up_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::Vector3&>(::octaneapi::_Vector3_default_instance_);
}
inline const ::octaneapi::Vector3& CameraUpResponse::up() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.CameraUpResponse.up)
  return _internal_up();
}
inline void CameraUpResponse::unsafe_arena_set_allocated_up(
    ::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }
  _impl_.up_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.CameraUpResponse.up)
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraUpResponse::release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* released = _impl_.up_;
  _impl_.up_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::Vector3* PROTOBUF_NULLABLE CameraUpResponse::unsafe_arena_release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.CameraUpResponse.up)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::Vector3* temp = _impl_.up_;
  _impl_.up_ = nullptr;
  return temp;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraUpResponse::_internal_mutable_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.up_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::Vector3>(GetArena());
    _impl_.up_ = reinterpret_cast<::octaneapi::Vector3*>(p);
  }
  return _impl_.up_;
}
inline ::octaneapi::Vector3* PROTOBUF_NONNULL CameraUpResponse::mutable_up()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::Vector3* _msg = _internal_mutable_up();
  // @@protoc_insertion_point(field_mutable:octaneapi.CameraUpResponse.up)
  return _msg;
}
inline void CameraUpResponse::set_allocated_up(::octaneapi::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.up_ = reinterpret_cast<::octaneapi::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.CameraUpResponse.up)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace octaneapi


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // camera_5fcontrol_2eproto_2epb_2eh
