//////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.

syntax = "proto3";

package octaneapi;

option optimize_for = CODE_SIZE;

import "common.proto";
import "google/protobuf/empty.proto";

 // GRPC proto definitions for 'ApiLock' class from 'apilock.h'
message ApiLock
{
    // Request packet corresponding to '[in] parameters in ApiLock::create'
    message createRequest
    {
    }

    // Response packet corresponding to '[out] parameters in 'ApiLock::create'
    message createResponse
    {
        
        ObjectRef result = 1;
    }

    // Request packet corresponding to '[in] parameters in ApiLock::destroy'
    message destroyRequest
    {
        // ID of the object on which to call the method
        ObjectRef objectPtr = 1;
    }

    // Request packet corresponding to '[in] parameters in ApiLock::enter'
    message enterRequest
    {
        // ID of the object on which to call the method
        ObjectRef objectPtr = 1;
    }

    // Request packet corresponding to '[in] parameters in ApiLock::tryEnter'
    message tryEnterRequest
    {
        // ID of the object on which to call the method
        ObjectRef objectPtr = 1;
    }

    // Response packet corresponding to '[out] parameters in 'ApiLock::tryEnter'
    message tryEnterResponse
    {
        //     FALSE if the lock is currently held by another thread, TRUE otherwise.
        bool result = 1;
    }

    // Request packet corresponding to '[in] parameters in ApiLock::exit'
    message exitRequest
    {
        // ID of the object on which to call the method
        ObjectRef objectPtr = 1;
    }

}


// GRPC interface definition for class 'ApiLock' from 'apilock.h'
service ApiLockService
{
    /// Creates a new lock
    rpc create(ApiLock.createRequest) returns (ApiLock.createResponse);
    /// Destroys this lock
    rpc destroy(ApiLock.destroyRequest) returns (google.protobuf.Empty);
    /// Acquires the lock
    rpc enter(ApiLock.enterRequest) returns (google.protobuf.Empty);
    /// Attempts to lock this critical section without blocking
    rpc tryEnter(ApiLock.tryEnterRequest) returns (ApiLock.tryEnterResponse);
    /// Releases the lock
    rpc exit(ApiLock.exitRequest) returns (google.protobuf.Empty);
}
