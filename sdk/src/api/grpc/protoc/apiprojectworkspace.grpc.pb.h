// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apiprojectworkspace.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_apiprojectworkspace_2eproto__INCLUDED
#define GRPC_apiprojectworkspace_2eproto__INCLUDED

#include "apiprojectworkspace.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiProjectWorkspace' from 'apiprojectworkspace.h'
class ApiProjectWorkspaceService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiProjectWorkspaceService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Gets all the node graph editors in the project workspace
    virtual ::grpc::Status getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>> AsyncgetNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>>(AsyncgetNodeGraphEditorsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>> PrepareAsyncgetNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>>(PrepareAsyncgetNodeGraphEditorsRaw(context, request, cq));
    }
    // / Resets the workspace to the default layout for plugins
    virtual ::grpc::Status resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncresetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncresetLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncresetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncresetLayoutRaw(context, request, cq));
    }
    // / Loads the layout given
    virtual ::grpc::Status loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>> AsyncloadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>>(AsyncloadLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>> PrepareAsyncloadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>>(PrepareAsyncloadLayoutRaw(context, request, cq));
    }
    // / Serializes the current layout
    virtual ::grpc::Status serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>> AsyncserializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>>(AsyncserializeLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>> PrepareAsyncserializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>>(PrepareAsyncserializeLayoutRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Gets all the node graph editors in the project workspace
      virtual void getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Resets the workspace to the default layout for plugins
      virtual void resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Loads the layout given
      virtual void loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Serializes the current layout
      virtual void serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* AsyncgetNodeGraphEditorsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* PrepareAsyncgetNodeGraphEditorsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncresetLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncresetLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* AsyncloadLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* PrepareAsyncloadLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* AsyncserializeLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* PrepareAsyncserializeLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>> AsyncgetNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>>(AsyncgetNodeGraphEditorsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>> PrepareAsyncgetNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>>(PrepareAsyncgetNodeGraphEditorsRaw(context, request, cq));
    }
    ::grpc::Status resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncresetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncresetLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncresetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncresetLayoutRaw(context, request, cq));
    }
    ::grpc::Status loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>> AsyncloadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>>(AsyncloadLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>> PrepareAsyncloadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>>(PrepareAsyncloadLayoutRaw(context, request, cq));
    }
    ::grpc::Status serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>> AsyncserializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>>(AsyncserializeLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>> PrepareAsyncserializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>>(PrepareAsyncserializeLayoutRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response, std::function<void(::grpc::Status)>) override;
      void getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response, std::function<void(::grpc::Status)>) override;
      void loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response, std::function<void(::grpc::Status)>) override;
      void serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* AsyncgetNodeGraphEditorsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* PrepareAsyncgetNodeGraphEditorsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncresetLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncresetLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* AsyncloadLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* PrepareAsyncloadLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* AsyncserializeLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* PrepareAsyncserializeLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_getNodeGraphEditors_;
    const ::grpc::internal::RpcMethod rpcmethod_resetLayout_;
    const ::grpc::internal::RpcMethod rpcmethod_loadLayout_;
    const ::grpc::internal::RpcMethod rpcmethod_serializeLayout_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Gets all the node graph editors in the project workspace
    virtual ::grpc::Status getNodeGraphEditors(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response);
    // / Resets the workspace to the default layout for plugins
    virtual ::grpc::Status resetLayout(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response);
    // / Loads the layout given
    virtual ::grpc::Status loadLayout(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response);
    // / Serializes the current layout
    virtual ::grpc::Status serializeLayout(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_getNodeGraphEditors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getNodeGraphEditors() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_getNodeGraphEditors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getNodeGraphEditors(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetNodeGraphEditors(::grpc::ServerContext* context, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_resetLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_resetLayout() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_resetLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status resetLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestresetLayout(::grpc::ServerContext* context, ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_loadLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_loadLayout() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_loadLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestloadLayout(::grpc::ServerContext* context, ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_serializeLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_serializeLayout() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_serializeLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status serializeLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestserializeLayout(::grpc::ServerContext* context, ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_getNodeGraphEditors<WithAsyncMethod_resetLayout<WithAsyncMethod_loadLayout<WithAsyncMethod_serializeLayout<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_getNodeGraphEditors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getNodeGraphEditors() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response) { return this->getNodeGraphEditors(context, request, response); }));}
    void SetMessageAllocatorFor_getNodeGraphEditors(
        ::grpc::MessageAllocator< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getNodeGraphEditors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getNodeGraphEditors(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getNodeGraphEditors(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_resetLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_resetLayout() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response) { return this->resetLayout(context, request, response); }));}
    void SetMessageAllocatorFor_resetLayout(
        ::grpc::MessageAllocator< ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_resetLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status resetLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* resetLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_loadLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_loadLayout() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response) { return this->loadLayout(context, request, response); }));}
    void SetMessageAllocatorFor_loadLayout(
        ::grpc::MessageAllocator< ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_loadLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* loadLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_serializeLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_serializeLayout() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response) { return this->serializeLayout(context, request, response); }));}
    void SetMessageAllocatorFor_serializeLayout(
        ::grpc::MessageAllocator< ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_serializeLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status serializeLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* serializeLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_getNodeGraphEditors<WithCallbackMethod_resetLayout<WithCallbackMethod_loadLayout<WithCallbackMethod_serializeLayout<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_getNodeGraphEditors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getNodeGraphEditors() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_getNodeGraphEditors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getNodeGraphEditors(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_resetLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_resetLayout() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_resetLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status resetLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_loadLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_loadLayout() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_loadLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_serializeLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_serializeLayout() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_serializeLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status serializeLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_getNodeGraphEditors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getNodeGraphEditors() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_getNodeGraphEditors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getNodeGraphEditors(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetNodeGraphEditors(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_resetLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_resetLayout() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_resetLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status resetLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestresetLayout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_loadLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_loadLayout() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_loadLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestloadLayout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_serializeLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_serializeLayout() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_serializeLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status serializeLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestserializeLayout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getNodeGraphEditors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getNodeGraphEditors() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getNodeGraphEditors(context, request, response); }));
    }
    ~WithRawCallbackMethod_getNodeGraphEditors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getNodeGraphEditors(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getNodeGraphEditors(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_resetLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_resetLayout() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->resetLayout(context, request, response); }));
    }
    ~WithRawCallbackMethod_resetLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status resetLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* resetLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_loadLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_loadLayout() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->loadLayout(context, request, response); }));
    }
    ~WithRawCallbackMethod_loadLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* loadLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_serializeLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_serializeLayout() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->serializeLayout(context, request, response); }));
    }
    ~WithRawCallbackMethod_serializeLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status serializeLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* serializeLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getNodeGraphEditors : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getNodeGraphEditors() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* streamer) {
                       return this->StreamedgetNodeGraphEditors(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getNodeGraphEditors() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getNodeGraphEditors(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetNodeGraphEditors(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest,::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_resetLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_resetLayout() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedresetLayout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_resetLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status resetLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedresetLayout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiProjectWorkspace_resetLayoutRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_loadLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_loadLayout() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* streamer) {
                       return this->StreamedloadLayout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_loadLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status loadLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedloadLayout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiProjectWorkspace_loadLayoutRequest,::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_serializeLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_serializeLayout() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* streamer) {
                       return this->StreamedserializeLayout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_serializeLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status serializeLayout(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* /*request*/, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedserializeLayout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest,::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_getNodeGraphEditors<WithStreamedUnaryMethod_resetLayout<WithStreamedUnaryMethod_loadLayout<WithStreamedUnaryMethod_serializeLayout<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_getNodeGraphEditors<WithStreamedUnaryMethod_resetLayout<WithStreamedUnaryMethod_loadLayout<WithStreamedUnaryMethod_serializeLayout<Service > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apiprojectworkspace_2eproto__INCLUDED
