// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodepininfohelper.proto
#ifndef GRPC_apinodepininfohelper_2eproto__INCLUDED
#define GRPC_apinodepininfohelper_2eproto__INCLUDED

#include "apinodepininfohelper.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiWindow' from 'apiwindow.h'
class ApiNodePinInfoExService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiNodePinInfoExService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Creates a ApiNodePinInfo object on the server
    virtual ::grpc::Status createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>> AsynccreateApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>>(AsynccreateApiNodePinInfoArrayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>> PrepareAsynccreateApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>>(PrepareAsynccreateApiNodePinInfoArrayRaw(context, request, cq));
    }
    // / Creates a ApiNodePinInfo object on the server
    virtual ::grpc::Status createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>> AsynccreateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>>(AsynccreateApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>> PrepareAsynccreateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>>(PrepareAsynccreateApiNodePinInfoRaw(context, request, cq));
    }
    // / Deletes a ApiNodePinInfo object on the server
    virtual ::grpc::Status deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>> AsyncdeleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>>(AsyncdeleteApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>> PrepareAsyncdeleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>>(PrepareAsyncdeleteApiNodePinInfoRaw(context, request, cq));
    }
    // / Modifies a ApiNodePinInfo object on the server
    virtual ::grpc::Status updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>> AsyncupdateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>>(AsyncupdateApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>> PrepareAsyncupdateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>>(PrepareAsyncupdateApiNodePinInfoRaw(context, request, cq));
    }
    // / Returns a ApiNodePinInfo struct from the server
    virtual ::grpc::Status getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>> AsyncgetApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>>(AsyncgetApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>> PrepareAsyncgetApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>>(PrepareAsyncgetApiNodePinInfoRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Creates a ApiNodePinInfo object on the server
      virtual void createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates a ApiNodePinInfo object on the server
      virtual void createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Deletes a ApiNodePinInfo object on the server
      virtual void deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Modifies a ApiNodePinInfo object on the server
      virtual void updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns a ApiNodePinInfo struct from the server
      virtual void getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* AsynccreateApiNodePinInfoArrayRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* PrepareAsynccreateApiNodePinInfoArrayRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* AsynccreateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* PrepareAsynccreateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* AsyncdeleteApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* PrepareAsyncdeleteApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* AsyncupdateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* PrepareAsyncupdateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* AsyncgetApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* PrepareAsyncgetApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>> AsynccreateApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>>(AsynccreateApiNodePinInfoArrayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>> PrepareAsynccreateApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>>(PrepareAsynccreateApiNodePinInfoArrayRaw(context, request, cq));
    }
    ::grpc::Status createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>> AsynccreateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>>(AsynccreateApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>> PrepareAsynccreateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>>(PrepareAsynccreateApiNodePinInfoRaw(context, request, cq));
    }
    ::grpc::Status deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>> AsyncdeleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>>(AsyncdeleteApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>> PrepareAsyncdeleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>>(PrepareAsyncdeleteApiNodePinInfoRaw(context, request, cq));
    }
    ::grpc::Status updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>> AsyncupdateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>>(AsyncupdateApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>> PrepareAsyncupdateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>>(PrepareAsyncupdateApiNodePinInfoRaw(context, request, cq));
    }
    ::grpc::Status getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>> AsyncgetApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>>(AsyncgetApiNodePinInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>> PrepareAsyncgetApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>>(PrepareAsyncgetApiNodePinInfoRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* AsynccreateApiNodePinInfoArrayRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* PrepareAsynccreateApiNodePinInfoArrayRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* AsynccreateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* PrepareAsynccreateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* AsyncdeleteApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* PrepareAsyncdeleteApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* AsyncupdateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* PrepareAsyncupdateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* AsyncgetApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* PrepareAsyncgetApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_createApiNodePinInfoArray_;
    const ::grpc::internal::RpcMethod rpcmethod_createApiNodePinInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_deleteApiNodePinInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_updateApiNodePinInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_getApiNodePinInfo_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Creates a ApiNodePinInfo object on the server
    virtual ::grpc::Status createApiNodePinInfoArray(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response);
    // / Creates a ApiNodePinInfo object on the server
    virtual ::grpc::Status createApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response);
    // / Deletes a ApiNodePinInfo object on the server
    virtual ::grpc::Status deleteApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response);
    // / Modifies a ApiNodePinInfo object on the server
    virtual ::grpc::Status updateApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response);
    // / Returns a ApiNodePinInfo struct from the server
    virtual ::grpc::Status getApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_createApiNodePinInfoArray : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_createApiNodePinInfoArray() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_createApiNodePinInfoArray() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfoArray(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateApiNodePinInfoArray(::grpc::ServerContext* context, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_createApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_createApiNodePinInfo() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_createApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateApiNodePinInfo(::grpc::ServerContext* context, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_deleteApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_deleteApiNodePinInfo() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_deleteApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteApiNodePinInfo(::grpc::ServerContext* context, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_updateApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_updateApiNodePinInfo() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_updateApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status updateApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestupdateApiNodePinInfo(::grpc::ServerContext* context, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getApiNodePinInfo() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_getApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetApiNodePinInfo(::grpc::ServerContext* context, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_createApiNodePinInfoArray<WithAsyncMethod_createApiNodePinInfo<WithAsyncMethod_deleteApiNodePinInfo<WithAsyncMethod_updateApiNodePinInfo<WithAsyncMethod_getApiNodePinInfo<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_createApiNodePinInfoArray : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_createApiNodePinInfoArray() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response) { return this->createApiNodePinInfoArray(context, request, response); }));}
    void SetMessageAllocatorFor_createApiNodePinInfoArray(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_createApiNodePinInfoArray() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfoArray(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createApiNodePinInfoArray(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_createApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_createApiNodePinInfo() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response) { return this->createApiNodePinInfo(context, request, response); }));}
    void SetMessageAllocatorFor_createApiNodePinInfo(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_createApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_deleteApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_deleteApiNodePinInfo() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response) { return this->deleteApiNodePinInfo(context, request, response); }));}
    void SetMessageAllocatorFor_deleteApiNodePinInfo(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_deleteApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deleteApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_updateApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_updateApiNodePinInfo() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response) { return this->updateApiNodePinInfo(context, request, response); }));}
    void SetMessageAllocatorFor_updateApiNodePinInfo(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_updateApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status updateApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* updateApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getApiNodePinInfo() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response) { return this->getApiNodePinInfo(context, request, response); }));}
    void SetMessageAllocatorFor_getApiNodePinInfo(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_createApiNodePinInfoArray<WithCallbackMethod_createApiNodePinInfo<WithCallbackMethod_deleteApiNodePinInfo<WithCallbackMethod_updateApiNodePinInfo<WithCallbackMethod_getApiNodePinInfo<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_createApiNodePinInfoArray : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_createApiNodePinInfoArray() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_createApiNodePinInfoArray() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfoArray(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_createApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_createApiNodePinInfo() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_createApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_deleteApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_deleteApiNodePinInfo() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_deleteApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_updateApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_updateApiNodePinInfo() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_updateApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status updateApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getApiNodePinInfo() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_getApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_createApiNodePinInfoArray : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_createApiNodePinInfoArray() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_createApiNodePinInfoArray() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfoArray(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateApiNodePinInfoArray(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_createApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_createApiNodePinInfo() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_createApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_deleteApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_deleteApiNodePinInfo() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_deleteApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_updateApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_updateApiNodePinInfo() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_updateApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status updateApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestupdateApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getApiNodePinInfo() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_getApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_createApiNodePinInfoArray : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_createApiNodePinInfoArray() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->createApiNodePinInfoArray(context, request, response); }));
    }
    ~WithRawCallbackMethod_createApiNodePinInfoArray() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfoArray(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createApiNodePinInfoArray(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_createApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_createApiNodePinInfo() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->createApiNodePinInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_createApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_deleteApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_deleteApiNodePinInfo() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->deleteApiNodePinInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_deleteApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deleteApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_updateApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_updateApiNodePinInfo() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->updateApiNodePinInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_updateApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status updateApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* updateApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getApiNodePinInfo() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getApiNodePinInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_getApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getApiNodePinInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_createApiNodePinInfoArray : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_createApiNodePinInfoArray() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* streamer) {
                       return this->StreamedcreateApiNodePinInfoArray(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_createApiNodePinInfoArray() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status createApiNodePinInfoArray(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcreateApiNodePinInfoArray(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest,::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_createApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_createApiNodePinInfo() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* streamer) {
                       return this->StreamedcreateApiNodePinInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_createApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status createApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcreateApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest,::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_deleteApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_deleteApiNodePinInfo() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* streamer) {
                       return this->StreameddeleteApiNodePinInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_deleteApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status deleteApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddeleteApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest,::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_updateApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_updateApiNodePinInfo() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* streamer) {
                       return this->StreamedupdateApiNodePinInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_updateApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status updateApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedupdateApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest,::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getApiNodePinInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getApiNodePinInfo() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* streamer) {
                       return this->StreamedgetApiNodePinInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getApiNodePinInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getApiNodePinInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* /*request*/, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetApiNodePinInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest,::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_createApiNodePinInfoArray<WithStreamedUnaryMethod_createApiNodePinInfo<WithStreamedUnaryMethod_deleteApiNodePinInfo<WithStreamedUnaryMethod_updateApiNodePinInfo<WithStreamedUnaryMethod_getApiNodePinInfo<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_createApiNodePinInfoArray<WithStreamedUnaryMethod_createApiNodePinInfo<WithStreamedUnaryMethod_deleteApiNodePinInfo<WithStreamedUnaryMethod_updateApiNodePinInfo<WithStreamedUnaryMethod_getApiNodePinInfo<Service > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apinodepininfohelper_2eproto__INCLUDED
