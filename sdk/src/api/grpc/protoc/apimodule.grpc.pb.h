// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apimodule.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_apimodule_2eproto__INCLUDED
#define GRPC_apimodule_2eproto__INCLUDED

#include "apimodule.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiCommandModuleInfo' from 'apimodule.h'
class ApiCommandModuleInfoService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiCommandModuleInfoService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Creates info for Api command module
    // /
    // / 
    virtual ::grpc::Status create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::octaneapi::ApiCommandModuleInfo_createResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_createResponse>> Asynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_createResponse>>(AsynccreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_createResponse>> PrepareAsynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_createResponse>>(PrepareAsynccreateRaw(context, request, cq));
    }
    // / Destroys a ApiCommandModuleInfo object created by create()
    virtual ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    // / Function to set the command module run function
    virtual ::grpc::Status setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>> AsyncsetRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>>(AsyncsetRunFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>> PrepareAsyncsetRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>>(PrepareAsyncsetRunFunctionRaw(context, request, cq));
    }
    // / Function to set icon for a command module
    virtual ::grpc::Status setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetIconRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetIconRaw(context, request, cq));
    }
    // / Function to assign shortcut key for a command module
    virtual ::grpc::Status assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncassignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncassignShortcutKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncassignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncassignShortcutKeyRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Creates info for Api command module
      // /
      // / 
      virtual void create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Destroys a ApiCommandModuleInfo object created by create()
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to set the command module run function
      virtual void setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to set icon for a command module
      virtual void setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to assign shortcut key for a command module
      virtual void assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_createResponse>* AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_createResponse>* PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* AsyncsetRunFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* PrepareAsyncsetRunFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetIconRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetIconRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncassignShortcutKeyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncassignShortcutKeyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::octaneapi::ApiCommandModuleInfo_createResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>> Asynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>>(AsynccreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>> PrepareAsynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>>(PrepareAsynccreateRaw(context, request, cq));
    }
    ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    ::grpc::Status setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>> AsyncsetRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>>(AsyncsetRunFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>> PrepareAsyncsetRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>>(PrepareAsyncsetRunFunctionRaw(context, request, cq));
    }
    ::grpc::Status setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetIconRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetIconRaw(context, request, cq));
    }
    ::grpc::Status assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncassignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncassignShortcutKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncassignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncassignShortcutKeyRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response, std::function<void(::grpc::Status)>) override;
      void create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response, std::function<void(::grpc::Status)>) override;
      void setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>* AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>* PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* AsyncsetRunFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* PrepareAsyncsetRunFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetIconRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetIconRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncassignShortcutKeyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncassignShortcutKeyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_create_;
    const ::grpc::internal::RpcMethod rpcmethod_destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_setRunFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_setIcon_;
    const ::grpc::internal::RpcMethod rpcmethod_assignShortcutKey_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Creates info for Api command module
    // /
    // / 
    virtual ::grpc::Status create(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response);
    // / Destroys a ApiCommandModuleInfo object created by create()
    virtual ::grpc::Status destroy(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response);
    // / Function to set the command module run function
    virtual ::grpc::Status setRunFunction(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response);
    // / Function to set icon for a command module
    virtual ::grpc::Status setIcon(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response);
    // / Function to assign shortcut key for a command module
    virtual ::grpc::Status assignShortcutKey(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_createRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate(::grpc::ServerContext* context, ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiCommandModuleInfo_createResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_destroy() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setRunFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setRunFunction() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_setRunFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRunFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetRunFunction(::grpc::ServerContext* context, ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setIcon : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setIcon() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_setIcon() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setIcon(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetIcon(::grpc::ServerContext* context, ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_assignShortcutKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_assignShortcutKey() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_assignShortcutKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status assignShortcutKey(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestassignShortcutKey(::grpc::ServerContext* context, ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_create<WithAsyncMethod_destroy<WithAsyncMethod_setRunFunction<WithAsyncMethod_setIcon<WithAsyncMethod_assignShortcutKey<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response) { return this->create(context, request, response); }));}
    void SetMessageAllocatorFor_create(
        ::grpc::MessageAllocator< ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_createRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_createRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_createResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response) { return this->destroy(context, request, response); }));}
    void SetMessageAllocatorFor_destroy(
        ::grpc::MessageAllocator< ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setRunFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setRunFunction() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response) { return this->setRunFunction(context, request, response); }));}
    void SetMessageAllocatorFor_setRunFunction(
        ::grpc::MessageAllocator< ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setRunFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRunFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setRunFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setIcon : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setIcon() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response) { return this->setIcon(context, request, response); }));}
    void SetMessageAllocatorFor_setIcon(
        ::grpc::MessageAllocator< ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setIcon() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setIcon(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setIcon(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_assignShortcutKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_assignShortcutKey() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response) { return this->assignShortcutKey(context, request, response); }));}
    void SetMessageAllocatorFor_assignShortcutKey(
        ::grpc::MessageAllocator< ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_assignShortcutKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status assignShortcutKey(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* assignShortcutKey(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_create<WithCallbackMethod_destroy<WithCallbackMethod_setRunFunction<WithCallbackMethod_setIcon<WithCallbackMethod_assignShortcutKey<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_createRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_destroy() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setRunFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setRunFunction() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_setRunFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRunFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setIcon : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setIcon() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_setIcon() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setIcon(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_assignShortcutKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_assignShortcutKey() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_assignShortcutKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status assignShortcutKey(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_createRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_destroy() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setRunFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setRunFunction() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_setRunFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRunFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetRunFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setIcon : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setIcon() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_setIcon() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setIcon(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetIcon(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_assignShortcutKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_assignShortcutKey() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_assignShortcutKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status assignShortcutKey(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestassignShortcutKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->create(context, request, response); }));
    }
    ~WithRawCallbackMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_createRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setRunFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setRunFunction() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setRunFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_setRunFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRunFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setRunFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setIcon : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setIcon() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setIcon(context, request, response); }));
    }
    ~WithRawCallbackMethod_setIcon() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setIcon(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setIcon(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_assignShortcutKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_assignShortcutKey() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->assignShortcutKey(context, request, response); }));
    }
    ~WithRawCallbackMethod_assignShortcutKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status assignShortcutKey(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* assignShortcutKey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_create() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse>* streamer) {
                       return this->Streamedcreate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_createRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcreate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiCommandModuleInfo_createRequest,::octaneapi::ApiCommandModuleInfo_createResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_destroy() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streameddestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiCommandModuleInfo_destroyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setRunFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setRunFunction() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* streamer) {
                       return this->StreamedsetRunFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setRunFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setRunFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* /*request*/, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetRunFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest,::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setIcon : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setIcon() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetIcon(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setIcon() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setIcon(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetIcon(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiCommandModuleInfo_setIconRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_assignShortcutKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_assignShortcutKey() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedassignShortcutKey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_assignShortcutKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status assignShortcutKey(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedassignShortcutKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_create<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_setRunFunction<WithStreamedUnaryMethod_setIcon<WithStreamedUnaryMethod_assignShortcutKey<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_create<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_setRunFunction<WithStreamedUnaryMethod_setIcon<WithStreamedUnaryMethod_assignShortcutKey<Service > > > > > StreamedService;
};

// GRPC interface definition for class 'ApiModuleGlobal' from 'apimodule.h'
class ApiModuleGlobalService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiModuleGlobalService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>> AsyncregisterCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>>(AsyncregisterCommandModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>> PrepareAsyncregisterCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>>(PrepareAsyncregisterCommandModuleRaw(context, request, cq));
    }
    virtual ::grpc::Status registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>> AsyncregisterWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>>(AsyncregisterWorkPaneModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>> PrepareAsyncregisterWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>>(PrepareAsyncregisterWorkPaneModuleRaw(context, request, cq));
    }
    virtual ::grpc::Status registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>> AsyncregisterNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>>(AsyncregisterNodeGraphModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>> PrepareAsyncregisterNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>>(PrepareAsyncregisterNodeGraphModuleRaw(context, request, cq));
    }
    virtual ::grpc::Status registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>> AsyncregisterStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>>(AsyncregisterStaticCommandModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>> PrepareAsyncregisterStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>>(PrepareAsyncregisterStaticCommandModuleRaw(context, request, cq));
    }
    virtual ::grpc::Status registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>> AsyncregisterStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>>(AsyncregisterStaticWorkPaneModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>> PrepareAsyncregisterStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>>(PrepareAsyncregisterStaticWorkPaneModuleRaw(context, request, cq));
    }
    virtual ::grpc::Status registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>> AsyncregisterStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>>(AsyncregisterStaticNodeGraphModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>> PrepareAsyncregisterStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>>(PrepareAsyncregisterStaticNodeGraphModuleRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* AsyncregisterCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* PrepareAsyncregisterCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* AsyncregisterWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* PrepareAsyncregisterWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* AsyncregisterNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* PrepareAsyncregisterNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* AsyncregisterStaticCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* PrepareAsyncregisterStaticCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* AsyncregisterStaticWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* PrepareAsyncregisterStaticWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* AsyncregisterStaticNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* PrepareAsyncregisterStaticNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>> AsyncregisterCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>>(AsyncregisterCommandModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>> PrepareAsyncregisterCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>>(PrepareAsyncregisterCommandModuleRaw(context, request, cq));
    }
    ::grpc::Status registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>> AsyncregisterWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>>(AsyncregisterWorkPaneModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>> PrepareAsyncregisterWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>>(PrepareAsyncregisterWorkPaneModuleRaw(context, request, cq));
    }
    ::grpc::Status registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>> AsyncregisterNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>>(AsyncregisterNodeGraphModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>> PrepareAsyncregisterNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>>(PrepareAsyncregisterNodeGraphModuleRaw(context, request, cq));
    }
    ::grpc::Status registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>> AsyncregisterStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>>(AsyncregisterStaticCommandModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>> PrepareAsyncregisterStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>>(PrepareAsyncregisterStaticCommandModuleRaw(context, request, cq));
    }
    ::grpc::Status registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>> AsyncregisterStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>>(AsyncregisterStaticWorkPaneModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>> PrepareAsyncregisterStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>>(PrepareAsyncregisterStaticWorkPaneModuleRaw(context, request, cq));
    }
    ::grpc::Status registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>> AsyncregisterStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>>(AsyncregisterStaticNodeGraphModuleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>> PrepareAsyncregisterStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>>(PrepareAsyncregisterStaticNodeGraphModuleRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response, std::function<void(::grpc::Status)>) override;
      void registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response, std::function<void(::grpc::Status)>) override;
      void registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response, std::function<void(::grpc::Status)>) override;
      void registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response, std::function<void(::grpc::Status)>) override;
      void registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response, std::function<void(::grpc::Status)>) override;
      void registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response, std::function<void(::grpc::Status)>) override;
      void registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* AsyncregisterCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* PrepareAsyncregisterCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* AsyncregisterWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* PrepareAsyncregisterWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* AsyncregisterNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* PrepareAsyncregisterNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* AsyncregisterStaticCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* PrepareAsyncregisterStaticCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* AsyncregisterStaticWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* PrepareAsyncregisterStaticWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* AsyncregisterStaticNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* PrepareAsyncregisterStaticNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_registerCommandModule_;
    const ::grpc::internal::RpcMethod rpcmethod_registerWorkPaneModule_;
    const ::grpc::internal::RpcMethod rpcmethod_registerNodeGraphModule_;
    const ::grpc::internal::RpcMethod rpcmethod_registerStaticCommandModule_;
    const ::grpc::internal::RpcMethod rpcmethod_registerStaticWorkPaneModule_;
    const ::grpc::internal::RpcMethod rpcmethod_registerStaticNodeGraphModule_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status registerCommandModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response);
    virtual ::grpc::Status registerWorkPaneModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response);
    virtual ::grpc::Status registerNodeGraphModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response);
    virtual ::grpc::Status registerStaticCommandModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response);
    virtual ::grpc::Status registerStaticWorkPaneModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response);
    virtual ::grpc::Status registerStaticNodeGraphModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_registerCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_registerCommandModule() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_registerCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterCommandModule(::grpc::ServerContext* context, ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_registerWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_registerWorkPaneModule() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_registerWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterWorkPaneModule(::grpc::ServerContext* context, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_registerNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_registerNodeGraphModule() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_registerNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterNodeGraphModule(::grpc::ServerContext* context, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_registerStaticCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_registerStaticCommandModule() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_registerStaticCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterStaticCommandModule(::grpc::ServerContext* context, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_registerStaticWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_registerStaticWorkPaneModule() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_registerStaticWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterStaticWorkPaneModule(::grpc::ServerContext* context, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_registerStaticNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_registerStaticNodeGraphModule() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_registerStaticNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterStaticNodeGraphModule(::grpc::ServerContext* context, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_registerCommandModule<WithAsyncMethod_registerWorkPaneModule<WithAsyncMethod_registerNodeGraphModule<WithAsyncMethod_registerStaticCommandModule<WithAsyncMethod_registerStaticWorkPaneModule<WithAsyncMethod_registerStaticNodeGraphModule<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_registerCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_registerCommandModule() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response) { return this->registerCommandModule(context, request, response); }));}
    void SetMessageAllocatorFor_registerCommandModule(
        ::grpc::MessageAllocator< ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_registerCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerCommandModule(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_registerWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_registerWorkPaneModule() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response) { return this->registerWorkPaneModule(context, request, response); }));}
    void SetMessageAllocatorFor_registerWorkPaneModule(
        ::grpc::MessageAllocator< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_registerWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerWorkPaneModule(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_registerNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_registerNodeGraphModule() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response) { return this->registerNodeGraphModule(context, request, response); }));}
    void SetMessageAllocatorFor_registerNodeGraphModule(
        ::grpc::MessageAllocator< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_registerNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerNodeGraphModule(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_registerStaticCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_registerStaticCommandModule() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response) { return this->registerStaticCommandModule(context, request, response); }));}
    void SetMessageAllocatorFor_registerStaticCommandModule(
        ::grpc::MessageAllocator< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_registerStaticCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerStaticCommandModule(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_registerStaticWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_registerStaticWorkPaneModule() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response) { return this->registerStaticWorkPaneModule(context, request, response); }));}
    void SetMessageAllocatorFor_registerStaticWorkPaneModule(
        ::grpc::MessageAllocator< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_registerStaticWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerStaticWorkPaneModule(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_registerStaticNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_registerStaticNodeGraphModule() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response) { return this->registerStaticNodeGraphModule(context, request, response); }));}
    void SetMessageAllocatorFor_registerStaticNodeGraphModule(
        ::grpc::MessageAllocator< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_registerStaticNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerStaticNodeGraphModule(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_registerCommandModule<WithCallbackMethod_registerWorkPaneModule<WithCallbackMethod_registerNodeGraphModule<WithCallbackMethod_registerStaticCommandModule<WithCallbackMethod_registerStaticWorkPaneModule<WithCallbackMethod_registerStaticNodeGraphModule<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_registerCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_registerCommandModule() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_registerCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_registerWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_registerWorkPaneModule() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_registerWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_registerNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_registerNodeGraphModule() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_registerNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_registerStaticCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_registerStaticCommandModule() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_registerStaticCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_registerStaticWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_registerStaticWorkPaneModule() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_registerStaticWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_registerStaticNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_registerStaticNodeGraphModule() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_registerStaticNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_registerCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_registerCommandModule() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_registerCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterCommandModule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_registerWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_registerWorkPaneModule() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_registerWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterWorkPaneModule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_registerNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_registerNodeGraphModule() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_registerNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterNodeGraphModule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_registerStaticCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_registerStaticCommandModule() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_registerStaticCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterStaticCommandModule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_registerStaticWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_registerStaticWorkPaneModule() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_registerStaticWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterStaticWorkPaneModule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_registerStaticNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_registerStaticNodeGraphModule() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_registerStaticNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestregisterStaticNodeGraphModule(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_registerCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_registerCommandModule() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->registerCommandModule(context, request, response); }));
    }
    ~WithRawCallbackMethod_registerCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerCommandModule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_registerWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_registerWorkPaneModule() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->registerWorkPaneModule(context, request, response); }));
    }
    ~WithRawCallbackMethod_registerWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerWorkPaneModule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_registerNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_registerNodeGraphModule() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->registerNodeGraphModule(context, request, response); }));
    }
    ~WithRawCallbackMethod_registerNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerNodeGraphModule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_registerStaticCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_registerStaticCommandModule() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->registerStaticCommandModule(context, request, response); }));
    }
    ~WithRawCallbackMethod_registerStaticCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerStaticCommandModule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_registerStaticWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_registerStaticWorkPaneModule() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->registerStaticWorkPaneModule(context, request, response); }));
    }
    ~WithRawCallbackMethod_registerStaticWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerStaticWorkPaneModule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_registerStaticNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_registerStaticNodeGraphModule() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->registerStaticNodeGraphModule(context, request, response); }));
    }
    ~WithRawCallbackMethod_registerStaticNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status registerStaticNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* registerStaticNodeGraphModule(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_registerCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_registerCommandModule() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* streamer) {
                       return this->StreamedregisterCommandModule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_registerCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status registerCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedregisterCommandModule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest,::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_registerWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_registerWorkPaneModule() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* streamer) {
                       return this->StreamedregisterWorkPaneModule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_registerWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status registerWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedregisterWorkPaneModule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest,::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_registerNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_registerNodeGraphModule() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* streamer) {
                       return this->StreamedregisterNodeGraphModule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_registerNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status registerNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedregisterNodeGraphModule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest,::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_registerStaticCommandModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_registerStaticCommandModule() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* streamer) {
                       return this->StreamedregisterStaticCommandModule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_registerStaticCommandModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status registerStaticCommandModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedregisterStaticCommandModule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest,::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_registerStaticWorkPaneModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_registerStaticWorkPaneModule() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* streamer) {
                       return this->StreamedregisterStaticWorkPaneModule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_registerStaticWorkPaneModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status registerStaticWorkPaneModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedregisterStaticWorkPaneModule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest,::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_registerStaticNodeGraphModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_registerStaticNodeGraphModule() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* streamer) {
                       return this->StreamedregisterStaticNodeGraphModule(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_registerStaticNodeGraphModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status registerStaticNodeGraphModule(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* /*request*/, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedregisterStaticNodeGraphModule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest,::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_registerCommandModule<WithStreamedUnaryMethod_registerWorkPaneModule<WithStreamedUnaryMethod_registerNodeGraphModule<WithStreamedUnaryMethod_registerStaticCommandModule<WithStreamedUnaryMethod_registerStaticWorkPaneModule<WithStreamedUnaryMethod_registerStaticNodeGraphModule<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_registerCommandModule<WithStreamedUnaryMethod_registerWorkPaneModule<WithStreamedUnaryMethod_registerNodeGraphModule<WithStreamedUnaryMethod_registerStaticCommandModule<WithStreamedUnaryMethod_registerStaticWorkPaneModule<WithStreamedUnaryMethod_registerStaticNodeGraphModule<Service > > > > > > StreamedService;
};

// GRPC interface definition for class 'ApiNodeGraphModuleInfo' from 'apimodule.h'
class ApiNodeGraphModuleInfoService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiNodeGraphModuleInfoService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Creates info for Api node graph module
    // / 
    virtual ::grpc::Status create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>> Asynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>>(Asynccreate1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>> PrepareAsynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>>(PrepareAsynccreate1Raw(context, request, cq));
    }
    // / Destroys a ApiNodeGraphModuleInfo object created by create()
    virtual ::grpc::Status destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncdestroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(Asyncdestroy1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdestroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdestroy1Raw(context, request, cq));
    }
    // / Function to set the create function callback for a node graph module
    virtual ::grpc::Status setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>> AsyncsetCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>>(AsyncsetCreateFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>> PrepareAsyncsetCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>>(PrepareAsyncsetCreateFunctionRaw(context, request, cq));
    }
    // / Function to set the destroy function callback for a node graph module
    virtual ::grpc::Status setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>> AsyncsetDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>>(AsyncsetDestroyFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>> PrepareAsyncsetDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>>(PrepareAsyncsetDestroyFunctionRaw(context, request, cq));
    }
    // / Function to set the evaluate function callback for a node graph module
    virtual ::grpc::Status setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>> AsyncsetOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>>(AsyncsetOnEvaluateFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>> PrepareAsyncsetOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>>(PrepareAsyncsetOnEvaluateFunctionRaw(context, request, cq));
    }
    // / Sets the function to call when the user clicks the trigger button in the node inspector
    virtual ::grpc::Status setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>> AsyncsetOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>>(AsyncsetOnTriggerFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>> PrepareAsyncsetOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>>(PrepareAsyncsetOnTriggerFunctionRaw(context, request, cq));
    }
    // / Sets the output type of the node graph
    virtual ::grpc::Status setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetOutTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetOutTypeRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Creates info for Api node graph module
      // / 
      virtual void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Destroys a ApiNodeGraphModuleInfo object created by create()
      virtual void destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to set the create function callback for a node graph module
      virtual void setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to set the destroy function callback for a node graph module
      virtual void setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to set the evaluate function callback for a node graph module
      virtual void setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the function to call when the user clicks the trigger button in the node inspector
      virtual void setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the output type of the node graph
      virtual void setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* Asynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* PrepareAsynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* Asyncdestroy1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdestroy1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* AsyncsetCreateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* PrepareAsyncsetCreateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* AsyncsetDestroyFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* PrepareAsyncsetDestroyFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* AsyncsetOnEvaluateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* PrepareAsyncsetOnEvaluateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* AsyncsetOnTriggerFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* PrepareAsyncsetOnTriggerFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetOutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetOutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>> Asynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>>(Asynccreate1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>> PrepareAsynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>>(PrepareAsynccreate1Raw(context, request, cq));
    }
    ::grpc::Status destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncdestroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(Asyncdestroy1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdestroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdestroy1Raw(context, request, cq));
    }
    ::grpc::Status setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>> AsyncsetCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>>(AsyncsetCreateFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>> PrepareAsyncsetCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>>(PrepareAsyncsetCreateFunctionRaw(context, request, cq));
    }
    ::grpc::Status setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>> AsyncsetDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>>(AsyncsetDestroyFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>> PrepareAsyncsetDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>>(PrepareAsyncsetDestroyFunctionRaw(context, request, cq));
    }
    ::grpc::Status setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>> AsyncsetOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>>(AsyncsetOnEvaluateFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>> PrepareAsyncsetOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>>(PrepareAsyncsetOnEvaluateFunctionRaw(context, request, cq));
    }
    ::grpc::Status setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>> AsyncsetOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>>(AsyncsetOnTriggerFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>> PrepareAsyncsetOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>>(PrepareAsyncsetOnTriggerFunctionRaw(context, request, cq));
    }
    ::grpc::Status setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetOutTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetOutTypeRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response, std::function<void(::grpc::Status)>) override;
      void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response, std::function<void(::grpc::Status)>) override;
      void setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response, std::function<void(::grpc::Status)>) override;
      void setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response, std::function<void(::grpc::Status)>) override;
      void setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response, std::function<void(::grpc::Status)>) override;
      void setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* Asynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* PrepareAsynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Asyncdestroy1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdestroy1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* AsyncsetCreateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* PrepareAsyncsetCreateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* AsyncsetDestroyFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* PrepareAsyncsetDestroyFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* AsyncsetOnEvaluateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* PrepareAsyncsetOnEvaluateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* AsyncsetOnTriggerFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* PrepareAsyncsetOnTriggerFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetOutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetOutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_create1_;
    const ::grpc::internal::RpcMethod rpcmethod_destroy1_;
    const ::grpc::internal::RpcMethod rpcmethod_setCreateFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_setDestroyFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_setOnEvaluateFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_setOnTriggerFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_setOutType_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Creates info for Api node graph module
    // / 
    virtual ::grpc::Status create1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response);
    // / Destroys a ApiNodeGraphModuleInfo object created by create()
    virtual ::grpc::Status destroy1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response);
    // / Function to set the create function callback for a node graph module
    virtual ::grpc::Status setCreateFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response);
    // / Function to set the destroy function callback for a node graph module
    virtual ::grpc::Status setDestroyFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response);
    // / Function to set the evaluate function callback for a node graph module
    virtual ::grpc::Status setOnEvaluateFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response);
    // / Sets the function to call when the user clicks the trigger button in the node inspector
    virtual ::grpc::Status setOnTriggerFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response);
    // / Sets the output type of the node graph
    virtual ::grpc::Status setOutType(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create1() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate1(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_destroy1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_destroy1() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_destroy1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy1(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setCreateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setCreateFunction() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_setCreateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCreateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetCreateFunction(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setDestroyFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setDestroyFunction() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_setDestroyFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDestroyFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetDestroyFunction(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setOnEvaluateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setOnEvaluateFunction() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_setOnEvaluateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnEvaluateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetOnEvaluateFunction(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setOnTriggerFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setOnTriggerFunction() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_setOnTriggerFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnTriggerFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetOnTriggerFunction(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setOutType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setOutType() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_setOutType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOutType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetOutType(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_create1<WithAsyncMethod_destroy1<WithAsyncMethod_setCreateFunction<WithAsyncMethod_setDestroyFunction<WithAsyncMethod_setOnEvaluateFunction<WithAsyncMethod_setOnTriggerFunction<WithAsyncMethod_setOutType<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create1() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response) { return this->create1(context, request, response); }));}
    void SetMessageAllocatorFor_create1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_destroy1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_destroy1() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response) { return this->destroy1(context, request, response); }));}
    void SetMessageAllocatorFor_destroy1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_destroy1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setCreateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setCreateFunction() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response) { return this->setCreateFunction(context, request, response); }));}
    void SetMessageAllocatorFor_setCreateFunction(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setCreateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCreateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setCreateFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setDestroyFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setDestroyFunction() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response) { return this->setDestroyFunction(context, request, response); }));}
    void SetMessageAllocatorFor_setDestroyFunction(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setDestroyFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDestroyFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setDestroyFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setOnEvaluateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setOnEvaluateFunction() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response) { return this->setOnEvaluateFunction(context, request, response); }));}
    void SetMessageAllocatorFor_setOnEvaluateFunction(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setOnEvaluateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnEvaluateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setOnEvaluateFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setOnTriggerFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setOnTriggerFunction() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response) { return this->setOnTriggerFunction(context, request, response); }));}
    void SetMessageAllocatorFor_setOnTriggerFunction(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setOnTriggerFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnTriggerFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setOnTriggerFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setOutType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setOutType() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response) { return this->setOutType(context, request, response); }));}
    void SetMessageAllocatorFor_setOutType(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setOutType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOutType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setOutType(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_create1<WithCallbackMethod_destroy1<WithCallbackMethod_setCreateFunction<WithCallbackMethod_setDestroyFunction<WithCallbackMethod_setOnEvaluateFunction<WithCallbackMethod_setOnTriggerFunction<WithCallbackMethod_setOutType<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create1() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_destroy1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_destroy1() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_destroy1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setCreateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setCreateFunction() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_setCreateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCreateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setDestroyFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setDestroyFunction() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_setDestroyFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDestroyFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setOnEvaluateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setOnEvaluateFunction() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_setOnEvaluateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnEvaluateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setOnTriggerFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setOnTriggerFunction() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_setOnTriggerFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnTriggerFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setOutType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setOutType() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_setOutType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOutType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create1() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_destroy1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_destroy1() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_destroy1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setCreateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setCreateFunction() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_setCreateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCreateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetCreateFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setDestroyFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setDestroyFunction() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_setDestroyFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDestroyFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetDestroyFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setOnEvaluateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setOnEvaluateFunction() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_setOnEvaluateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnEvaluateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetOnEvaluateFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setOnTriggerFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setOnTriggerFunction() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_setOnTriggerFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnTriggerFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetOnTriggerFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setOutType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setOutType() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_setOutType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOutType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetOutType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create1() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->create1(context, request, response); }));
    }
    ~WithRawCallbackMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_destroy1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_destroy1() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->destroy1(context, request, response); }));
    }
    ~WithRawCallbackMethod_destroy1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setCreateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setCreateFunction() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setCreateFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_setCreateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCreateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setCreateFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setDestroyFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setDestroyFunction() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setDestroyFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_setDestroyFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDestroyFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setDestroyFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setOnEvaluateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setOnEvaluateFunction() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setOnEvaluateFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_setOnEvaluateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnEvaluateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setOnEvaluateFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setOnTriggerFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setOnTriggerFunction() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setOnTriggerFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_setOnTriggerFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOnTriggerFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setOnTriggerFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setOutType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setOutType() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setOutType(context, request, response); }));
    }
    ~WithRawCallbackMethod_setOutType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setOutType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setOutType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_create1() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* streamer) {
                       return this->Streamedcreate1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcreate1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraphModuleInfo_createRequest,::octaneapi::ApiNodeGraphModuleInfo_createResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_destroy1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_destroy1() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streameddestroy1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_destroy1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status destroy1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddestroy1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setCreateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setCreateFunction() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* streamer) {
                       return this->StreamedsetCreateFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setCreateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setCreateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetCreateFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest,::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setDestroyFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setDestroyFunction() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* streamer) {
                       return this->StreamedsetDestroyFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setDestroyFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setDestroyFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetDestroyFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest,::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setOnEvaluateFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setOnEvaluateFunction() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* streamer) {
                       return this->StreamedsetOnEvaluateFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setOnEvaluateFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setOnEvaluateFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetOnEvaluateFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest,::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setOnTriggerFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setOnTriggerFunction() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* streamer) {
                       return this->StreamedsetOnTriggerFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setOnTriggerFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setOnTriggerFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* /*request*/, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetOnTriggerFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest,::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setOutType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setOutType() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetOutType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setOutType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setOutType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetOutType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_create1<WithStreamedUnaryMethod_destroy1<WithStreamedUnaryMethod_setCreateFunction<WithStreamedUnaryMethod_setDestroyFunction<WithStreamedUnaryMethod_setOnEvaluateFunction<WithStreamedUnaryMethod_setOnTriggerFunction<WithStreamedUnaryMethod_setOutType<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_create1<WithStreamedUnaryMethod_destroy1<WithStreamedUnaryMethod_setCreateFunction<WithStreamedUnaryMethod_setDestroyFunction<WithStreamedUnaryMethod_setOnEvaluateFunction<WithStreamedUnaryMethod_setOnTriggerFunction<WithStreamedUnaryMethod_setOutType<Service > > > > > > > StreamedService;
};

// GRPC interface definition for class 'ApiWorkPaneModuleInfo' from 'apimodule.h'
class ApiWorkPaneModuleInfoService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiWorkPaneModuleInfoService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Creates info for Api work pane
    // /
    // / 
    virtual ::grpc::Status create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>> Asynccreate2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>>(Asynccreate2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>> PrepareAsynccreate2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>>(PrepareAsynccreate2Raw(context, request, cq));
    }
    // / Destroys a ApiWorkPaneModuleInfo object created by create()
    virtual ::grpc::Status destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncdestroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(Asyncdestroy2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdestroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdestroy2Raw(context, request, cq));
    }
    // / Function to set the workpane module create function
    virtual ::grpc::Status setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>> AsyncsetInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>>(AsyncsetInitFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>> PrepareAsyncsetInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>>(PrepareAsyncsetInitFunctionRaw(context, request, cq));
    }
    // / Function to set the workpane module destroy function
    virtual ::grpc::Status setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>> AsyncsetCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>>(AsyncsetCleanupFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>> PrepareAsyncsetCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>>(PrepareAsyncsetCleanupFunctionRaw(context, request, cq));
    }
    // / Function to a set list of command modules ids that will be displayed in the toolbar
    // / of work pane module
    virtual ::grpc::Status setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetWorkPaneToolbarIdsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetWorkPaneToolbarIdsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Creates info for Api work pane
      // /
      // / 
      virtual void create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Destroys a ApiWorkPaneModuleInfo object created by create()
      virtual void destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to set the workpane module create function
      virtual void setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to set the workpane module destroy function
      virtual void setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Function to a set list of command modules ids that will be displayed in the toolbar
      // / of work pane module
      virtual void setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* Asynccreate2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* PrepareAsynccreate2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* Asyncdestroy2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdestroy2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* AsyncsetInitFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* PrepareAsyncsetInitFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* AsyncsetCleanupFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* PrepareAsyncsetCleanupFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetWorkPaneToolbarIdsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetWorkPaneToolbarIdsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>> Asynccreate2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>>(Asynccreate2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>> PrepareAsynccreate2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>>(PrepareAsynccreate2Raw(context, request, cq));
    }
    ::grpc::Status destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncdestroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(Asyncdestroy2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdestroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdestroy2Raw(context, request, cq));
    }
    ::grpc::Status setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>> AsyncsetInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>>(AsyncsetInitFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>> PrepareAsyncsetInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>>(PrepareAsyncsetInitFunctionRaw(context, request, cq));
    }
    ::grpc::Status setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>> AsyncsetCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>>(AsyncsetCleanupFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>> PrepareAsyncsetCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>>(PrepareAsyncsetCleanupFunctionRaw(context, request, cq));
    }
    ::grpc::Status setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetWorkPaneToolbarIdsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetWorkPaneToolbarIdsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response, std::function<void(::grpc::Status)>) override;
      void create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response, std::function<void(::grpc::Status)>) override;
      void setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response, std::function<void(::grpc::Status)>) override;
      void setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* Asynccreate2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* PrepareAsynccreate2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Asyncdestroy2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdestroy2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* AsyncsetInitFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* PrepareAsyncsetInitFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* AsyncsetCleanupFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* PrepareAsyncsetCleanupFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetWorkPaneToolbarIdsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetWorkPaneToolbarIdsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_create2_;
    const ::grpc::internal::RpcMethod rpcmethod_destroy2_;
    const ::grpc::internal::RpcMethod rpcmethod_setInitFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_setCleanupFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_setWorkPaneToolbarIds_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Creates info for Api work pane
    // /
    // / 
    virtual ::grpc::Status create2(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response);
    // / Destroys a ApiWorkPaneModuleInfo object created by create()
    virtual ::grpc::Status destroy2(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response);
    // / Function to set the workpane module create function
    virtual ::grpc::Status setInitFunction(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response);
    // / Function to set the workpane module destroy function
    virtual ::grpc::Status setCleanupFunction(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response);
    // / Function to a set list of command modules ids that will be displayed in the toolbar
    // / of work pane module
    virtual ::grpc::Status setWorkPaneToolbarIds(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_create2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create2() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_create2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate2(::grpc::ServerContext* context, ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_destroy2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_destroy2() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_destroy2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy2(::grpc::ServerContext* context, ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setInitFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setInitFunction() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_setInitFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setInitFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetInitFunction(::grpc::ServerContext* context, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setCleanupFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setCleanupFunction() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_setCleanupFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCleanupFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetCleanupFunction(::grpc::ServerContext* context, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setWorkPaneToolbarIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setWorkPaneToolbarIds() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_setWorkPaneToolbarIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setWorkPaneToolbarIds(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetWorkPaneToolbarIds(::grpc::ServerContext* context, ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_create2<WithAsyncMethod_destroy2<WithAsyncMethod_setInitFunction<WithAsyncMethod_setCleanupFunction<WithAsyncMethod_setWorkPaneToolbarIds<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_create2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create2() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response) { return this->create2(context, request, response); }));}
    void SetMessageAllocatorFor_create2(
        ::grpc::MessageAllocator< ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_create2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create2(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_destroy2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_destroy2() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response) { return this->destroy2(context, request, response); }));}
    void SetMessageAllocatorFor_destroy2(
        ::grpc::MessageAllocator< ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_destroy2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy2(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setInitFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setInitFunction() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response) { return this->setInitFunction(context, request, response); }));}
    void SetMessageAllocatorFor_setInitFunction(
        ::grpc::MessageAllocator< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setInitFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setInitFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setInitFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setCleanupFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setCleanupFunction() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response) { return this->setCleanupFunction(context, request, response); }));}
    void SetMessageAllocatorFor_setCleanupFunction(
        ::grpc::MessageAllocator< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setCleanupFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCleanupFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setCleanupFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setWorkPaneToolbarIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setWorkPaneToolbarIds() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response) { return this->setWorkPaneToolbarIds(context, request, response); }));}
    void SetMessageAllocatorFor_setWorkPaneToolbarIds(
        ::grpc::MessageAllocator< ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setWorkPaneToolbarIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setWorkPaneToolbarIds(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setWorkPaneToolbarIds(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_create2<WithCallbackMethod_destroy2<WithCallbackMethod_setInitFunction<WithCallbackMethod_setCleanupFunction<WithCallbackMethod_setWorkPaneToolbarIds<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_create2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create2() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_create2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_destroy2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_destroy2() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_destroy2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setInitFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setInitFunction() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_setInitFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setInitFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setCleanupFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setCleanupFunction() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_setCleanupFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCleanupFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setWorkPaneToolbarIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setWorkPaneToolbarIds() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_setWorkPaneToolbarIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setWorkPaneToolbarIds(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_create2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create2() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_create2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_destroy2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_destroy2() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_destroy2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setInitFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setInitFunction() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_setInitFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setInitFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetInitFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setCleanupFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setCleanupFunction() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_setCleanupFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCleanupFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetCleanupFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setWorkPaneToolbarIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setWorkPaneToolbarIds() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_setWorkPaneToolbarIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setWorkPaneToolbarIds(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetWorkPaneToolbarIds(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create2() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->create2(context, request, response); }));
    }
    ~WithRawCallbackMethod_create2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_destroy2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_destroy2() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->destroy2(context, request, response); }));
    }
    ~WithRawCallbackMethod_destroy2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setInitFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setInitFunction() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setInitFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_setInitFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setInitFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setInitFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setCleanupFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setCleanupFunction() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setCleanupFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_setCleanupFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setCleanupFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setCleanupFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setWorkPaneToolbarIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setWorkPaneToolbarIds() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setWorkPaneToolbarIds(context, request, response); }));
    }
    ~WithRawCallbackMethod_setWorkPaneToolbarIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setWorkPaneToolbarIds(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setWorkPaneToolbarIds(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_create2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_create2() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* streamer) {
                       return this->Streamedcreate2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_create2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status create2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcreate2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiWorkPaneModuleInfo_createRequest,::octaneapi::ApiWorkPaneModuleInfo_createResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_destroy2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_destroy2() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streameddestroy2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_destroy2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status destroy2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddestroy2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setInitFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setInitFunction() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* streamer) {
                       return this->StreamedsetInitFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setInitFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setInitFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetInitFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest,::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setCleanupFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setCleanupFunction() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* streamer) {
                       return this->StreamedsetCleanupFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setCleanupFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setCleanupFunction(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* /*request*/, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetCleanupFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest,::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setWorkPaneToolbarIds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setWorkPaneToolbarIds() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetWorkPaneToolbarIds(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setWorkPaneToolbarIds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setWorkPaneToolbarIds(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetWorkPaneToolbarIds(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_create2<WithStreamedUnaryMethod_destroy2<WithStreamedUnaryMethod_setInitFunction<WithStreamedUnaryMethod_setCleanupFunction<WithStreamedUnaryMethod_setWorkPaneToolbarIds<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_create2<WithStreamedUnaryMethod_destroy2<WithStreamedUnaryMethod_setInitFunction<WithStreamedUnaryMethod_setCleanupFunction<WithStreamedUnaryMethod_setWorkPaneToolbarIds<Service > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apimodule_2eproto__INCLUDED
