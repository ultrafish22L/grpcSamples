// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodesystem_1.proto
#ifndef GRPC_apinodesystem_5f1_2eproto__INCLUDED
#define GRPC_apinodesystem_5f1_2eproto__INCLUDED

#include "apinodesystem_1.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

class ApiItemArrayService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiItemArrayService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Returns the size of the item list
    virtual ::grpc::Status size(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::octaneapi::ApiItemArray_sizeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_sizeResponse>> Asyncsize(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_sizeResponse>>(AsyncsizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_sizeResponse>> PrepareAsyncsize(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_sizeResponse>>(PrepareAsyncsizeRaw(context, request, cq));
    }
    // / Returns the item at the given index
    virtual ::grpc::Status get(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::octaneapi::ApiItemArray_getResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_getResponse>> Asyncget(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_getResponse>>(AsyncgetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_getResponse>> PrepareAsyncget(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_getResponse>>(PrepareAsyncgetRaw(context, request, cq));
    }
    // / Returns the internal array (owned by this object)
    virtual ::grpc::Status items(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::octaneapi::ApiItemArray_itemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_itemsResponse>> Asyncitems(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_itemsResponse>>(AsyncitemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_itemsResponse>> PrepareAsyncitems(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_itemsResponse>>(PrepareAsyncitemsRaw(context, request, cq));
    }
    // / Begin function for constant range-based for loop
    virtual ::grpc::Status begin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::octaneapi::ApiItemArray_begin1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_begin1Response>> Asyncbegin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_begin1Response>>(Asyncbegin1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_begin1Response>> PrepareAsyncbegin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_begin1Response>>(PrepareAsyncbegin1Raw(context, request, cq));
    }
    // / End function for constant range-based for loop
    virtual ::grpc::Status end1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::octaneapi::ApiItemArray_end1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_end1Response>> Asyncend1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_end1Response>>(Asyncend1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_end1Response>> PrepareAsyncend1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_end1Response>>(PrepareAsyncend1Raw(context, request, cq));
    }
    // / Init function (only used internally)
    virtual ::grpc::Status init(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncinit(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncinit(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncinitRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Returns the size of the item list
      virtual void size(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest* request, ::octaneapi::ApiItemArray_sizeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void size(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest* request, ::octaneapi::ApiItemArray_sizeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the item at the given index
      virtual void get(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest* request, ::octaneapi::ApiItemArray_getResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void get(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest* request, ::octaneapi::ApiItemArray_getResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the internal array (owned by this object)
      virtual void items(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest* request, ::octaneapi::ApiItemArray_itemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void items(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest* request, ::octaneapi::ApiItemArray_itemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Begin function for constant range-based for loop
      virtual void begin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request* request, ::octaneapi::ApiItemArray_begin1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void begin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request* request, ::octaneapi::ApiItemArray_begin1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / End function for constant range-based for loop
      virtual void end1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request* request, ::octaneapi::ApiItemArray_end1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void end1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request* request, ::octaneapi::ApiItemArray_end1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Init function (only used internally)
      virtual void init(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void init(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_sizeResponse>* AsyncsizeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_sizeResponse>* PrepareAsyncsizeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_getResponse>* AsyncgetRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_getResponse>* PrepareAsyncgetRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_itemsResponse>* AsyncitemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_itemsResponse>* PrepareAsyncitemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_begin1Response>* Asyncbegin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_begin1Response>* PrepareAsyncbegin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_end1Response>* Asyncend1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItemArray_end1Response>* PrepareAsyncend1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncinitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncinitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status size(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::octaneapi::ApiItemArray_sizeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_sizeResponse>> Asyncsize(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_sizeResponse>>(AsyncsizeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_sizeResponse>> PrepareAsyncsize(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_sizeResponse>>(PrepareAsyncsizeRaw(context, request, cq));
    }
    ::grpc::Status get(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::octaneapi::ApiItemArray_getResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_getResponse>> Asyncget(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_getResponse>>(AsyncgetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_getResponse>> PrepareAsyncget(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_getResponse>>(PrepareAsyncgetRaw(context, request, cq));
    }
    ::grpc::Status items(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::octaneapi::ApiItemArray_itemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_itemsResponse>> Asyncitems(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_itemsResponse>>(AsyncitemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_itemsResponse>> PrepareAsyncitems(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_itemsResponse>>(PrepareAsyncitemsRaw(context, request, cq));
    }
    ::grpc::Status begin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::octaneapi::ApiItemArray_begin1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_begin1Response>> Asyncbegin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_begin1Response>>(Asyncbegin1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_begin1Response>> PrepareAsyncbegin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_begin1Response>>(PrepareAsyncbegin1Raw(context, request, cq));
    }
    ::grpc::Status end1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::octaneapi::ApiItemArray_end1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_end1Response>> Asyncend1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_end1Response>>(Asyncend1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_end1Response>> PrepareAsyncend1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_end1Response>>(PrepareAsyncend1Raw(context, request, cq));
    }
    ::grpc::Status init(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncinit(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncinitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncinit(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncinitRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void size(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest* request, ::octaneapi::ApiItemArray_sizeResponse* response, std::function<void(::grpc::Status)>) override;
      void size(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest* request, ::octaneapi::ApiItemArray_sizeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void get(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest* request, ::octaneapi::ApiItemArray_getResponse* response, std::function<void(::grpc::Status)>) override;
      void get(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest* request, ::octaneapi::ApiItemArray_getResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void items(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest* request, ::octaneapi::ApiItemArray_itemsResponse* response, std::function<void(::grpc::Status)>) override;
      void items(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest* request, ::octaneapi::ApiItemArray_itemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void begin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request* request, ::octaneapi::ApiItemArray_begin1Response* response, std::function<void(::grpc::Status)>) override;
      void begin1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request* request, ::octaneapi::ApiItemArray_begin1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void end1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request* request, ::octaneapi::ApiItemArray_end1Response* response, std::function<void(::grpc::Status)>) override;
      void end1(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request* request, ::octaneapi::ApiItemArray_end1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void init(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void init(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_sizeResponse>* AsyncsizeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_sizeResponse>* PrepareAsyncsizeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_sizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_getResponse>* AsyncgetRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_getResponse>* PrepareAsyncgetRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_getRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_itemsResponse>* AsyncitemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_itemsResponse>* PrepareAsyncitemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_itemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_begin1Response>* Asyncbegin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_begin1Response>* PrepareAsyncbegin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_begin1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_end1Response>* Asyncend1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItemArray_end1Response>* PrepareAsyncend1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_end1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncinitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncinitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItemArray_initRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_size_;
    const ::grpc::internal::RpcMethod rpcmethod_get_;
    const ::grpc::internal::RpcMethod rpcmethod_items_;
    const ::grpc::internal::RpcMethod rpcmethod_begin1_;
    const ::grpc::internal::RpcMethod rpcmethod_end1_;
    const ::grpc::internal::RpcMethod rpcmethod_init_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Returns the size of the item list
    virtual ::grpc::Status size(::grpc::ServerContext* context, const ::octaneapi::ApiItemArray_sizeRequest* request, ::octaneapi::ApiItemArray_sizeResponse* response);
    // / Returns the item at the given index
    virtual ::grpc::Status get(::grpc::ServerContext* context, const ::octaneapi::ApiItemArray_getRequest* request, ::octaneapi::ApiItemArray_getResponse* response);
    // / Returns the internal array (owned by this object)
    virtual ::grpc::Status items(::grpc::ServerContext* context, const ::octaneapi::ApiItemArray_itemsRequest* request, ::octaneapi::ApiItemArray_itemsResponse* response);
    // / Begin function for constant range-based for loop
    virtual ::grpc::Status begin1(::grpc::ServerContext* context, const ::octaneapi::ApiItemArray_begin1Request* request, ::octaneapi::ApiItemArray_begin1Response* response);
    // / End function for constant range-based for loop
    virtual ::grpc::Status end1(::grpc::ServerContext* context, const ::octaneapi::ApiItemArray_end1Request* request, ::octaneapi::ApiItemArray_end1Response* response);
    // / Init function (only used internally)
    virtual ::grpc::Status init(::grpc::ServerContext* context, const ::octaneapi::ApiItemArray_initRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_size : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_size() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_size() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_sizeRequest* /*request*/, ::octaneapi::ApiItemArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestsize(::grpc::ServerContext* context, ::octaneapi::ApiItemArray_sizeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItemArray_sizeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_get() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_getRequest* /*request*/, ::octaneapi::ApiItemArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestget(::grpc::ServerContext* context, ::octaneapi::ApiItemArray_getRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItemArray_getResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_items : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_items() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_items() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_itemsRequest* /*request*/, ::octaneapi::ApiItemArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestitems(::grpc::ServerContext* context, ::octaneapi::ApiItemArray_itemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItemArray_itemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_begin1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_begin1() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_begin1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_begin1Request* /*request*/, ::octaneapi::ApiItemArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestbegin1(::grpc::ServerContext* context, ::octaneapi::ApiItemArray_begin1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItemArray_begin1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_end1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_end1() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_end1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_end1Request* /*request*/, ::octaneapi::ApiItemArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestend1(::grpc::ServerContext* context, ::octaneapi::ApiItemArray_end1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItemArray_end1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_init() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinit(::grpc::ServerContext* context, ::octaneapi::ApiItemArray_initRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_size<WithAsyncMethod_get<WithAsyncMethod_items<WithAsyncMethod_begin1<WithAsyncMethod_end1<WithAsyncMethod_init<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_size : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_size() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_sizeRequest, ::octaneapi::ApiItemArray_sizeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItemArray_sizeRequest* request, ::octaneapi::ApiItemArray_sizeResponse* response) { return this->size(context, request, response); }));}
    void SetMessageAllocatorFor_size(
        ::grpc::MessageAllocator< ::octaneapi::ApiItemArray_sizeRequest, ::octaneapi::ApiItemArray_sizeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_sizeRequest, ::octaneapi::ApiItemArray_sizeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_size() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_sizeRequest* /*request*/, ::octaneapi::ApiItemArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* size(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItemArray_sizeRequest* /*request*/, ::octaneapi::ApiItemArray_sizeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_get() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_getRequest, ::octaneapi::ApiItemArray_getResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItemArray_getRequest* request, ::octaneapi::ApiItemArray_getResponse* response) { return this->get(context, request, response); }));}
    void SetMessageAllocatorFor_get(
        ::grpc::MessageAllocator< ::octaneapi::ApiItemArray_getRequest, ::octaneapi::ApiItemArray_getResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_getRequest, ::octaneapi::ApiItemArray_getResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_getRequest* /*request*/, ::octaneapi::ApiItemArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* get(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItemArray_getRequest* /*request*/, ::octaneapi::ApiItemArray_getResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_items : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_items() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_itemsRequest, ::octaneapi::ApiItemArray_itemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItemArray_itemsRequest* request, ::octaneapi::ApiItemArray_itemsResponse* response) { return this->items(context, request, response); }));}
    void SetMessageAllocatorFor_items(
        ::grpc::MessageAllocator< ::octaneapi::ApiItemArray_itemsRequest, ::octaneapi::ApiItemArray_itemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_itemsRequest, ::octaneapi::ApiItemArray_itemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_items() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_itemsRequest* /*request*/, ::octaneapi::ApiItemArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* items(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItemArray_itemsRequest* /*request*/, ::octaneapi::ApiItemArray_itemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_begin1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_begin1() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_begin1Request, ::octaneapi::ApiItemArray_begin1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItemArray_begin1Request* request, ::octaneapi::ApiItemArray_begin1Response* response) { return this->begin1(context, request, response); }));}
    void SetMessageAllocatorFor_begin1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItemArray_begin1Request, ::octaneapi::ApiItemArray_begin1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_begin1Request, ::octaneapi::ApiItemArray_begin1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_begin1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_begin1Request* /*request*/, ::octaneapi::ApiItemArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* begin1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItemArray_begin1Request* /*request*/, ::octaneapi::ApiItemArray_begin1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_end1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_end1() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_end1Request, ::octaneapi::ApiItemArray_end1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItemArray_end1Request* request, ::octaneapi::ApiItemArray_end1Response* response) { return this->end1(context, request, response); }));}
    void SetMessageAllocatorFor_end1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItemArray_end1Request, ::octaneapi::ApiItemArray_end1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_end1Request, ::octaneapi::ApiItemArray_end1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_end1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_end1Request* /*request*/, ::octaneapi::ApiItemArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* end1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItemArray_end1Request* /*request*/, ::octaneapi::ApiItemArray_end1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_init() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_initRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItemArray_initRequest* request, ::google::protobuf::Empty* response) { return this->init(context, request, response); }));}
    void SetMessageAllocatorFor_init(
        ::grpc::MessageAllocator< ::octaneapi::ApiItemArray_initRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItemArray_initRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* init(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItemArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_size<WithCallbackMethod_get<WithCallbackMethod_items<WithCallbackMethod_begin1<WithCallbackMethod_end1<WithCallbackMethod_init<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_size : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_size() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_size() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_sizeRequest* /*request*/, ::octaneapi::ApiItemArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_get() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_getRequest* /*request*/, ::octaneapi::ApiItemArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_items : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_items() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_items() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_itemsRequest* /*request*/, ::octaneapi::ApiItemArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_begin1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_begin1() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_begin1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_begin1Request* /*request*/, ::octaneapi::ApiItemArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_end1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_end1() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_end1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_end1Request* /*request*/, ::octaneapi::ApiItemArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_init() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_size : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_size() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_size() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_sizeRequest* /*request*/, ::octaneapi::ApiItemArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestsize(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_get() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_getRequest* /*request*/, ::octaneapi::ApiItemArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestget(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_items : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_items() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_items() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_itemsRequest* /*request*/, ::octaneapi::ApiItemArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestitems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_begin1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_begin1() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_begin1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_begin1Request* /*request*/, ::octaneapi::ApiItemArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestbegin1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_end1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_end1() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_end1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_end1Request* /*request*/, ::octaneapi::ApiItemArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestend1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_init() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_size : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_size() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->size(context, request, response); }));
    }
    ~WithRawCallbackMethod_size() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_sizeRequest* /*request*/, ::octaneapi::ApiItemArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* size(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_get() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->get(context, request, response); }));
    }
    ~WithRawCallbackMethod_get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_getRequest* /*request*/, ::octaneapi::ApiItemArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* get(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_items : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_items() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->items(context, request, response); }));
    }
    ~WithRawCallbackMethod_items() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_itemsRequest* /*request*/, ::octaneapi::ApiItemArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* items(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_begin1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_begin1() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->begin1(context, request, response); }));
    }
    ~WithRawCallbackMethod_begin1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_begin1Request* /*request*/, ::octaneapi::ApiItemArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* begin1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_end1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_end1() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->end1(context, request, response); }));
    }
    ~WithRawCallbackMethod_end1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_end1Request* /*request*/, ::octaneapi::ApiItemArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* end1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_init() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->init(context, request, response); }));
    }
    ~WithRawCallbackMethod_init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* init(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_size : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_size() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItemArray_sizeRequest, ::octaneapi::ApiItemArray_sizeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItemArray_sizeRequest, ::octaneapi::ApiItemArray_sizeResponse>* streamer) {
                       return this->Streamedsize(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_size() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status size(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_sizeRequest* /*request*/, ::octaneapi::ApiItemArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedsize(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItemArray_sizeRequest,::octaneapi::ApiItemArray_sizeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_get : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_get() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItemArray_getRequest, ::octaneapi::ApiItemArray_getResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItemArray_getRequest, ::octaneapi::ApiItemArray_getResponse>* streamer) {
                       return this->Streamedget(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_get() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status get(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_getRequest* /*request*/, ::octaneapi::ApiItemArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedget(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItemArray_getRequest,::octaneapi::ApiItemArray_getResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_items : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_items() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItemArray_itemsRequest, ::octaneapi::ApiItemArray_itemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItemArray_itemsRequest, ::octaneapi::ApiItemArray_itemsResponse>* streamer) {
                       return this->Streameditems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_items() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status items(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_itemsRequest* /*request*/, ::octaneapi::ApiItemArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameditems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItemArray_itemsRequest,::octaneapi::ApiItemArray_itemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_begin1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_begin1() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItemArray_begin1Request, ::octaneapi::ApiItemArray_begin1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItemArray_begin1Request, ::octaneapi::ApiItemArray_begin1Response>* streamer) {
                       return this->Streamedbegin1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_begin1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status begin1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_begin1Request* /*request*/, ::octaneapi::ApiItemArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedbegin1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItemArray_begin1Request,::octaneapi::ApiItemArray_begin1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_end1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_end1() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItemArray_end1Request, ::octaneapi::ApiItemArray_end1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItemArray_end1Request, ::octaneapi::ApiItemArray_end1Response>* streamer) {
                       return this->Streamedend1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_end1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status end1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_end1Request* /*request*/, ::octaneapi::ApiItemArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedend1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItemArray_end1Request,::octaneapi::ApiItemArray_end1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_init : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_init() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItemArray_initRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItemArray_initRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedinit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_init() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status init(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItemArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedinit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItemArray_initRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_size<WithStreamedUnaryMethod_get<WithStreamedUnaryMethod_items<WithStreamedUnaryMethod_begin1<WithStreamedUnaryMethod_end1<WithStreamedUnaryMethod_init<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_size<WithStreamedUnaryMethod_get<WithStreamedUnaryMethod_items<WithStreamedUnaryMethod_begin1<WithStreamedUnaryMethod_end1<WithStreamedUnaryMethod_init<Service > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apinodesystem_5f1_2eproto__INCLUDED
