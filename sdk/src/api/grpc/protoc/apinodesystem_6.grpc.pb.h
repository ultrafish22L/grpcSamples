// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodesystem_6.proto
#ifndef GRPC_apinodesystem_5f6_2eproto__INCLUDED
#define GRPC_apinodesystem_5f6_2eproto__INCLUDED

#include "apinodesystem_6.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

class ApiNodeGraphService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiNodeGraphService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Creates a new graph of the specified type
    virtual ::grpc::Status create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::octaneapi::ApiNodeGraph_createResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_createResponse>> Asynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_createResponse>>(Asynccreate1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_createResponse>> PrepareAsynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_createResponse>>(PrepareAsynccreate1Raw(context, request, cq));
    }
    // / Returns info for this graph
    virtual ::grpc::Status info1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::octaneapi::ApiNodeGraph_infoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_infoResponse>> Asyncinfo1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_infoResponse>>(Asyncinfo1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_infoResponse>> PrepareAsyncinfo1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_infoResponse>>(PrepareAsyncinfo1Raw(context, request, cq));
    }
    // / Returns this graph's type
    virtual ::grpc::Status type1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::octaneapi::ApiNodeGraph_typeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_typeResponse>> Asynctype1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_typeResponse>>(Asynctype1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_typeResponse>> PrepareAsynctype1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_typeResponse>>(PrepareAsynctype1Raw(context, request, cq));
    }
    // / Returns the owned items of the node graph
    virtual ::grpc::Status getOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>> AsyncgetOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>>(AsyncgetOwnedItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>> PrepareAsyncgetOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>>(PrepareAsyncgetOwnedItemsRaw(context, request, cq));
    }
    // / Returns the list of input nodes
    virtual ::grpc::Status getInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getInputNodesResponse>> AsyncgetInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getInputNodesResponse>>(AsyncgetInputNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getInputNodesResponse>> PrepareAsyncgetInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getInputNodesResponse>>(PrepareAsyncgetInputNodesRaw(context, request, cq));
    }
    // / Returns the list of output nodes
    virtual ::grpc::Status getOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>> AsyncgetOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>>(AsyncgetOutputNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>> PrepareAsyncgetOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>>(PrepareAsyncgetOutputNodesRaw(context, request, cq));
    }
    // / Returns a list with all nodes in the graph of the given type
    virtual ::grpc::Status findNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::octaneapi::ApiNodeGraph_findNodesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findNodesResponse>> AsyncfindNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findNodesResponse>>(AsyncfindNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findNodesResponse>> PrepareAsyncfindNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findNodesResponse>>(PrepareAsyncfindNodesRaw(context, request, cq));
    }
    // / Returns the first node of the specified type
    virtual ::grpc::Status findFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>> AsyncfindFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>>(AsyncfindFirstNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>> PrepareAsyncfindFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>>(PrepareAsyncfindFirstNodeRaw(context, request, cq));
    }
    // / Returns the first output linker of the specified pin type
    virtual ::grpc::Status findFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>> AsyncfindFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>>(AsyncfindFirstOutputNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>> PrepareAsyncfindFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>>(PrepareAsyncfindFirstOutputNodeRaw(context, request, cq));
    }
    // / Find all items with a given name
    virtual ::grpc::Status findItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>> AsyncfindItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>>(AsyncfindItemsByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>> PrepareAsyncfindItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>>(PrepareAsyncfindItemsByNameRaw(context, request, cq));
    }
    // / Assigns linear time transformation to the animation of the nested owned items
    // / Can be used to offset or scale the animation playback
    // / 
    virtual ::grpc::Status setLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetLinearTimeTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetLinearTimeTransformRaw(context, request, cq));
    }
    // / Returns current ApiAnimationTimeTransform
    // / or NULL if it doesn't have one
    virtual ::grpc::Status timeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_timeTransformResponse>> AsynctimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_timeTransformResponse>>(AsynctimeTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_timeTransformResponse>> PrepareAsynctimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_timeTransformResponse>>(PrepareAsynctimeTransformRaw(context, request, cq));
    }
    // / Removes animation time transformation
    virtual ::grpc::Status clearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearTimeTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearTimeTransformRaw(context, request, cq));
    }
    // / Returns an array of null-terminated strings containing all paths of the assets
    // / currently used by the current node graph
    // / 
    // / 
    virtual ::grpc::Status getAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>> AsyncgetAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>>(AsyncgetAssetPathsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>> PrepareAsyncgetAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>>(PrepareAsyncgetAssetPathsRaw(context, request, cq));
    }
    // / Recenter all items in this graph around the given position
    virtual ::grpc::Status recenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncrecenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncrecenterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncrecenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncrecenterRaw(context, request, cq));
    }
    // / Clears the node graph, i
    virtual ::grpc::Status clear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearRaw(context, request, cq));
    }
    // / Copies the items from the source graph into this graph
    virtual ::grpc::Status copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::octaneapi::ApiNodeGraph_copyFromResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFromResponse>> AsynccopyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFromResponse>>(AsynccopyFrom1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFromResponse>> PrepareAsynccopyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFromResponse>>(PrepareAsynccopyFrom1Raw(context, request, cq));
    }
    // / Copies one item into the node graph
    virtual ::grpc::Status copyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom1Response>> AsynccopyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom1Response>>(AsynccopyFrom11Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom1Response>> PrepareAsynccopyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom1Response>>(PrepareAsynccopyFrom11Raw(context, request, cq));
    }
    // / Copies the tree starting at rootItem into this graph
    virtual ::grpc::Status copyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>> AsynccopyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>>(AsynccopyItemTreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>> PrepareAsynccopyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>>(PrepareAsynccopyItemTreeRaw(context, request, cq));
    }
    // / Copies an array of items into the node graph
    virtual ::grpc::Status copyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom2Response>> AsynccopyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom2Response>>(AsynccopyFrom2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom2Response>> PrepareAsynccopyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom2Response>>(PrepareAsynccopyFrom2Raw(context, request, cq));
    }
    // / Replace a group of node items with a group node containing a copy of these items
    virtual ::grpc::Status groupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_groupItemsResponse>> AsyncgroupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_groupItemsResponse>>(AsyncgroupItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_groupItemsResponse>> PrepareAsyncgroupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_groupItemsResponse>>(PrepareAsyncgroupItemsRaw(context, request, cq));
    }
    // / Replaces this node graph with a copy of its content in its parent node graph
    virtual ::grpc::Status ungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::octaneapi::ApiNodeGraph_ungroupResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_ungroupResponse>> Asyncungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_ungroupResponse>>(AsyncungroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_ungroupResponse>> PrepareAsyncungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_ungroupResponse>>(PrepareAsyncungroupRaw(context, request, cq));
    }
    // / Unfolds the specified node graph if it's inspectable, i
    virtual ::grpc::Status unfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncunfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncunfoldRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncunfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncunfoldRaw(context, request, cq));
    }
    // / Shows the node graph in a window, allowing the user to edit this node graph
    virtual ::grpc::Status showWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::octaneapi::ApiNodeGraph_showWindowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showWindowResponse>> AsyncshowWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showWindowResponse>>(AsyncshowWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showWindowResponse>> PrepareAsyncshowWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showWindowResponse>>(PrepareAsyncshowWindowRaw(context, request, cq));
    }
    // / Closes the opened node graph editor window (if any)
    virtual ::grpc::Status closeWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsynccloseWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynccloseWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynccloseWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynccloseWindowRaw(context, request, cq));
    }
    // / Opens a dialog window where the user can import items from liveDB and localDB
    virtual ::grpc::Status showDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showDbWindowResponse>> AsyncshowDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showDbWindowResponse>>(AsyncshowDbWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showDbWindowResponse>> PrepareAsyncshowDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showDbWindowResponse>>(PrepareAsyncshowDbWindowRaw(context, request, cq));
    }
    // / Closes the currently opened DB window (if any)
    // /
    // / 
    virtual ::grpc::Status closeDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsynccloseDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynccloseDbWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynccloseDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynccloseDbWindowRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Creates a new graph of the specified type
      virtual void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest* request, ::octaneapi::ApiNodeGraph_createResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest* request, ::octaneapi::ApiNodeGraph_createResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns info for this graph
      virtual void info1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest* request, ::octaneapi::ApiNodeGraph_infoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void info1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest* request, ::octaneapi::ApiNodeGraph_infoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns this graph's type
      virtual void type1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest* request, ::octaneapi::ApiNodeGraph_typeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void type1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest* request, ::octaneapi::ApiNodeGraph_typeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the owned items of the node graph
      virtual void getOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the list of input nodes
      virtual void getInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the list of output nodes
      virtual void getOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns a list with all nodes in the graph of the given type
      virtual void findNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest* request, ::octaneapi::ApiNodeGraph_findNodesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void findNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest* request, ::octaneapi::ApiNodeGraph_findNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the first node of the specified type
      virtual void findFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void findFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the first output linker of the specified pin type
      virtual void findFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void findFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Find all items with a given name
      virtual void findItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void findItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Assigns linear time transformation to the animation of the nested owned items
      // / Can be used to offset or scale the animation playback
      // / 
      virtual void setLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns current ApiAnimationTimeTransform
      // / or NULL if it doesn't have one
      virtual void timeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest* request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void timeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest* request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes animation time transformation
      virtual void clearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns an array of null-terminated strings containing all paths of the assets
      // / currently used by the current node graph
      // / 
      // / 
      virtual void getAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Recenter all items in this graph around the given position
      virtual void recenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void recenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Clears the node graph, i
      virtual void clear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies the items from the source graph into this graph
      virtual void copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest* request, ::octaneapi::ApiNodeGraph_copyFromResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest* request, ::octaneapi::ApiNodeGraph_copyFromResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies one item into the node graph
      virtual void copyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request* request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request* request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies the tree starting at rootItem into this graph
      virtual void copyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies an array of items into the node graph
      virtual void copyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request* request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request* request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Replace a group of node items with a group node containing a copy of these items
      virtual void groupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest* request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void groupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest* request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Replaces this node graph with a copy of its content in its parent node graph
      virtual void ungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest* request, ::octaneapi::ApiNodeGraph_ungroupResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest* request, ::octaneapi::ApiNodeGraph_ungroupResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Unfolds the specified node graph if it's inspectable, i
      virtual void unfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void unfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Shows the node graph in a window, allowing the user to edit this node graph
      virtual void showWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest* request, ::octaneapi::ApiNodeGraph_showWindowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void showWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest* request, ::octaneapi::ApiNodeGraph_showWindowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Closes the opened node graph editor window (if any)
      virtual void closeWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void closeWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Opens a dialog window where the user can import items from liveDB and localDB
      virtual void showDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void showDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Closes the currently opened DB window (if any)
      // /
      // / 
      virtual void closeDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void closeDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_createResponse>* Asynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_createResponse>* PrepareAsynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_infoResponse>* Asyncinfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_infoResponse>* PrepareAsyncinfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_typeResponse>* Asynctype1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_typeResponse>* PrepareAsynctype1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* AsyncgetOwnedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* PrepareAsyncgetOwnedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getInputNodesResponse>* AsyncgetInputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getInputNodesResponse>* PrepareAsyncgetInputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>* AsyncgetOutputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>* PrepareAsyncgetOutputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findNodesResponse>* AsyncfindNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findNodesResponse>* PrepareAsyncfindNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>* AsyncfindFirstNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>* PrepareAsyncfindFirstNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* AsyncfindFirstOutputNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* PrepareAsyncfindFirstOutputNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>* AsyncfindItemsByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>* PrepareAsyncfindItemsByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetLinearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetLinearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_timeTransformResponse>* AsynctimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_timeTransformResponse>* PrepareAsynctimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>* AsyncgetAssetPathsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>* PrepareAsyncgetAssetPathsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncrecenterRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncrecenterRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFromResponse>* AsynccopyFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFromResponse>* PrepareAsynccopyFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom1Response>* AsynccopyFrom11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom1Response>* PrepareAsynccopyFrom11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>* AsynccopyItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>* PrepareAsynccopyItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom2Response>* AsynccopyFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_copyFrom2Response>* PrepareAsynccopyFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_groupItemsResponse>* AsyncgroupItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_groupItemsResponse>* PrepareAsyncgroupItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_ungroupResponse>* AsyncungroupRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_ungroupResponse>* PrepareAsyncungroupRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncunfoldRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncunfoldRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showWindowResponse>* AsyncshowWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showWindowResponse>* PrepareAsyncshowWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynccloseWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynccloseWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showDbWindowResponse>* AsyncshowDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeGraph_showDbWindowResponse>* PrepareAsyncshowDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynccloseDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynccloseDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::octaneapi::ApiNodeGraph_createResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_createResponse>> Asynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_createResponse>>(Asynccreate1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_createResponse>> PrepareAsynccreate1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_createResponse>>(PrepareAsynccreate1Raw(context, request, cq));
    }
    ::grpc::Status info1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::octaneapi::ApiNodeGraph_infoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_infoResponse>> Asyncinfo1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_infoResponse>>(Asyncinfo1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_infoResponse>> PrepareAsyncinfo1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_infoResponse>>(PrepareAsyncinfo1Raw(context, request, cq));
    }
    ::grpc::Status type1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::octaneapi::ApiNodeGraph_typeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_typeResponse>> Asynctype1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_typeResponse>>(Asynctype1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_typeResponse>> PrepareAsynctype1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_typeResponse>>(PrepareAsynctype1Raw(context, request, cq));
    }
    ::grpc::Status getOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>> AsyncgetOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>>(AsyncgetOwnedItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>> PrepareAsyncgetOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>>(PrepareAsyncgetOwnedItemsRaw(context, request, cq));
    }
    ::grpc::Status getInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getInputNodesResponse>> AsyncgetInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getInputNodesResponse>>(AsyncgetInputNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getInputNodesResponse>> PrepareAsyncgetInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getInputNodesResponse>>(PrepareAsyncgetInputNodesRaw(context, request, cq));
    }
    ::grpc::Status getOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>> AsyncgetOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>>(AsyncgetOutputNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>> PrepareAsyncgetOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>>(PrepareAsyncgetOutputNodesRaw(context, request, cq));
    }
    ::grpc::Status findNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::octaneapi::ApiNodeGraph_findNodesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findNodesResponse>> AsyncfindNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findNodesResponse>>(AsyncfindNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findNodesResponse>> PrepareAsyncfindNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findNodesResponse>>(PrepareAsyncfindNodesRaw(context, request, cq));
    }
    ::grpc::Status findFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>> AsyncfindFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>>(AsyncfindFirstNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>> PrepareAsyncfindFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>>(PrepareAsyncfindFirstNodeRaw(context, request, cq));
    }
    ::grpc::Status findFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>> AsyncfindFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>>(AsyncfindFirstOutputNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>> PrepareAsyncfindFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>>(PrepareAsyncfindFirstOutputNodeRaw(context, request, cq));
    }
    ::grpc::Status findItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>> AsyncfindItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>>(AsyncfindItemsByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>> PrepareAsyncfindItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>>(PrepareAsyncfindItemsByNameRaw(context, request, cq));
    }
    ::grpc::Status setLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetLinearTimeTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetLinearTimeTransformRaw(context, request, cq));
    }
    ::grpc::Status timeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_timeTransformResponse>> AsynctimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_timeTransformResponse>>(AsynctimeTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_timeTransformResponse>> PrepareAsynctimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_timeTransformResponse>>(PrepareAsynctimeTransformRaw(context, request, cq));
    }
    ::grpc::Status clearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearTimeTransformRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearTimeTransformRaw(context, request, cq));
    }
    ::grpc::Status getAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>> AsyncgetAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>>(AsyncgetAssetPathsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>> PrepareAsyncgetAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>>(PrepareAsyncgetAssetPathsRaw(context, request, cq));
    }
    ::grpc::Status recenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncrecenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncrecenterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncrecenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncrecenterRaw(context, request, cq));
    }
    ::grpc::Status clear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearRaw(context, request, cq));
    }
    ::grpc::Status copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::octaneapi::ApiNodeGraph_copyFromResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFromResponse>> AsynccopyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFromResponse>>(AsynccopyFrom1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFromResponse>> PrepareAsynccopyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFromResponse>>(PrepareAsynccopyFrom1Raw(context, request, cq));
    }
    ::grpc::Status copyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom1Response>> AsynccopyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom1Response>>(AsynccopyFrom11Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom1Response>> PrepareAsynccopyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom1Response>>(PrepareAsynccopyFrom11Raw(context, request, cq));
    }
    ::grpc::Status copyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>> AsynccopyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>>(AsynccopyItemTreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>> PrepareAsynccopyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>>(PrepareAsynccopyItemTreeRaw(context, request, cq));
    }
    ::grpc::Status copyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom2Response>> AsynccopyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom2Response>>(AsynccopyFrom2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom2Response>> PrepareAsynccopyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom2Response>>(PrepareAsynccopyFrom2Raw(context, request, cq));
    }
    ::grpc::Status groupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_groupItemsResponse>> AsyncgroupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_groupItemsResponse>>(AsyncgroupItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_groupItemsResponse>> PrepareAsyncgroupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_groupItemsResponse>>(PrepareAsyncgroupItemsRaw(context, request, cq));
    }
    ::grpc::Status ungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::octaneapi::ApiNodeGraph_ungroupResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_ungroupResponse>> Asyncungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_ungroupResponse>>(AsyncungroupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_ungroupResponse>> PrepareAsyncungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_ungroupResponse>>(PrepareAsyncungroupRaw(context, request, cq));
    }
    ::grpc::Status unfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncunfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncunfoldRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncunfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncunfoldRaw(context, request, cq));
    }
    ::grpc::Status showWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::octaneapi::ApiNodeGraph_showWindowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showWindowResponse>> AsyncshowWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showWindowResponse>>(AsyncshowWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showWindowResponse>> PrepareAsyncshowWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showWindowResponse>>(PrepareAsyncshowWindowRaw(context, request, cq));
    }
    ::grpc::Status closeWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsynccloseWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynccloseWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynccloseWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynccloseWindowRaw(context, request, cq));
    }
    ::grpc::Status showDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showDbWindowResponse>> AsyncshowDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showDbWindowResponse>>(AsyncshowDbWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showDbWindowResponse>> PrepareAsyncshowDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showDbWindowResponse>>(PrepareAsyncshowDbWindowRaw(context, request, cq));
    }
    ::grpc::Status closeDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsynccloseDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynccloseDbWindowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynccloseDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynccloseDbWindowRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest* request, ::octaneapi::ApiNodeGraph_createResponse* response, std::function<void(::grpc::Status)>) override;
      void create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest* request, ::octaneapi::ApiNodeGraph_createResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void info1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest* request, ::octaneapi::ApiNodeGraph_infoResponse* response, std::function<void(::grpc::Status)>) override;
      void info1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest* request, ::octaneapi::ApiNodeGraph_infoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void type1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest* request, ::octaneapi::ApiNodeGraph_typeResponse* response, std::function<void(::grpc::Status)>) override;
      void type1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest* request, ::octaneapi::ApiNodeGraph_typeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response, std::function<void(::grpc::Status)>) override;
      void getOwnedItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response, std::function<void(::grpc::Status)>) override;
      void getInputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response, std::function<void(::grpc::Status)>) override;
      void getOutputNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void findNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest* request, ::octaneapi::ApiNodeGraph_findNodesResponse* response, std::function<void(::grpc::Status)>) override;
      void findNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest* request, ::octaneapi::ApiNodeGraph_findNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void findFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void findFirstNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void findFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void findFirstOutputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void findItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response, std::function<void(::grpc::Status)>) override;
      void findItemsByName(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setLinearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void timeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest* request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response, std::function<void(::grpc::Status)>) override;
      void timeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest* request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearTimeTransform(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response, std::function<void(::grpc::Status)>) override;
      void getAssetPaths(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void recenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void recenter(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clear(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest* request, ::octaneapi::ApiNodeGraph_copyFromResponse* response, std::function<void(::grpc::Status)>) override;
      void copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest* request, ::octaneapi::ApiNodeGraph_copyFromResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request* request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response, std::function<void(::grpc::Status)>) override;
      void copyFrom11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request* request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response, std::function<void(::grpc::Status)>) override;
      void copyItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request* request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response, std::function<void(::grpc::Status)>) override;
      void copyFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request* request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void groupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest* request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response, std::function<void(::grpc::Status)>) override;
      void groupItems(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest* request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest* request, ::octaneapi::ApiNodeGraph_ungroupResponse* response, std::function<void(::grpc::Status)>) override;
      void ungroup(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest* request, ::octaneapi::ApiNodeGraph_ungroupResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void unfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void unfold(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void showWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest* request, ::octaneapi::ApiNodeGraph_showWindowResponse* response, std::function<void(::grpc::Status)>) override;
      void showWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest* request, ::octaneapi::ApiNodeGraph_showWindowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void closeWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void closeWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void showDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response, std::function<void(::grpc::Status)>) override;
      void showDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void closeDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void closeDbWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_createResponse>* Asynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_createResponse>* PrepareAsynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_infoResponse>* Asyncinfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_infoResponse>* PrepareAsyncinfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_infoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_typeResponse>* Asynctype1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_typeResponse>* PrepareAsynctype1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_typeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* AsyncgetOwnedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* PrepareAsyncgetOwnedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getInputNodesResponse>* AsyncgetInputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getInputNodesResponse>* PrepareAsyncgetInputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>* AsyncgetOutputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>* PrepareAsyncgetOutputNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findNodesResponse>* AsyncfindNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findNodesResponse>* PrepareAsyncfindNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>* AsyncfindFirstNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>* PrepareAsyncfindFirstNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* AsyncfindFirstOutputNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* PrepareAsyncfindFirstOutputNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>* AsyncfindItemsByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>* PrepareAsyncfindItemsByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetLinearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetLinearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_timeTransformResponse>* AsynctimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_timeTransformResponse>* PrepareAsynctimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearTimeTransformRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>* AsyncgetAssetPathsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>* PrepareAsyncgetAssetPathsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncrecenterRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncrecenterRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_clearRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFromResponse>* AsynccopyFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFromResponse>* PrepareAsynccopyFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom1Response>* AsynccopyFrom11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom1Response>* PrepareAsynccopyFrom11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>* AsynccopyItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>* PrepareAsynccopyItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom2Response>* AsynccopyFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_copyFrom2Response>* PrepareAsynccopyFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_groupItemsResponse>* AsyncgroupItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_groupItemsResponse>* PrepareAsyncgroupItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_ungroupResponse>* AsyncungroupRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_ungroupResponse>* PrepareAsyncungroupRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncunfoldRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncunfoldRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showWindowResponse>* AsyncshowWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showWindowResponse>* PrepareAsyncshowWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynccloseWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynccloseWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showDbWindowResponse>* AsyncshowDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraph_showDbWindowResponse>* PrepareAsyncshowDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynccloseDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynccloseDbWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_create1_;
    const ::grpc::internal::RpcMethod rpcmethod_info1_;
    const ::grpc::internal::RpcMethod rpcmethod_type1_;
    const ::grpc::internal::RpcMethod rpcmethod_getOwnedItems_;
    const ::grpc::internal::RpcMethod rpcmethod_getInputNodes_;
    const ::grpc::internal::RpcMethod rpcmethod_getOutputNodes_;
    const ::grpc::internal::RpcMethod rpcmethod_findNodes_;
    const ::grpc::internal::RpcMethod rpcmethod_findFirstNode_;
    const ::grpc::internal::RpcMethod rpcmethod_findFirstOutputNode_;
    const ::grpc::internal::RpcMethod rpcmethod_findItemsByName_;
    const ::grpc::internal::RpcMethod rpcmethod_setLinearTimeTransform_;
    const ::grpc::internal::RpcMethod rpcmethod_timeTransform_;
    const ::grpc::internal::RpcMethod rpcmethod_clearTimeTransform_;
    const ::grpc::internal::RpcMethod rpcmethod_getAssetPaths_;
    const ::grpc::internal::RpcMethod rpcmethod_recenter_;
    const ::grpc::internal::RpcMethod rpcmethod_clear_;
    const ::grpc::internal::RpcMethod rpcmethod_copyFrom1_;
    const ::grpc::internal::RpcMethod rpcmethod_copyFrom11_;
    const ::grpc::internal::RpcMethod rpcmethod_copyItemTree_;
    const ::grpc::internal::RpcMethod rpcmethod_copyFrom2_;
    const ::grpc::internal::RpcMethod rpcmethod_groupItems_;
    const ::grpc::internal::RpcMethod rpcmethod_ungroup_;
    const ::grpc::internal::RpcMethod rpcmethod_unfold_;
    const ::grpc::internal::RpcMethod rpcmethod_showWindow_;
    const ::grpc::internal::RpcMethod rpcmethod_closeWindow_;
    const ::grpc::internal::RpcMethod rpcmethod_showDbWindow_;
    const ::grpc::internal::RpcMethod rpcmethod_closeDbWindow_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Creates a new graph of the specified type
    virtual ::grpc::Status create1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_createRequest* request, ::octaneapi::ApiNodeGraph_createResponse* response);
    // / Returns info for this graph
    virtual ::grpc::Status info1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_infoRequest* request, ::octaneapi::ApiNodeGraph_infoResponse* response);
    // / Returns this graph's type
    virtual ::grpc::Status type1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_typeRequest* request, ::octaneapi::ApiNodeGraph_typeResponse* response);
    // / Returns the owned items of the node graph
    virtual ::grpc::Status getOwnedItems(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response);
    // / Returns the list of input nodes
    virtual ::grpc::Status getInputNodes(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response);
    // / Returns the list of output nodes
    virtual ::grpc::Status getOutputNodes(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response);
    // / Returns a list with all nodes in the graph of the given type
    virtual ::grpc::Status findNodes(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest* request, ::octaneapi::ApiNodeGraph_findNodesResponse* response);
    // / Returns the first node of the specified type
    virtual ::grpc::Status findFirstNode(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response);
    // / Returns the first output linker of the specified pin type
    virtual ::grpc::Status findFirstOutputNode(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response);
    // / Find all items with a given name
    virtual ::grpc::Status findItemsByName(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response);
    // / Assigns linear time transformation to the animation of the nested owned items
    // / Can be used to offset or scale the animation playback
    // / 
    virtual ::grpc::Status setLinearTimeTransform(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* request, ::google::protobuf::Empty* response);
    // / Returns current ApiAnimationTimeTransform
    // / or NULL if it doesn't have one
    virtual ::grpc::Status timeTransform(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest* request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response);
    // / Removes animation time transformation
    virtual ::grpc::Status clearTimeTransform(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* request, ::google::protobuf::Empty* response);
    // / Returns an array of null-terminated strings containing all paths of the assets
    // / currently used by the current node graph
    // / 
    // / 
    virtual ::grpc::Status getAssetPaths(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response);
    // / Recenter all items in this graph around the given position
    virtual ::grpc::Status recenter(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest* request, ::google::protobuf::Empty* response);
    // / Clears the node graph, i
    virtual ::grpc::Status clear(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_clearRequest* request, ::google::protobuf::Empty* response);
    // / Copies the items from the source graph into this graph
    virtual ::grpc::Status copyFrom1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest* request, ::octaneapi::ApiNodeGraph_copyFromResponse* response);
    // / Copies one item into the node graph
    virtual ::grpc::Status copyFrom11(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request* request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response);
    // / Copies the tree starting at rootItem into this graph
    virtual ::grpc::Status copyItemTree(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response);
    // / Copies an array of items into the node graph
    virtual ::grpc::Status copyFrom2(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request* request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response);
    // / Replace a group of node items with a group node containing a copy of these items
    virtual ::grpc::Status groupItems(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest* request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response);
    // / Replaces this node graph with a copy of its content in its parent node graph
    virtual ::grpc::Status ungroup(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest* request, ::octaneapi::ApiNodeGraph_ungroupResponse* response);
    // / Unfolds the specified node graph if it's inspectable, i
    virtual ::grpc::Status unfold(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest* request, ::google::protobuf::Empty* response);
    // / Shows the node graph in a window, allowing the user to edit this node graph
    virtual ::grpc::Status showWindow(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest* request, ::octaneapi::ApiNodeGraph_showWindowResponse* response);
    // / Closes the opened node graph editor window (if any)
    virtual ::grpc::Status closeWindow(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest* request, ::google::protobuf::Empty* response);
    // / Opens a dialog window where the user can import items from liveDB and localDB
    virtual ::grpc::Status showDbWindow(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response);
    // / Closes the currently opened DB window (if any)
    // /
    // / 
    virtual ::grpc::Status closeDbWindow(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create1() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_createRequest* /*request*/, ::octaneapi::ApiNodeGraph_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate1(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_createRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_createResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_info1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_info1() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_info1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status info1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_infoRequest* /*request*/, ::octaneapi::ApiNodeGraph_infoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinfo1(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_infoRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_infoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_type1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_type1() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_type1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status type1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_typeRequest* /*request*/, ::octaneapi::ApiNodeGraph_typeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttype1(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_typeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_typeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getOwnedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getOwnedItems() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_getOwnedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOwnedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetOwnedItems(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getInputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getInputNodes() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_getInputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getInputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getInputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetInputNodes(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_getInputNodesRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_getInputNodesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getOutputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getOutputNodes() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_getOutputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOutputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetOutputNodes(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_getOutputNodesRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_getOutputNodesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_findNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_findNodes() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_findNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_findNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindNodes(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_findNodesRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_findNodesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_findFirstNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_findFirstNode() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_findFirstNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindFirstNode(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_findFirstNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_findFirstNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_findFirstOutputNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_findFirstOutputNode() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_findFirstOutputNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstOutputNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindFirstOutputNode(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_findItemsByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_findItemsByName() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_findItemsByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findItemsByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* /*request*/, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindItemsByName(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_findItemsByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_findItemsByNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setLinearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setLinearTimeTransform() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_setLinearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setLinearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetLinearTimeTransform(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_timeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_timeTransform() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_timeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status timeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_timeTransformRequest* /*request*/, ::octaneapi::ApiNodeGraph_timeTransformResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttimeTransform(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_timeTransformRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_timeTransformResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearTimeTransform() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_clearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearTimeTransform(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getAssetPaths : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getAssetPaths() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_getAssetPaths() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAssetPaths(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAssetPaths(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_getAssetPathsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_getAssetPathsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_recenter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_recenter() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_recenter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status recenter(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_recenterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrecenter(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_recenterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clear() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestclear(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_clearRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyFrom1() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_copyFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFromRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyFromResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyFrom1(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_copyFromRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_copyFromResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyFrom11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyFrom11() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_copyFrom11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom1Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyFrom11(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_copyFrom1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_copyFrom1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyItemTree() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_copyItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyItemTree(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_copyItemTreeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_copyItemTreeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyFrom2() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_copyFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom2Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyFrom2(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_copyFrom2Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_copyFrom2Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_groupItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_groupItems() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_groupItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status groupItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_groupItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_groupItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgroupItems(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_groupItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_groupItemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ungroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ungroup() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_ungroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ungroup(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_ungroupRequest* /*request*/, ::octaneapi::ApiNodeGraph_ungroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestungroup(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_ungroupRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_ungroupResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_unfold : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_unfold() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_unfold() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status unfold(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_unfoldRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestunfold(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_unfoldRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_showWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_showWindow() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_showWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestshowWindow(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_showWindowRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_showWindowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_closeWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_closeWindow() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_closeWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcloseWindow(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_closeWindowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_showDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_showDbWindow() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_showDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showDbWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestshowDbWindow(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_showDbWindowRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeGraph_showDbWindowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_closeDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_closeDbWindow() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_closeDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcloseDbWindow(::grpc::ServerContext* context, ::octaneapi::ApiNodeGraph_closeDbWindowRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_create1<WithAsyncMethod_info1<WithAsyncMethod_type1<WithAsyncMethod_getOwnedItems<WithAsyncMethod_getInputNodes<WithAsyncMethod_getOutputNodes<WithAsyncMethod_findNodes<WithAsyncMethod_findFirstNode<WithAsyncMethod_findFirstOutputNode<WithAsyncMethod_findItemsByName<WithAsyncMethod_setLinearTimeTransform<WithAsyncMethod_timeTransform<WithAsyncMethod_clearTimeTransform<WithAsyncMethod_getAssetPaths<WithAsyncMethod_recenter<WithAsyncMethod_clear<WithAsyncMethod_copyFrom1<WithAsyncMethod_copyFrom11<WithAsyncMethod_copyItemTree<WithAsyncMethod_copyFrom2<WithAsyncMethod_groupItems<WithAsyncMethod_ungroup<WithAsyncMethod_unfold<WithAsyncMethod_showWindow<WithAsyncMethod_closeWindow<WithAsyncMethod_showDbWindow<WithAsyncMethod_closeDbWindow<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create1() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_createRequest, ::octaneapi::ApiNodeGraph_createResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_createRequest* request, ::octaneapi::ApiNodeGraph_createResponse* response) { return this->create1(context, request, response); }));}
    void SetMessageAllocatorFor_create1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_createRequest, ::octaneapi::ApiNodeGraph_createResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_createRequest, ::octaneapi::ApiNodeGraph_createResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_createRequest* /*request*/, ::octaneapi::ApiNodeGraph_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_createRequest* /*request*/, ::octaneapi::ApiNodeGraph_createResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_info1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_info1() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_infoRequest, ::octaneapi::ApiNodeGraph_infoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_infoRequest* request, ::octaneapi::ApiNodeGraph_infoResponse* response) { return this->info1(context, request, response); }));}
    void SetMessageAllocatorFor_info1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_infoRequest, ::octaneapi::ApiNodeGraph_infoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_infoRequest, ::octaneapi::ApiNodeGraph_infoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_info1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status info1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_infoRequest* /*request*/, ::octaneapi::ApiNodeGraph_infoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* info1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_infoRequest* /*request*/, ::octaneapi::ApiNodeGraph_infoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_type1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_type1() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_typeRequest, ::octaneapi::ApiNodeGraph_typeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_typeRequest* request, ::octaneapi::ApiNodeGraph_typeResponse* response) { return this->type1(context, request, response); }));}
    void SetMessageAllocatorFor_type1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_typeRequest, ::octaneapi::ApiNodeGraph_typeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_typeRequest, ::octaneapi::ApiNodeGraph_typeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_type1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status type1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_typeRequest* /*request*/, ::octaneapi::ApiNodeGraph_typeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* type1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_typeRequest* /*request*/, ::octaneapi::ApiNodeGraph_typeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getOwnedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getOwnedItems() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getOwnedItemsRequest, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* request, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* response) { return this->getOwnedItems(context, request, response); }));}
    void SetMessageAllocatorFor_getOwnedItems(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_getOwnedItemsRequest, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getOwnedItemsRequest, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getOwnedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOwnedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getOwnedItems(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getInputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getInputNodes() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getInputNodesRequest, ::octaneapi::ApiNodeGraph_getInputNodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* request, ::octaneapi::ApiNodeGraph_getInputNodesResponse* response) { return this->getInputNodes(context, request, response); }));}
    void SetMessageAllocatorFor_getInputNodes(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_getInputNodesRequest, ::octaneapi::ApiNodeGraph_getInputNodesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getInputNodesRequest, ::octaneapi::ApiNodeGraph_getInputNodesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getInputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getInputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getInputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getInputNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getInputNodesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getOutputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getOutputNodes() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getOutputNodesRequest, ::octaneapi::ApiNodeGraph_getOutputNodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* request, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* response) { return this->getOutputNodes(context, request, response); }));}
    void SetMessageAllocatorFor_getOutputNodes(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_getOutputNodesRequest, ::octaneapi::ApiNodeGraph_getOutputNodesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getOutputNodesRequest, ::octaneapi::ApiNodeGraph_getOutputNodesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getOutputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOutputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getOutputNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_findNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_findNodes() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findNodesRequest, ::octaneapi::ApiNodeGraph_findNodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_findNodesRequest* request, ::octaneapi::ApiNodeGraph_findNodesResponse* response) { return this->findNodes(context, request, response); }));}
    void SetMessageAllocatorFor_findNodes(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_findNodesRequest, ::octaneapi::ApiNodeGraph_findNodesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findNodesRequest, ::octaneapi::ApiNodeGraph_findNodesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_findNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_findNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_findNodesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_findFirstNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_findFirstNode() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findFirstNodeRequest, ::octaneapi::ApiNodeGraph_findFirstNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* response) { return this->findFirstNode(context, request, response); }));}
    void SetMessageAllocatorFor_findFirstNode(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_findFirstNodeRequest, ::octaneapi::ApiNodeGraph_findFirstNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findFirstNodeRequest, ::octaneapi::ApiNodeGraph_findFirstNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_findFirstNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findFirstNode(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_findFirstOutputNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_findFirstOutputNode() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* request, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* response) { return this->findFirstOutputNode(context, request, response); }));}
    void SetMessageAllocatorFor_findFirstOutputNode(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_findFirstOutputNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstOutputNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findFirstOutputNode(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_findItemsByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_findItemsByName() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findItemsByNameRequest, ::octaneapi::ApiNodeGraph_findItemsByNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* request, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* response) { return this->findItemsByName(context, request, response); }));}
    void SetMessageAllocatorFor_findItemsByName(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_findItemsByNameRequest, ::octaneapi::ApiNodeGraph_findItemsByNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_findItemsByNameRequest, ::octaneapi::ApiNodeGraph_findItemsByNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_findItemsByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findItemsByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* /*request*/, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findItemsByName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* /*request*/, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setLinearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setLinearTimeTransform() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* request, ::google::protobuf::Empty* response) { return this->setLinearTimeTransform(context, request, response); }));}
    void SetMessageAllocatorFor_setLinearTimeTransform(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setLinearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setLinearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setLinearTimeTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_timeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_timeTransform() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_timeTransformRequest, ::octaneapi::ApiNodeGraph_timeTransformResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_timeTransformRequest* request, ::octaneapi::ApiNodeGraph_timeTransformResponse* response) { return this->timeTransform(context, request, response); }));}
    void SetMessageAllocatorFor_timeTransform(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_timeTransformRequest, ::octaneapi::ApiNodeGraph_timeTransformResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_timeTransformRequest, ::octaneapi::ApiNodeGraph_timeTransformResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_timeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status timeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_timeTransformRequest* /*request*/, ::octaneapi::ApiNodeGraph_timeTransformResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* timeTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_timeTransformRequest* /*request*/, ::octaneapi::ApiNodeGraph_timeTransformResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearTimeTransform() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_clearTimeTransformRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* request, ::google::protobuf::Empty* response) { return this->clearTimeTransform(context, request, response); }));}
    void SetMessageAllocatorFor_clearTimeTransform(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_clearTimeTransformRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_clearTimeTransformRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearTimeTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getAssetPaths : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getAssetPaths() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getAssetPathsRequest, ::octaneapi::ApiNodeGraph_getAssetPathsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* request, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* response) { return this->getAssetPaths(context, request, response); }));}
    void SetMessageAllocatorFor_getAssetPaths(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_getAssetPathsRequest, ::octaneapi::ApiNodeGraph_getAssetPathsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_getAssetPathsRequest, ::octaneapi::ApiNodeGraph_getAssetPathsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getAssetPaths() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAssetPaths(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAssetPaths(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_recenter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_recenter() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_recenterRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_recenterRequest* request, ::google::protobuf::Empty* response) { return this->recenter(context, request, response); }));}
    void SetMessageAllocatorFor_recenter(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_recenterRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_recenterRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_recenter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status recenter(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_recenterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* recenter(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_recenterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clear() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_clearRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_clearRequest* request, ::google::protobuf::Empty* response) { return this->clear(context, request, response); }));}
    void SetMessageAllocatorFor_clear(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_clearRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_clearRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clear(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyFrom1() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyFromRequest, ::octaneapi::ApiNodeGraph_copyFromResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_copyFromRequest* request, ::octaneapi::ApiNodeGraph_copyFromResponse* response) { return this->copyFrom1(context, request, response); }));}
    void SetMessageAllocatorFor_copyFrom1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_copyFromRequest, ::octaneapi::ApiNodeGraph_copyFromResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyFromRequest, ::octaneapi::ApiNodeGraph_copyFromResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFromRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyFromResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyFrom1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFromRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyFromResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyFrom11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyFrom11() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyFrom1Request, ::octaneapi::ApiNodeGraph_copyFrom1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_copyFrom1Request* request, ::octaneapi::ApiNodeGraph_copyFrom1Response* response) { return this->copyFrom11(context, request, response); }));}
    void SetMessageAllocatorFor_copyFrom11(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_copyFrom1Request, ::octaneapi::ApiNodeGraph_copyFrom1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyFrom1Request, ::octaneapi::ApiNodeGraph_copyFrom1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyFrom11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom1Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyFrom11(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom1Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyItemTree() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyItemTreeRequest, ::octaneapi::ApiNodeGraph_copyItemTreeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* request, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* response) { return this->copyItemTree(context, request, response); }));}
    void SetMessageAllocatorFor_copyItemTree(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_copyItemTreeRequest, ::octaneapi::ApiNodeGraph_copyItemTreeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyItemTreeRequest, ::octaneapi::ApiNodeGraph_copyItemTreeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyItemTree(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyFrom2() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyFrom2Request, ::octaneapi::ApiNodeGraph_copyFrom2Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_copyFrom2Request* request, ::octaneapi::ApiNodeGraph_copyFrom2Response* response) { return this->copyFrom2(context, request, response); }));}
    void SetMessageAllocatorFor_copyFrom2(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_copyFrom2Request, ::octaneapi::ApiNodeGraph_copyFrom2Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_copyFrom2Request, ::octaneapi::ApiNodeGraph_copyFrom2Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom2Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyFrom2(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom2Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom2Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_groupItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_groupItems() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_groupItemsRequest, ::octaneapi::ApiNodeGraph_groupItemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_groupItemsRequest* request, ::octaneapi::ApiNodeGraph_groupItemsResponse* response) { return this->groupItems(context, request, response); }));}
    void SetMessageAllocatorFor_groupItems(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_groupItemsRequest, ::octaneapi::ApiNodeGraph_groupItemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_groupItemsRequest, ::octaneapi::ApiNodeGraph_groupItemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_groupItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status groupItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_groupItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_groupItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* groupItems(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_groupItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_groupItemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ungroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ungroup() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_ungroupRequest, ::octaneapi::ApiNodeGraph_ungroupResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_ungroupRequest* request, ::octaneapi::ApiNodeGraph_ungroupResponse* response) { return this->ungroup(context, request, response); }));}
    void SetMessageAllocatorFor_ungroup(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_ungroupRequest, ::octaneapi::ApiNodeGraph_ungroupResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_ungroupRequest, ::octaneapi::ApiNodeGraph_ungroupResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ungroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ungroup(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_ungroupRequest* /*request*/, ::octaneapi::ApiNodeGraph_ungroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ungroup(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_ungroupRequest* /*request*/, ::octaneapi::ApiNodeGraph_ungroupResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_unfold : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_unfold() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_unfoldRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_unfoldRequest* request, ::google::protobuf::Empty* response) { return this->unfold(context, request, response); }));}
    void SetMessageAllocatorFor_unfold(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_unfoldRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_unfoldRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_unfold() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status unfold(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_unfoldRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* unfold(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_unfoldRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_showWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_showWindow() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_showWindowRequest, ::octaneapi::ApiNodeGraph_showWindowResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_showWindowRequest* request, ::octaneapi::ApiNodeGraph_showWindowResponse* response) { return this->showWindow(context, request, response); }));}
    void SetMessageAllocatorFor_showWindow(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_showWindowRequest, ::octaneapi::ApiNodeGraph_showWindowResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_showWindowRequest, ::octaneapi::ApiNodeGraph_showWindowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_showWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* showWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showWindowResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_closeWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_closeWindow() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_closeWindowRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_closeWindowRequest* request, ::google::protobuf::Empty* response) { return this->closeWindow(context, request, response); }));}
    void SetMessageAllocatorFor_closeWindow(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_closeWindowRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_closeWindowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_closeWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* closeWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_showDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_showDbWindow() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_showDbWindowRequest, ::octaneapi::ApiNodeGraph_showDbWindowResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* request, ::octaneapi::ApiNodeGraph_showDbWindowResponse* response) { return this->showDbWindow(context, request, response); }));}
    void SetMessageAllocatorFor_showDbWindow(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_showDbWindowRequest, ::octaneapi::ApiNodeGraph_showDbWindowResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_showDbWindowRequest, ::octaneapi::ApiNodeGraph_showDbWindowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_showDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showDbWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* showDbWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showDbWindowResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_closeDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_closeDbWindow() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_closeDbWindowRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* request, ::google::protobuf::Empty* response) { return this->closeDbWindow(context, request, response); }));}
    void SetMessageAllocatorFor_closeDbWindow(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeGraph_closeDbWindowRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeGraph_closeDbWindowRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_closeDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* closeDbWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_create1<WithCallbackMethod_info1<WithCallbackMethod_type1<WithCallbackMethod_getOwnedItems<WithCallbackMethod_getInputNodes<WithCallbackMethod_getOutputNodes<WithCallbackMethod_findNodes<WithCallbackMethod_findFirstNode<WithCallbackMethod_findFirstOutputNode<WithCallbackMethod_findItemsByName<WithCallbackMethod_setLinearTimeTransform<WithCallbackMethod_timeTransform<WithCallbackMethod_clearTimeTransform<WithCallbackMethod_getAssetPaths<WithCallbackMethod_recenter<WithCallbackMethod_clear<WithCallbackMethod_copyFrom1<WithCallbackMethod_copyFrom11<WithCallbackMethod_copyItemTree<WithCallbackMethod_copyFrom2<WithCallbackMethod_groupItems<WithCallbackMethod_ungroup<WithCallbackMethod_unfold<WithCallbackMethod_showWindow<WithCallbackMethod_closeWindow<WithCallbackMethod_showDbWindow<WithCallbackMethod_closeDbWindow<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create1() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_createRequest* /*request*/, ::octaneapi::ApiNodeGraph_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_info1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_info1() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_info1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status info1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_infoRequest* /*request*/, ::octaneapi::ApiNodeGraph_infoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_type1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_type1() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_type1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status type1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_typeRequest* /*request*/, ::octaneapi::ApiNodeGraph_typeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getOwnedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getOwnedItems() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_getOwnedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOwnedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getInputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getInputNodes() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_getInputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getInputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getInputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getOutputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getOutputNodes() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_getOutputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOutputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_findNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_findNodes() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_findNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_findNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_findFirstNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_findFirstNode() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_findFirstNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_findFirstOutputNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_findFirstOutputNode() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_findFirstOutputNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstOutputNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_findItemsByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_findItemsByName() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_findItemsByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findItemsByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* /*request*/, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setLinearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setLinearTimeTransform() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_setLinearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setLinearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_timeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_timeTransform() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_timeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status timeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_timeTransformRequest* /*request*/, ::octaneapi::ApiNodeGraph_timeTransformResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearTimeTransform() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_clearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getAssetPaths : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getAssetPaths() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_getAssetPaths() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAssetPaths(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_recenter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_recenter() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_recenter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status recenter(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_recenterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clear() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyFrom1() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_copyFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFromRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyFromResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyFrom11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyFrom11() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_copyFrom11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom1Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyItemTree() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_copyItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyFrom2() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_copyFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom2Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_groupItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_groupItems() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_groupItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status groupItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_groupItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_groupItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ungroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ungroup() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_ungroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ungroup(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_ungroupRequest* /*request*/, ::octaneapi::ApiNodeGraph_ungroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_unfold : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_unfold() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_unfold() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status unfold(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_unfoldRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_showWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_showWindow() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_showWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_closeWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_closeWindow() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_closeWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_showDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_showDbWindow() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_showDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showDbWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_closeDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_closeDbWindow() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_closeDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create1() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_createRequest* /*request*/, ::octaneapi::ApiNodeGraph_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_info1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_info1() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_info1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status info1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_infoRequest* /*request*/, ::octaneapi::ApiNodeGraph_infoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinfo1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_type1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_type1() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_type1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status type1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_typeRequest* /*request*/, ::octaneapi::ApiNodeGraph_typeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttype1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getOwnedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getOwnedItems() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_getOwnedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOwnedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetOwnedItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getInputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getInputNodes() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_getInputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getInputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getInputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetInputNodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getOutputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getOutputNodes() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_getOutputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOutputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetOutputNodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_findNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_findNodes() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_findNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_findNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindNodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_findFirstNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_findFirstNode() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_findFirstNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindFirstNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_findFirstOutputNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_findFirstOutputNode() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_findFirstOutputNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstOutputNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindFirstOutputNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_findItemsByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_findItemsByName() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_findItemsByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findItemsByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* /*request*/, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindItemsByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setLinearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setLinearTimeTransform() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_setLinearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setLinearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetLinearTimeTransform(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_timeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_timeTransform() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_timeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status timeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_timeTransformRequest* /*request*/, ::octaneapi::ApiNodeGraph_timeTransformResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttimeTransform(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearTimeTransform() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_clearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearTimeTransform(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getAssetPaths : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getAssetPaths() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_getAssetPaths() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAssetPaths(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAssetPaths(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_recenter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_recenter() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_recenter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status recenter(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_recenterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestrecenter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clear() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestclear(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyFrom1() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_copyFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFromRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyFromResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyFrom1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyFrom11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyFrom11() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_copyFrom11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom1Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyFrom11(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyItemTree() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_copyItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyItemTree(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyFrom2() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_copyFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom2Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyFrom2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_groupItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_groupItems() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_groupItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status groupItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_groupItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_groupItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgroupItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ungroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ungroup() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_ungroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ungroup(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_ungroupRequest* /*request*/, ::octaneapi::ApiNodeGraph_ungroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestungroup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_unfold : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_unfold() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_unfold() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status unfold(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_unfoldRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestunfold(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_showWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_showWindow() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_showWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestshowWindow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_closeWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_closeWindow() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_closeWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcloseWindow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_showDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_showDbWindow() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_showDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showDbWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestshowDbWindow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_closeDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_closeDbWindow() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_closeDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcloseDbWindow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create1() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->create1(context, request, response); }));
    }
    ~WithRawCallbackMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_createRequest* /*request*/, ::octaneapi::ApiNodeGraph_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_info1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_info1() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->info1(context, request, response); }));
    }
    ~WithRawCallbackMethod_info1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status info1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_infoRequest* /*request*/, ::octaneapi::ApiNodeGraph_infoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* info1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_type1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_type1() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->type1(context, request, response); }));
    }
    ~WithRawCallbackMethod_type1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status type1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_typeRequest* /*request*/, ::octaneapi::ApiNodeGraph_typeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* type1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getOwnedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getOwnedItems() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getOwnedItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_getOwnedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOwnedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getOwnedItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getInputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getInputNodes() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getInputNodes(context, request, response); }));
    }
    ~WithRawCallbackMethod_getInputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getInputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getInputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getInputNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getOutputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getOutputNodes() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getOutputNodes(context, request, response); }));
    }
    ~WithRawCallbackMethod_getOutputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getOutputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getOutputNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_findNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_findNodes() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->findNodes(context, request, response); }));
    }
    ~WithRawCallbackMethod_findNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_findNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_findFirstNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_findFirstNode() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->findFirstNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_findFirstNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findFirstNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_findFirstOutputNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_findFirstOutputNode() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->findFirstOutputNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_findFirstOutputNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findFirstOutputNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findFirstOutputNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_findItemsByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_findItemsByName() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->findItemsByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_findItemsByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findItemsByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* /*request*/, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findItemsByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setLinearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setLinearTimeTransform() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setLinearTimeTransform(context, request, response); }));
    }
    ~WithRawCallbackMethod_setLinearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setLinearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setLinearTimeTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_timeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_timeTransform() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->timeTransform(context, request, response); }));
    }
    ~WithRawCallbackMethod_timeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status timeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_timeTransformRequest* /*request*/, ::octaneapi::ApiNodeGraph_timeTransformResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* timeTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearTimeTransform() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearTimeTransform(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearTimeTransform(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getAssetPaths : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getAssetPaths() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getAssetPaths(context, request, response); }));
    }
    ~WithRawCallbackMethod_getAssetPaths() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAssetPaths(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAssetPaths(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_recenter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_recenter() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->recenter(context, request, response); }));
    }
    ~WithRawCallbackMethod_recenter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status recenter(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_recenterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* recenter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clear() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clear(context, request, response); }));
    }
    ~WithRawCallbackMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clear(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyFrom1() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyFrom1(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFromRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyFromResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyFrom1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyFrom11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyFrom11() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyFrom11(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyFrom11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom1Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyFrom11(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyItemTree() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyItemTree(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyItemTree(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyFrom2() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyFrom2(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom2Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyFrom2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_groupItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_groupItems() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->groupItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_groupItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status groupItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_groupItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_groupItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* groupItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ungroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ungroup() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ungroup(context, request, response); }));
    }
    ~WithRawCallbackMethod_ungroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ungroup(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_ungroupRequest* /*request*/, ::octaneapi::ApiNodeGraph_ungroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ungroup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_unfold : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_unfold() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->unfold(context, request, response); }));
    }
    ~WithRawCallbackMethod_unfold() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status unfold(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_unfoldRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* unfold(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_showWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_showWindow() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->showWindow(context, request, response); }));
    }
    ~WithRawCallbackMethod_showWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* showWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_closeWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_closeWindow() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->closeWindow(context, request, response); }));
    }
    ~WithRawCallbackMethod_closeWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* closeWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_showDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_showDbWindow() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->showDbWindow(context, request, response); }));
    }
    ~WithRawCallbackMethod_showDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status showDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showDbWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* showDbWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_closeDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_closeDbWindow() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->closeDbWindow(context, request, response); }));
    }
    ~WithRawCallbackMethod_closeDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status closeDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* closeDbWindow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_create1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_create1() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_createRequest, ::octaneapi::ApiNodeGraph_createResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_createRequest, ::octaneapi::ApiNodeGraph_createResponse>* streamer) {
                       return this->Streamedcreate1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_create1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status create1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_createRequest* /*request*/, ::octaneapi::ApiNodeGraph_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcreate1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_createRequest,::octaneapi::ApiNodeGraph_createResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_info1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_info1() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_infoRequest, ::octaneapi::ApiNodeGraph_infoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_infoRequest, ::octaneapi::ApiNodeGraph_infoResponse>* streamer) {
                       return this->Streamedinfo1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_info1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status info1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_infoRequest* /*request*/, ::octaneapi::ApiNodeGraph_infoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedinfo1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_infoRequest,::octaneapi::ApiNodeGraph_infoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_type1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_type1() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_typeRequest, ::octaneapi::ApiNodeGraph_typeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_typeRequest, ::octaneapi::ApiNodeGraph_typeResponse>* streamer) {
                       return this->Streamedtype1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_type1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status type1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_typeRequest* /*request*/, ::octaneapi::ApiNodeGraph_typeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedtype1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_typeRequest,::octaneapi::ApiNodeGraph_typeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getOwnedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getOwnedItems() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_getOwnedItemsRequest, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_getOwnedItemsRequest, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* streamer) {
                       return this->StreamedgetOwnedItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getOwnedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getOwnedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOwnedItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOwnedItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetOwnedItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_getOwnedItemsRequest,::octaneapi::ApiNodeGraph_getOwnedItemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getInputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getInputNodes() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_getInputNodesRequest, ::octaneapi::ApiNodeGraph_getInputNodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_getInputNodesRequest, ::octaneapi::ApiNodeGraph_getInputNodesResponse>* streamer) {
                       return this->StreamedgetInputNodes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getInputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getInputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getInputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getInputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetInputNodes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_getInputNodesRequest,::octaneapi::ApiNodeGraph_getInputNodesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getOutputNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getOutputNodes() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_getOutputNodesRequest, ::octaneapi::ApiNodeGraph_getOutputNodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_getOutputNodesRequest, ::octaneapi::ApiNodeGraph_getOutputNodesResponse>* streamer) {
                       return this->StreamedgetOutputNodes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getOutputNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getOutputNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getOutputNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_getOutputNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetOutputNodes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_getOutputNodesRequest,::octaneapi::ApiNodeGraph_getOutputNodesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_findNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_findNodes() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_findNodesRequest, ::octaneapi::ApiNodeGraph_findNodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_findNodesRequest, ::octaneapi::ApiNodeGraph_findNodesResponse>* streamer) {
                       return this->StreamedfindNodes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_findNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status findNodes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findNodesRequest* /*request*/, ::octaneapi::ApiNodeGraph_findNodesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfindNodes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_findNodesRequest,::octaneapi::ApiNodeGraph_findNodesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_findFirstNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_findFirstNode() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_findFirstNodeRequest, ::octaneapi::ApiNodeGraph_findFirstNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_findFirstNodeRequest, ::octaneapi::ApiNodeGraph_findFirstNodeResponse>* streamer) {
                       return this->StreamedfindFirstNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_findFirstNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status findFirstNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfindFirstNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_findFirstNodeRequest,::octaneapi::ApiNodeGraph_findFirstNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_findFirstOutputNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_findFirstOutputNode() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* streamer) {
                       return this->StreamedfindFirstOutputNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_findFirstOutputNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status findFirstOutputNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest* /*request*/, ::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfindFirstOutputNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_findFirstOutputNodeRequest,::octaneapi::ApiNodeGraph_findFirstOutputNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_findItemsByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_findItemsByName() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_findItemsByNameRequest, ::octaneapi::ApiNodeGraph_findItemsByNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_findItemsByNameRequest, ::octaneapi::ApiNodeGraph_findItemsByNameResponse>* streamer) {
                       return this->StreamedfindItemsByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_findItemsByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status findItemsByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_findItemsByNameRequest* /*request*/, ::octaneapi::ApiNodeGraph_findItemsByNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfindItemsByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_findItemsByNameRequest,::octaneapi::ApiNodeGraph_findItemsByNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setLinearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setLinearTimeTransform() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetLinearTimeTransform(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setLinearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setLinearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetLinearTimeTransform(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_setLinearTimeTransformRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_timeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_timeTransform() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_timeTransformRequest, ::octaneapi::ApiNodeGraph_timeTransformResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_timeTransformRequest, ::octaneapi::ApiNodeGraph_timeTransformResponse>* streamer) {
                       return this->StreamedtimeTransform(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_timeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status timeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_timeTransformRequest* /*request*/, ::octaneapi::ApiNodeGraph_timeTransformResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtimeTransform(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_timeTransformRequest,::octaneapi::ApiNodeGraph_timeTransformResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearTimeTransform : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearTimeTransform() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_clearTimeTransformRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_clearTimeTransformRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearTimeTransform(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearTimeTransform() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearTimeTransform(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearTimeTransformRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearTimeTransform(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_clearTimeTransformRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getAssetPaths : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getAssetPaths() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_getAssetPathsRequest, ::octaneapi::ApiNodeGraph_getAssetPathsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_getAssetPathsRequest, ::octaneapi::ApiNodeGraph_getAssetPathsResponse>* streamer) {
                       return this->StreamedgetAssetPaths(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getAssetPaths() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getAssetPaths(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_getAssetPathsRequest* /*request*/, ::octaneapi::ApiNodeGraph_getAssetPathsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetAssetPaths(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_getAssetPathsRequest,::octaneapi::ApiNodeGraph_getAssetPathsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_recenter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_recenter() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_recenterRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_recenterRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedrecenter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_recenter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status recenter(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_recenterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedrecenter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_recenterRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clear() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_clearRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_clearRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedclear(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedclear(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_clearRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyFrom1() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_copyFromRequest, ::octaneapi::ApiNodeGraph_copyFromResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_copyFromRequest, ::octaneapi::ApiNodeGraph_copyFromResponse>* streamer) {
                       return this->StreamedcopyFrom1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFromRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyFromResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyFrom1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_copyFromRequest,::octaneapi::ApiNodeGraph_copyFromResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyFrom11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyFrom11() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_copyFrom1Request, ::octaneapi::ApiNodeGraph_copyFrom1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_copyFrom1Request, ::octaneapi::ApiNodeGraph_copyFrom1Response>* streamer) {
                       return this->StreamedcopyFrom11(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyFrom11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyFrom11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom1Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyFrom11(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_copyFrom1Request,::octaneapi::ApiNodeGraph_copyFrom1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyItemTree() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_copyItemTreeRequest, ::octaneapi::ApiNodeGraph_copyItemTreeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_copyItemTreeRequest, ::octaneapi::ApiNodeGraph_copyItemTreeResponse>* streamer) {
                       return this->StreamedcopyItemTree(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyItemTreeRequest* /*request*/, ::octaneapi::ApiNodeGraph_copyItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyItemTree(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_copyItemTreeRequest,::octaneapi::ApiNodeGraph_copyItemTreeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyFrom2() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_copyFrom2Request, ::octaneapi::ApiNodeGraph_copyFrom2Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_copyFrom2Request, ::octaneapi::ApiNodeGraph_copyFrom2Response>* streamer) {
                       return this->StreamedcopyFrom2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_copyFrom2Request* /*request*/, ::octaneapi::ApiNodeGraph_copyFrom2Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyFrom2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_copyFrom2Request,::octaneapi::ApiNodeGraph_copyFrom2Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_groupItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_groupItems() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_groupItemsRequest, ::octaneapi::ApiNodeGraph_groupItemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_groupItemsRequest, ::octaneapi::ApiNodeGraph_groupItemsResponse>* streamer) {
                       return this->StreamedgroupItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_groupItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status groupItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_groupItemsRequest* /*request*/, ::octaneapi::ApiNodeGraph_groupItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgroupItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_groupItemsRequest,::octaneapi::ApiNodeGraph_groupItemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ungroup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ungroup() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_ungroupRequest, ::octaneapi::ApiNodeGraph_ungroupResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_ungroupRequest, ::octaneapi::ApiNodeGraph_ungroupResponse>* streamer) {
                       return this->Streamedungroup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ungroup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ungroup(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_ungroupRequest* /*request*/, ::octaneapi::ApiNodeGraph_ungroupResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedungroup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_ungroupRequest,::octaneapi::ApiNodeGraph_ungroupResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_unfold : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_unfold() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_unfoldRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_unfoldRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedunfold(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_unfold() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status unfold(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_unfoldRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedunfold(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_unfoldRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_showWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_showWindow() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_showWindowRequest, ::octaneapi::ApiNodeGraph_showWindowResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_showWindowRequest, ::octaneapi::ApiNodeGraph_showWindowResponse>* streamer) {
                       return this->StreamedshowWindow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_showWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status showWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedshowWindow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_showWindowRequest,::octaneapi::ApiNodeGraph_showWindowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_closeWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_closeWindow() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_closeWindowRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_closeWindowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedcloseWindow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_closeWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status closeWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcloseWindow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_closeWindowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_showDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_showDbWindow() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_showDbWindowRequest, ::octaneapi::ApiNodeGraph_showDbWindowResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_showDbWindowRequest, ::octaneapi::ApiNodeGraph_showDbWindowResponse>* streamer) {
                       return this->StreamedshowDbWindow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_showDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status showDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_showDbWindowRequest* /*request*/, ::octaneapi::ApiNodeGraph_showDbWindowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedshowDbWindow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_showDbWindowRequest,::octaneapi::ApiNodeGraph_showDbWindowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_closeDbWindow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_closeDbWindow() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeGraph_closeDbWindowRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeGraph_closeDbWindowRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedcloseDbWindow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_closeDbWindow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status closeDbWindow(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeGraph_closeDbWindowRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcloseDbWindow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeGraph_closeDbWindowRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_create1<WithStreamedUnaryMethod_info1<WithStreamedUnaryMethod_type1<WithStreamedUnaryMethod_getOwnedItems<WithStreamedUnaryMethod_getInputNodes<WithStreamedUnaryMethod_getOutputNodes<WithStreamedUnaryMethod_findNodes<WithStreamedUnaryMethod_findFirstNode<WithStreamedUnaryMethod_findFirstOutputNode<WithStreamedUnaryMethod_findItemsByName<WithStreamedUnaryMethod_setLinearTimeTransform<WithStreamedUnaryMethod_timeTransform<WithStreamedUnaryMethod_clearTimeTransform<WithStreamedUnaryMethod_getAssetPaths<WithStreamedUnaryMethod_recenter<WithStreamedUnaryMethod_clear<WithStreamedUnaryMethod_copyFrom1<WithStreamedUnaryMethod_copyFrom11<WithStreamedUnaryMethod_copyItemTree<WithStreamedUnaryMethod_copyFrom2<WithStreamedUnaryMethod_groupItems<WithStreamedUnaryMethod_ungroup<WithStreamedUnaryMethod_unfold<WithStreamedUnaryMethod_showWindow<WithStreamedUnaryMethod_closeWindow<WithStreamedUnaryMethod_showDbWindow<WithStreamedUnaryMethod_closeDbWindow<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_create1<WithStreamedUnaryMethod_info1<WithStreamedUnaryMethod_type1<WithStreamedUnaryMethod_getOwnedItems<WithStreamedUnaryMethod_getInputNodes<WithStreamedUnaryMethod_getOutputNodes<WithStreamedUnaryMethod_findNodes<WithStreamedUnaryMethod_findFirstNode<WithStreamedUnaryMethod_findFirstOutputNode<WithStreamedUnaryMethod_findItemsByName<WithStreamedUnaryMethod_setLinearTimeTransform<WithStreamedUnaryMethod_timeTransform<WithStreamedUnaryMethod_clearTimeTransform<WithStreamedUnaryMethod_getAssetPaths<WithStreamedUnaryMethod_recenter<WithStreamedUnaryMethod_clear<WithStreamedUnaryMethod_copyFrom1<WithStreamedUnaryMethod_copyFrom11<WithStreamedUnaryMethod_copyItemTree<WithStreamedUnaryMethod_copyFrom2<WithStreamedUnaryMethod_groupItems<WithStreamedUnaryMethod_ungroup<WithStreamedUnaryMethod_unfold<WithStreamedUnaryMethod_showWindow<WithStreamedUnaryMethod_closeWindow<WithStreamedUnaryMethod_showDbWindow<WithStreamedUnaryMethod_closeDbWindow<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apinodesystem_5f6_2eproto__INCLUDED
