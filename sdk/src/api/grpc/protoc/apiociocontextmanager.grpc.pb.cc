// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apiociocontextmanager.proto

#include "apiociocontextmanager.pb.h"
#include "apiociocontextmanager.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiOcioContextManagerService_method_names[] = {
  "/octaneapi.ApiOcioContextManagerService/guessIntermediateColorSpace",
  "/octaneapi.ApiOcioContextManagerService/create",
  "/octaneapi.ApiOcioContextManagerService/destroy",
  "/octaneapi.ApiOcioContextManagerService/addCallback",
  "/octaneapi.ApiOcioContextManagerService/removeCallback",
  "/octaneapi.ApiOcioContextManagerService/getDefaultConfigFilename",
  "/octaneapi.ApiOcioContextManagerService/getLastConfigLoadFilename",
  "/octaneapi.ApiOcioContextManagerService/createConfig",
  "/octaneapi.ApiOcioContextManagerService/getContextUsableForConversion",
  "/octaneapi.ApiOcioContextManagerService/donateConfig",
  "/octaneapi.ApiOcioContextManagerService/handlePendingConfigDonation",
};

std::unique_ptr< ApiOcioContextManagerService::Stub> ApiOcioContextManagerService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiOcioContextManagerService::Stub> stub(new ApiOcioContextManagerService::Stub(channel, options));
  return stub;
}

ApiOcioContextManagerService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_guessIntermediateColorSpace_(ApiOcioContextManagerService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_create_(ApiOcioContextManagerService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destroy_(ApiOcioContextManagerService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_addCallback_(ApiOcioContextManagerService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_removeCallback_(ApiOcioContextManagerService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getDefaultConfigFilename_(ApiOcioContextManagerService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getLastConfigLoadFilename_(ApiOcioContextManagerService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createConfig_(ApiOcioContextManagerService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getContextUsableForConversion_(ApiOcioContextManagerService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_donateConfig_(ApiOcioContextManagerService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_handlePendingConfigDonation_(ApiOcioContextManagerService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiOcioContextManagerService::Stub::guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_guessIntermediateColorSpace_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_guessIntermediateColorSpace_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_guessIntermediateColorSpace_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* ApiOcioContextManagerService::Stub::PrepareAsyncguessIntermediateColorSpaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_guessIntermediateColorSpace_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* ApiOcioContextManagerService::Stub::AsyncguessIntermediateColorSpaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncguessIntermediateColorSpaceRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::octaneapi::ApiOcioContextManager_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>* ApiOcioContextManagerService::Stub::PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_createResponse, ::octaneapi::ApiOcioContextManager_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>* ApiOcioContextManagerService::Stub::AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioContextManagerService::Stub::PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiOcioContextManager_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioContextManagerService::Stub::AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_addCallback_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addCallback_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addCallback_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>* ApiOcioContextManagerService::Stub::PrepareAsyncaddCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_addCallbackResponse, ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_addCallback_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>* ApiOcioContextManagerService::Stub::AsyncaddCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncaddCallbackRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_removeCallback_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_removeCallback_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_removeCallback_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* ApiOcioContextManagerService::Stub::PrepareAsyncremoveCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_removeCallbackResponse, ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_removeCallback_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* ApiOcioContextManagerService::Stub::AsyncremoveCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncremoveCallbackRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getDefaultConfigFilename_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDefaultConfigFilename_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDefaultConfigFilename_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* ApiOcioContextManagerService::Stub::PrepareAsyncgetDefaultConfigFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getDefaultConfigFilename_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* ApiOcioContextManagerService::Stub::AsyncgetDefaultConfigFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetDefaultConfigFilenameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getLastConfigLoadFilename_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLastConfigLoadFilename_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLastConfigLoadFilename_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* ApiOcioContextManagerService::Stub::PrepareAsyncgetLastConfigLoadFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getLastConfigLoadFilename_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* ApiOcioContextManagerService::Stub::AsyncgetLastConfigLoadFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetLastConfigLoadFilenameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createConfig_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createConfig_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createConfig_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>* ApiOcioContextManagerService::Stub::PrepareAsynccreateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_createConfigResponse, ::octaneapi::ApiOcioContextManager_createConfigRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createConfig_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>* ApiOcioContextManagerService::Stub::AsynccreateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateConfigRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getContextUsableForConversion_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getContextUsableForConversion_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getContextUsableForConversion_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* ApiOcioContextManagerService::Stub::PrepareAsyncgetContextUsableForConversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getContextUsableForConversion_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* ApiOcioContextManagerService::Stub::AsyncgetContextUsableForConversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetContextUsableForConversionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_donateConfig_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_donateConfig_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_donateConfig_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioContextManagerService::Stub::PrepareAsyncdonateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_donateConfig_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioContextManagerService::Stub::AsyncdonateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdonateConfigRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioContextManagerService::Stub::handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_handlePendingConfigDonation_, context, request, response);
}

void ApiOcioContextManagerService::Stub::async::handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_handlePendingConfigDonation_, context, request, response, std::move(f));
}

void ApiOcioContextManagerService::Stub::async::handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_handlePendingConfigDonation_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioContextManagerService::Stub::PrepareAsynchandlePendingConfigDonationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_handlePendingConfigDonation_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioContextManagerService::Stub::AsynchandlePendingConfigDonationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchandlePendingConfigDonationRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiOcioContextManagerService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* req,
             ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* resp) {
               return service->guessIntermediateColorSpace(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_createRequest* req,
             ::octaneapi::ApiOcioContextManager_createResponse* resp) {
               return service->create(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_addCallbackRequest* req,
             ::octaneapi::ApiOcioContextManager_addCallbackResponse* resp) {
               return service->addCallback(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* req,
             ::octaneapi::ApiOcioContextManager_removeCallbackResponse* resp) {
               return service->removeCallback(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* req,
             ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* resp) {
               return service->getDefaultConfigFilename(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* req,
             ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* resp) {
               return service->getLastConfigLoadFilename(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_createConfigRequest* req,
             ::octaneapi::ApiOcioContextManager_createConfigResponse* resp) {
               return service->createConfig(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* req,
             ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* resp) {
               return service->getContextUsableForConversion(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_donateConfigRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->donateConfig(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioContextManagerService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioContextManagerService::Service, ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioContextManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->handlePendingConfigDonation(ctx, req, resp);
             }, this)));
}

ApiOcioContextManagerService::Service::~Service() {
}

::grpc::Status ApiOcioContextManagerService::Service::guessIntermediateColorSpace(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::create(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::destroy(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::addCallback(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::removeCallback(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::getDefaultConfigFilename(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::getLastConfigLoadFilename(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::createConfig(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::getContextUsableForConversion(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::donateConfig(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioContextManagerService::Service::handlePendingConfigDonation(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

