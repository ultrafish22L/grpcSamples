// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: octaneimageexport.proto

#include "octaneimageexport.pb.h"
#include "octaneimageexport.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ImageExportSettingsService_method_names[] = {
  "/octaneapi.ImageExportSettingsService/getExtension",
  "/octaneapi.ImageExportSettingsService/getBitsPerComponent",
  "/octaneapi.ImageExportSettingsService/getBitsPerComponent1",
  "/octaneapi.ImageExportSettingsService/getBitDepth",
  "/octaneapi.ImageExportSettingsService/getFormat",
  "/octaneapi.ImageExportSettingsService/getType",
  "/octaneapi.ImageExportSettingsService/makeFromOldSettings",
  "/octaneapi.ImageExportSettingsService/makeFromImageSaveFormat",
  "/octaneapi.ImageExportSettingsService/makeExr",
  "/octaneapi.ImageExportSettingsService/makeTiff",
  "/octaneapi.ImageExportSettingsService/makePng",
  "/octaneapi.ImageExportSettingsService/makeJpeg",
};

std::unique_ptr< ImageExportSettingsService::Stub> ImageExportSettingsService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ImageExportSettingsService::Stub> stub(new ImageExportSettingsService::Stub(channel, options));
  return stub;
}

ImageExportSettingsService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_getExtension_(ImageExportSettingsService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getBitsPerComponent_(ImageExportSettingsService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getBitsPerComponent1_(ImageExportSettingsService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getBitDepth_(ImageExportSettingsService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getFormat_(ImageExportSettingsService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getType_(ImageExportSettingsService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_makeFromOldSettings_(ImageExportSettingsService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_makeFromImageSaveFormat_(ImageExportSettingsService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_makeExr_(ImageExportSettingsService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_makeTiff_(ImageExportSettingsService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_makePng_(ImageExportSettingsService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_makeJpeg_(ImageExportSettingsService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ImageExportSettingsService::Stub::getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::octaneapi::ImageExportSettings_getExtensionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getExtension_, context, request, response);
}

void ImageExportSettingsService::Stub::async::getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getExtension_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getExtension_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>* ImageExportSettingsService::Stub::PrepareAsyncgetExtensionRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_getExtensionResponse, ::octaneapi::ImageExportSettings_getExtensionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getExtension_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>* ImageExportSettingsService::Stub::AsyncgetExtensionRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetExtensionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getBitsPerComponent_, context, request, response);
}

void ImageExportSettingsService::Stub::async::getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getBitsPerComponent_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getBitsPerComponent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* ImageExportSettingsService::Stub::PrepareAsyncgetBitsPerComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse, ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getBitsPerComponent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* ImageExportSettingsService::Stub::AsyncgetBitsPerComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetBitsPerComponentRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getBitsPerComponent1_, context, request, response);
}

void ImageExportSettingsService::Stub::async::getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getBitsPerComponent1_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getBitsPerComponent1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* ImageExportSettingsService::Stub::PrepareAsyncgetBitsPerComponent1Raw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response, ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getBitsPerComponent1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* ImageExportSettingsService::Stub::AsyncgetBitsPerComponent1Raw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetBitsPerComponent1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getBitDepth_, context, request, response);
}

void ImageExportSettingsService::Stub::async::getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getBitDepth_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getBitDepth_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>* ImageExportSettingsService::Stub::PrepareAsyncgetBitDepthRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_getBitDepthResponse, ::octaneapi::ImageExportSettings_getBitDepthRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getBitDepth_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>* ImageExportSettingsService::Stub::AsyncgetBitDepthRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetBitDepthRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::octaneapi::ImageExportSettings_getFormatResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getFormat_, context, request, response);
}

void ImageExportSettingsService::Stub::async::getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getFormat_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getFormat_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>* ImageExportSettingsService::Stub::PrepareAsyncgetFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_getFormatResponse, ::octaneapi::ImageExportSettings_getFormatRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getFormat_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>* ImageExportSettingsService::Stub::AsyncgetFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetFormatRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::octaneapi::ImageExportSettings_getTypeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getType_, context, request, response);
}

void ImageExportSettingsService::Stub::async::getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getType_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getType_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>* ImageExportSettingsService::Stub::PrepareAsyncgetTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_getTypeResponse, ::octaneapi::ImageExportSettings_getTypeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getType_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>* ImageExportSettingsService::Stub::AsyncgetTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetTypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_makeFromOldSettings_, context, request, response);
}

void ImageExportSettingsService::Stub::async::makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeFromOldSettings_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeFromOldSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* ImageExportSettingsService::Stub::PrepareAsyncmakeFromOldSettingsRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse, ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_makeFromOldSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* ImageExportSettingsService::Stub::AsyncmakeFromOldSettingsRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmakeFromOldSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_makeFromImageSaveFormat_, context, request, response);
}

void ImageExportSettingsService::Stub::async::makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeFromImageSaveFormat_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeFromImageSaveFormat_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* ImageExportSettingsService::Stub::PrepareAsyncmakeFromImageSaveFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_makeFromImageSaveFormat_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* ImageExportSettingsService::Stub::AsyncmakeFromImageSaveFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmakeFromImageSaveFormatRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::octaneapi::ImageExportSettings_makeExrResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_makeExr_, context, request, response);
}

void ImageExportSettingsService::Stub::async::makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeExr_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeExr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>* ImageExportSettingsService::Stub::PrepareAsyncmakeExrRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_makeExrResponse, ::octaneapi::ImageExportSettings_makeExrRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_makeExr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>* ImageExportSettingsService::Stub::AsyncmakeExrRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmakeExrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::octaneapi::ImageExportSettings_makeTiffResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_makeTiff_, context, request, response);
}

void ImageExportSettingsService::Stub::async::makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeTiff_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeTiff_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>* ImageExportSettingsService::Stub::PrepareAsyncmakeTiffRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_makeTiffResponse, ::octaneapi::ImageExportSettings_makeTiffRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_makeTiff_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>* ImageExportSettingsService::Stub::AsyncmakeTiffRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmakeTiffRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::octaneapi::ImageExportSettings_makePngResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_makePng_, context, request, response);
}

void ImageExportSettingsService::Stub::async::makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makePng_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makePng_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>* ImageExportSettingsService::Stub::PrepareAsyncmakePngRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_makePngResponse, ::octaneapi::ImageExportSettings_makePngRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_makePng_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>* ImageExportSettingsService::Stub::AsyncmakePngRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmakePngRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ImageExportSettingsService::Stub::makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::octaneapi::ImageExportSettings_makeJpegResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_makeJpeg_, context, request, response);
}

void ImageExportSettingsService::Stub::async::makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeJpeg_, context, request, response, std::move(f));
}

void ImageExportSettingsService::Stub::async::makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_makeJpeg_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>* ImageExportSettingsService::Stub::PrepareAsyncmakeJpegRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ImageExportSettings_makeJpegResponse, ::octaneapi::ImageExportSettings_makeJpegRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_makeJpeg_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>* ImageExportSettingsService::Stub::AsyncmakeJpegRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmakeJpegRaw(context, request, cq);
  result->StartCall();
  return result;
}

ImageExportSettingsService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_getExtensionRequest* req,
             ::octaneapi::ImageExportSettings_getExtensionResponse* resp) {
               return service->getExtension(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* req,
             ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* resp) {
               return service->getBitsPerComponent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* req,
             ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* resp) {
               return service->getBitsPerComponent1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_getBitDepthRequest* req,
             ::octaneapi::ImageExportSettings_getBitDepthResponse* resp) {
               return service->getBitDepth(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_getFormatRequest* req,
             ::octaneapi::ImageExportSettings_getFormatResponse* resp) {
               return service->getFormat(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_getTypeRequest* req,
             ::octaneapi::ImageExportSettings_getTypeResponse* resp) {
               return service->getType(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* req,
             ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* resp) {
               return service->makeFromOldSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* req,
             ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* resp) {
               return service->makeFromImageSaveFormat(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_makeExrRequest* req,
             ::octaneapi::ImageExportSettings_makeExrResponse* resp) {
               return service->makeExr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_makeTiffRequest* req,
             ::octaneapi::ImageExportSettings_makeTiffResponse* resp) {
               return service->makeTiff(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_makePngRequest* req,
             ::octaneapi::ImageExportSettings_makePngResponse* resp) {
               return service->makePng(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ImageExportSettingsService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ImageExportSettingsService::Service, ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ImageExportSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ImageExportSettings_makeJpegRequest* req,
             ::octaneapi::ImageExportSettings_makeJpegResponse* resp) {
               return service->makeJpeg(ctx, req, resp);
             }, this)));
}

ImageExportSettingsService::Service::~Service() {
}

::grpc::Status ImageExportSettingsService::Service::getExtension(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::getBitsPerComponent(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::getBitsPerComponent1(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::getBitDepth(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::getFormat(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::getType(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::makeFromOldSettings(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::makeFromImageSaveFormat(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::makeExr(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::makeTiff(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::makePng(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ImageExportSettingsService::Service::makeJpeg(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

