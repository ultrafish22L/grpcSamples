// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodesystem_5.proto
#ifndef GRPC_apinodesystem_5f5_2eproto__INCLUDED
#define GRPC_apinodesystem_5f5_2eproto__INCLUDED

#include "apinodesystem_5.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

class ApiNodeArrayService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiNodeArrayService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Returns the size of the item list
    virtual ::grpc::Status size1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::octaneapi::ApiNodeArray_sizeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_sizeResponse>> Asyncsize1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_sizeResponse>>(Asyncsize1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_sizeResponse>> PrepareAsyncsize1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_sizeResponse>>(PrepareAsyncsize1Raw(context, request, cq));
    }
    // / Returns the item at the given index (or NULL)
    virtual ::grpc::Status get1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::octaneapi::ApiNodeArray_getResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_getResponse>> Asyncget1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_getResponse>>(Asyncget1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_getResponse>> PrepareAsyncget1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_getResponse>>(PrepareAsyncget1Raw(context, request, cq));
    }
    // / Returns the internal array (owned by this object)
    virtual ::grpc::Status items1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::octaneapi::ApiNodeArray_itemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_itemsResponse>> Asyncitems1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_itemsResponse>>(Asyncitems1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_itemsResponse>> PrepareAsyncitems1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_itemsResponse>>(PrepareAsyncitems1Raw(context, request, cq));
    }
    // / Begin function for constant range-based for loop
    virtual ::grpc::Status begin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::octaneapi::ApiNodeArray_begin1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_begin1Response>> Asyncbegin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_begin1Response>>(Asyncbegin11Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_begin1Response>> PrepareAsyncbegin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_begin1Response>>(PrepareAsyncbegin11Raw(context, request, cq));
    }
    // / End function for constant range-based for loop
    virtual ::grpc::Status end11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::octaneapi::ApiNodeArray_end1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_end1Response>> Asyncend11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_end1Response>>(Asyncend11Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_end1Response>> PrepareAsyncend11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_end1Response>>(PrepareAsyncend11Raw(context, request, cq));
    }
    // / Init function (only used internally)
    virtual ::grpc::Status init1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncinit1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(Asyncinit1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncinit1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncinit1Raw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Returns the size of the item list
      virtual void size1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest* request, ::octaneapi::ApiNodeArray_sizeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void size1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest* request, ::octaneapi::ApiNodeArray_sizeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the item at the given index (or NULL)
      virtual void get1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest* request, ::octaneapi::ApiNodeArray_getResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void get1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest* request, ::octaneapi::ApiNodeArray_getResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the internal array (owned by this object)
      virtual void items1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest* request, ::octaneapi::ApiNodeArray_itemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void items1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest* request, ::octaneapi::ApiNodeArray_itemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Begin function for constant range-based for loop
      virtual void begin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request* request, ::octaneapi::ApiNodeArray_begin1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void begin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request* request, ::octaneapi::ApiNodeArray_begin1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / End function for constant range-based for loop
      virtual void end11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request* request, ::octaneapi::ApiNodeArray_end1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void end11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request* request, ::octaneapi::ApiNodeArray_end1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Init function (only used internally)
      virtual void init1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void init1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_sizeResponse>* Asyncsize1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_sizeResponse>* PrepareAsyncsize1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_getResponse>* Asyncget1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_getResponse>* PrepareAsyncget1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_itemsResponse>* Asyncitems1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_itemsResponse>* PrepareAsyncitems1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_begin1Response>* Asyncbegin11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_begin1Response>* PrepareAsyncbegin11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_end1Response>* Asyncend11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiNodeArray_end1Response>* PrepareAsyncend11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* Asyncinit1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncinit1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status size1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::octaneapi::ApiNodeArray_sizeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_sizeResponse>> Asyncsize1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_sizeResponse>>(Asyncsize1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_sizeResponse>> PrepareAsyncsize1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_sizeResponse>>(PrepareAsyncsize1Raw(context, request, cq));
    }
    ::grpc::Status get1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::octaneapi::ApiNodeArray_getResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_getResponse>> Asyncget1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_getResponse>>(Asyncget1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_getResponse>> PrepareAsyncget1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_getResponse>>(PrepareAsyncget1Raw(context, request, cq));
    }
    ::grpc::Status items1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::octaneapi::ApiNodeArray_itemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_itemsResponse>> Asyncitems1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_itemsResponse>>(Asyncitems1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_itemsResponse>> PrepareAsyncitems1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_itemsResponse>>(PrepareAsyncitems1Raw(context, request, cq));
    }
    ::grpc::Status begin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::octaneapi::ApiNodeArray_begin1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_begin1Response>> Asyncbegin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_begin1Response>>(Asyncbegin11Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_begin1Response>> PrepareAsyncbegin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_begin1Response>>(PrepareAsyncbegin11Raw(context, request, cq));
    }
    ::grpc::Status end11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::octaneapi::ApiNodeArray_end1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_end1Response>> Asyncend11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_end1Response>>(Asyncend11Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_end1Response>> PrepareAsyncend11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_end1Response>>(PrepareAsyncend11Raw(context, request, cq));
    }
    ::grpc::Status init1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncinit1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(Asyncinit1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncinit1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncinit1Raw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void size1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest* request, ::octaneapi::ApiNodeArray_sizeResponse* response, std::function<void(::grpc::Status)>) override;
      void size1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest* request, ::octaneapi::ApiNodeArray_sizeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void get1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest* request, ::octaneapi::ApiNodeArray_getResponse* response, std::function<void(::grpc::Status)>) override;
      void get1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest* request, ::octaneapi::ApiNodeArray_getResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void items1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest* request, ::octaneapi::ApiNodeArray_itemsResponse* response, std::function<void(::grpc::Status)>) override;
      void items1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest* request, ::octaneapi::ApiNodeArray_itemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void begin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request* request, ::octaneapi::ApiNodeArray_begin1Response* response, std::function<void(::grpc::Status)>) override;
      void begin11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request* request, ::octaneapi::ApiNodeArray_begin1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void end11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request* request, ::octaneapi::ApiNodeArray_end1Response* response, std::function<void(::grpc::Status)>) override;
      void end11(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request* request, ::octaneapi::ApiNodeArray_end1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void init1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void init1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_sizeResponse>* Asyncsize1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_sizeResponse>* PrepareAsyncsize1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_sizeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_getResponse>* Asyncget1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_getResponse>* PrepareAsyncget1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_getRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_itemsResponse>* Asyncitems1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_itemsResponse>* PrepareAsyncitems1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_itemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_begin1Response>* Asyncbegin11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_begin1Response>* PrepareAsyncbegin11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_begin1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_end1Response>* Asyncend11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeArray_end1Response>* PrepareAsyncend11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_end1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Asyncinit1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncinit1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeArray_initRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_size1_;
    const ::grpc::internal::RpcMethod rpcmethod_get1_;
    const ::grpc::internal::RpcMethod rpcmethod_items1_;
    const ::grpc::internal::RpcMethod rpcmethod_begin11_;
    const ::grpc::internal::RpcMethod rpcmethod_end11_;
    const ::grpc::internal::RpcMethod rpcmethod_init1_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Returns the size of the item list
    virtual ::grpc::Status size1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeArray_sizeRequest* request, ::octaneapi::ApiNodeArray_sizeResponse* response);
    // / Returns the item at the given index (or NULL)
    virtual ::grpc::Status get1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeArray_getRequest* request, ::octaneapi::ApiNodeArray_getResponse* response);
    // / Returns the internal array (owned by this object)
    virtual ::grpc::Status items1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeArray_itemsRequest* request, ::octaneapi::ApiNodeArray_itemsResponse* response);
    // / Begin function for constant range-based for loop
    virtual ::grpc::Status begin11(::grpc::ServerContext* context, const ::octaneapi::ApiNodeArray_begin1Request* request, ::octaneapi::ApiNodeArray_begin1Response* response);
    // / End function for constant range-based for loop
    virtual ::grpc::Status end11(::grpc::ServerContext* context, const ::octaneapi::ApiNodeArray_end1Request* request, ::octaneapi::ApiNodeArray_end1Response* response);
    // / Init function (only used internally)
    virtual ::grpc::Status init1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeArray_initRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_size1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_size1() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_size1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_sizeRequest* /*request*/, ::octaneapi::ApiNodeArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestsize1(::grpc::ServerContext* context, ::octaneapi::ApiNodeArray_sizeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeArray_sizeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_get1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_get1() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_get1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_getRequest* /*request*/, ::octaneapi::ApiNodeArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestget1(::grpc::ServerContext* context, ::octaneapi::ApiNodeArray_getRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeArray_getResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_items1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_items1() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_items1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_itemsRequest* /*request*/, ::octaneapi::ApiNodeArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestitems1(::grpc::ServerContext* context, ::octaneapi::ApiNodeArray_itemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeArray_itemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_begin11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_begin11() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_begin11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_begin1Request* /*request*/, ::octaneapi::ApiNodeArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestbegin11(::grpc::ServerContext* context, ::octaneapi::ApiNodeArray_begin1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeArray_begin1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_end11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_end11() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_end11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_end1Request* /*request*/, ::octaneapi::ApiNodeArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestend11(::grpc::ServerContext* context, ::octaneapi::ApiNodeArray_end1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiNodeArray_end1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_init1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_init1() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_init1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinit1(::grpc::ServerContext* context, ::octaneapi::ApiNodeArray_initRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_size1<WithAsyncMethod_get1<WithAsyncMethod_items1<WithAsyncMethod_begin11<WithAsyncMethod_end11<WithAsyncMethod_init1<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_size1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_size1() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_sizeRequest, ::octaneapi::ApiNodeArray_sizeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeArray_sizeRequest* request, ::octaneapi::ApiNodeArray_sizeResponse* response) { return this->size1(context, request, response); }));}
    void SetMessageAllocatorFor_size1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeArray_sizeRequest, ::octaneapi::ApiNodeArray_sizeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_sizeRequest, ::octaneapi::ApiNodeArray_sizeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_size1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_sizeRequest* /*request*/, ::octaneapi::ApiNodeArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* size1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeArray_sizeRequest* /*request*/, ::octaneapi::ApiNodeArray_sizeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_get1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_get1() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_getRequest, ::octaneapi::ApiNodeArray_getResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeArray_getRequest* request, ::octaneapi::ApiNodeArray_getResponse* response) { return this->get1(context, request, response); }));}
    void SetMessageAllocatorFor_get1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeArray_getRequest, ::octaneapi::ApiNodeArray_getResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_getRequest, ::octaneapi::ApiNodeArray_getResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_get1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_getRequest* /*request*/, ::octaneapi::ApiNodeArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* get1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeArray_getRequest* /*request*/, ::octaneapi::ApiNodeArray_getResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_items1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_items1() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_itemsRequest, ::octaneapi::ApiNodeArray_itemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeArray_itemsRequest* request, ::octaneapi::ApiNodeArray_itemsResponse* response) { return this->items1(context, request, response); }));}
    void SetMessageAllocatorFor_items1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeArray_itemsRequest, ::octaneapi::ApiNodeArray_itemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_itemsRequest, ::octaneapi::ApiNodeArray_itemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_items1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_itemsRequest* /*request*/, ::octaneapi::ApiNodeArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* items1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeArray_itemsRequest* /*request*/, ::octaneapi::ApiNodeArray_itemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_begin11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_begin11() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_begin1Request, ::octaneapi::ApiNodeArray_begin1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeArray_begin1Request* request, ::octaneapi::ApiNodeArray_begin1Response* response) { return this->begin11(context, request, response); }));}
    void SetMessageAllocatorFor_begin11(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeArray_begin1Request, ::octaneapi::ApiNodeArray_begin1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_begin1Request, ::octaneapi::ApiNodeArray_begin1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_begin11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_begin1Request* /*request*/, ::octaneapi::ApiNodeArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* begin11(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeArray_begin1Request* /*request*/, ::octaneapi::ApiNodeArray_begin1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_end11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_end11() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_end1Request, ::octaneapi::ApiNodeArray_end1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeArray_end1Request* request, ::octaneapi::ApiNodeArray_end1Response* response) { return this->end11(context, request, response); }));}
    void SetMessageAllocatorFor_end11(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeArray_end1Request, ::octaneapi::ApiNodeArray_end1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_end1Request, ::octaneapi::ApiNodeArray_end1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_end11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_end1Request* /*request*/, ::octaneapi::ApiNodeArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* end11(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeArray_end1Request* /*request*/, ::octaneapi::ApiNodeArray_end1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_init1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_init1() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_initRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiNodeArray_initRequest* request, ::google::protobuf::Empty* response) { return this->init1(context, request, response); }));}
    void SetMessageAllocatorFor_init1(
        ::grpc::MessageAllocator< ::octaneapi::ApiNodeArray_initRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiNodeArray_initRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_init1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* init1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiNodeArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_size1<WithCallbackMethod_get1<WithCallbackMethod_items1<WithCallbackMethod_begin11<WithCallbackMethod_end11<WithCallbackMethod_init1<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_size1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_size1() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_size1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_sizeRequest* /*request*/, ::octaneapi::ApiNodeArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_get1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_get1() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_get1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_getRequest* /*request*/, ::octaneapi::ApiNodeArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_items1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_items1() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_items1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_itemsRequest* /*request*/, ::octaneapi::ApiNodeArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_begin11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_begin11() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_begin11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_begin1Request* /*request*/, ::octaneapi::ApiNodeArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_end11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_end11() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_end11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_end1Request* /*request*/, ::octaneapi::ApiNodeArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_init1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_init1() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_init1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_size1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_size1() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_size1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_sizeRequest* /*request*/, ::octaneapi::ApiNodeArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestsize1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_get1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_get1() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_get1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_getRequest* /*request*/, ::octaneapi::ApiNodeArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestget1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_items1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_items1() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_items1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_itemsRequest* /*request*/, ::octaneapi::ApiNodeArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestitems1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_begin11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_begin11() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_begin11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_begin1Request* /*request*/, ::octaneapi::ApiNodeArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestbegin11(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_end11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_end11() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_end11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_end1Request* /*request*/, ::octaneapi::ApiNodeArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestend11(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_init1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_init1() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_init1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestinit1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_size1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_size1() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->size1(context, request, response); }));
    }
    ~WithRawCallbackMethod_size1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status size1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_sizeRequest* /*request*/, ::octaneapi::ApiNodeArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* size1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_get1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_get1() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->get1(context, request, response); }));
    }
    ~WithRawCallbackMethod_get1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status get1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_getRequest* /*request*/, ::octaneapi::ApiNodeArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* get1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_items1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_items1() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->items1(context, request, response); }));
    }
    ~WithRawCallbackMethod_items1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status items1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_itemsRequest* /*request*/, ::octaneapi::ApiNodeArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* items1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_begin11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_begin11() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->begin11(context, request, response); }));
    }
    ~WithRawCallbackMethod_begin11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status begin11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_begin1Request* /*request*/, ::octaneapi::ApiNodeArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* begin11(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_end11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_end11() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->end11(context, request, response); }));
    }
    ~WithRawCallbackMethod_end11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status end11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_end1Request* /*request*/, ::octaneapi::ApiNodeArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* end11(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_init1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_init1() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->init1(context, request, response); }));
    }
    ~WithRawCallbackMethod_init1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status init1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* init1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_size1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_size1() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeArray_sizeRequest, ::octaneapi::ApiNodeArray_sizeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeArray_sizeRequest, ::octaneapi::ApiNodeArray_sizeResponse>* streamer) {
                       return this->Streamedsize1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_size1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status size1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_sizeRequest* /*request*/, ::octaneapi::ApiNodeArray_sizeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedsize1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeArray_sizeRequest,::octaneapi::ApiNodeArray_sizeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_get1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_get1() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeArray_getRequest, ::octaneapi::ApiNodeArray_getResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeArray_getRequest, ::octaneapi::ApiNodeArray_getResponse>* streamer) {
                       return this->Streamedget1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_get1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status get1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_getRequest* /*request*/, ::octaneapi::ApiNodeArray_getResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedget1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeArray_getRequest,::octaneapi::ApiNodeArray_getResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_items1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_items1() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeArray_itemsRequest, ::octaneapi::ApiNodeArray_itemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeArray_itemsRequest, ::octaneapi::ApiNodeArray_itemsResponse>* streamer) {
                       return this->Streameditems1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_items1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status items1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_itemsRequest* /*request*/, ::octaneapi::ApiNodeArray_itemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameditems1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeArray_itemsRequest,::octaneapi::ApiNodeArray_itemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_begin11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_begin11() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeArray_begin1Request, ::octaneapi::ApiNodeArray_begin1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeArray_begin1Request, ::octaneapi::ApiNodeArray_begin1Response>* streamer) {
                       return this->Streamedbegin11(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_begin11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status begin11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_begin1Request* /*request*/, ::octaneapi::ApiNodeArray_begin1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedbegin11(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeArray_begin1Request,::octaneapi::ApiNodeArray_begin1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_end11 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_end11() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeArray_end1Request, ::octaneapi::ApiNodeArray_end1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeArray_end1Request, ::octaneapi::ApiNodeArray_end1Response>* streamer) {
                       return this->Streamedend11(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_end11() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status end11(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_end1Request* /*request*/, ::octaneapi::ApiNodeArray_end1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedend11(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeArray_end1Request,::octaneapi::ApiNodeArray_end1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_init1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_init1() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiNodeArray_initRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiNodeArray_initRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedinit1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_init1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status init1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiNodeArray_initRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedinit1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiNodeArray_initRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_size1<WithStreamedUnaryMethod_get1<WithStreamedUnaryMethod_items1<WithStreamedUnaryMethod_begin11<WithStreamedUnaryMethod_end11<WithStreamedUnaryMethod_init1<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_size1<WithStreamedUnaryMethod_get1<WithStreamedUnaryMethod_items1<WithStreamedUnaryMethod_begin11<WithStreamedUnaryMethod_end11<WithStreamedUnaryMethod_init1<Service > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apinodesystem_5f5_2eproto__INCLUDED
