// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apiocioconfig.proto

#include "apiocioconfig.pb.h"
#include "apiocioconfig.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiOcioConfigService_method_names[] = {
  "/octaneapi.ApiOcioConfigService/create",
  "/octaneapi.ApiOcioConfigService/destroy",
  "/octaneapi.ApiOcioConfigService/clone",
  "/octaneapi.ApiOcioConfigService/getRoleCount",
  "/octaneapi.ApiOcioConfigService/getRoleName",
  "/octaneapi.ApiOcioConfigService/getRoleColorSpaceName",
  "/octaneapi.ApiOcioConfigService/getColorSpaceCount",
  "/octaneapi.ApiOcioConfigService/getColorSpaceName",
  "/octaneapi.ApiOcioConfigService/getColorSpaceFamilyComponentCount",
  "/octaneapi.ApiOcioConfigService/getColorSpaceFamilyComponent",
  "/octaneapi.ApiOcioConfigService/getDisplayCount",
  "/octaneapi.ApiOcioConfigService/getDisplayName",
  "/octaneapi.ApiOcioConfigService/getDisplayViewCount",
  "/octaneapi.ApiOcioConfigService/getDisplayViewName",
  "/octaneapi.ApiOcioConfigService/getLookCount",
  "/octaneapi.ApiOcioConfigService/getLookName",
};

std::unique_ptr< ApiOcioConfigService::Stub> ApiOcioConfigService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiOcioConfigService::Stub> stub(new ApiOcioConfigService::Stub(channel, options));
  return stub;
}

ApiOcioConfigService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_create_(ApiOcioConfigService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destroy_(ApiOcioConfigService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clone_(ApiOcioConfigService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getRoleCount_(ApiOcioConfigService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getRoleName_(ApiOcioConfigService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getRoleColorSpaceName_(ApiOcioConfigService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getColorSpaceCount_(ApiOcioConfigService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getColorSpaceName_(ApiOcioConfigService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getColorSpaceFamilyComponentCount_(ApiOcioConfigService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getColorSpaceFamilyComponent_(ApiOcioConfigService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getDisplayCount_(ApiOcioConfigService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getDisplayName_(ApiOcioConfigService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getDisplayViewCount_(ApiOcioConfigService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getDisplayViewName_(ApiOcioConfigService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getLookCount_(ApiOcioConfigService_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getLookName_(ApiOcioConfigService_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiOcioConfigService::Stub::create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_createRequest& request, ::octaneapi::ApiOcioConfig_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_createRequest, ::octaneapi::ApiOcioConfig_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create_, context, request, response);
}

void ApiOcioConfigService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_createRequest* request, ::octaneapi::ApiOcioConfig_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_createRequest, ::octaneapi::ApiOcioConfig_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_createRequest* request, ::octaneapi::ApiOcioConfig_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_createResponse>* ApiOcioConfigService::Stub::PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_createResponse, ::octaneapi::ApiOcioConfig_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_createResponse>* ApiOcioConfigService::Stub::AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy_, context, request, response);
}

void ApiOcioConfigService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioConfigService::Stub::PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiOcioConfig_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiOcioConfigService::Stub::AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::clone(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_cloneRequest& request, ::octaneapi::ApiOcioConfig_cloneResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_cloneRequest, ::octaneapi::ApiOcioConfig_cloneResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clone_, context, request, response);
}

void ApiOcioConfigService::Stub::async::clone(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_cloneRequest* request, ::octaneapi::ApiOcioConfig_cloneResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_cloneRequest, ::octaneapi::ApiOcioConfig_cloneResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clone_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::clone(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_cloneRequest* request, ::octaneapi::ApiOcioConfig_cloneResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clone_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_cloneResponse>* ApiOcioConfigService::Stub::PrepareAsynccloneRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_cloneRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_cloneResponse, ::octaneapi::ApiOcioConfig_cloneRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clone_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_cloneResponse>* ApiOcioConfigService::Stub::AsynccloneRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_cloneRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccloneRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getRoleCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleCountRequest& request, ::octaneapi::ApiOcioConfig_getRoleCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getRoleCountRequest, ::octaneapi::ApiOcioConfig_getRoleCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getRoleCount_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getRoleCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleCountRequest* request, ::octaneapi::ApiOcioConfig_getRoleCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getRoleCountRequest, ::octaneapi::ApiOcioConfig_getRoleCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getRoleCount_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getRoleCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleCountRequest* request, ::octaneapi::ApiOcioConfig_getRoleCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getRoleCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getRoleCountResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetRoleCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getRoleCountResponse, ::octaneapi::ApiOcioConfig_getRoleCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getRoleCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getRoleCountResponse>* ApiOcioConfigService::Stub::AsyncgetRoleCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetRoleCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getRoleName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleNameRequest& request, ::octaneapi::ApiOcioConfig_getRoleNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getRoleNameRequest, ::octaneapi::ApiOcioConfig_getRoleNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getRoleName_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getRoleName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleNameRequest* request, ::octaneapi::ApiOcioConfig_getRoleNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getRoleNameRequest, ::octaneapi::ApiOcioConfig_getRoleNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getRoleName_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getRoleName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleNameRequest* request, ::octaneapi::ApiOcioConfig_getRoleNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getRoleName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getRoleNameResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetRoleNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getRoleNameResponse, ::octaneapi::ApiOcioConfig_getRoleNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getRoleName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getRoleNameResponse>* ApiOcioConfigService::Stub::AsyncgetRoleNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetRoleNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getRoleColorSpaceName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest& request, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getRoleColorSpaceName_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getRoleColorSpaceName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest* request, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getRoleColorSpaceName_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getRoleColorSpaceName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest* request, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getRoleColorSpaceName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetRoleColorSpaceNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getRoleColorSpaceName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse>* ApiOcioConfigService::Stub::AsyncgetRoleColorSpaceNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetRoleColorSpaceNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getColorSpaceCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest& request, ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest, ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getColorSpaceCount_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getColorSpaceCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest, ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceCount_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getColorSpaceCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetColorSpaceCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse, ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getColorSpaceCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse>* ApiOcioConfigService::Stub::AsyncgetColorSpaceCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetColorSpaceCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getColorSpaceName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest& request, ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest, ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getColorSpaceName_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getColorSpaceName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest, ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceName_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getColorSpaceName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetColorSpaceNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse, ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getColorSpaceName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse>* ApiOcioConfigService::Stub::AsyncgetColorSpaceNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetColorSpaceNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getColorSpaceFamilyComponentCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest& request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getColorSpaceFamilyComponentCount_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getColorSpaceFamilyComponentCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceFamilyComponentCount_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getColorSpaceFamilyComponentCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceFamilyComponentCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetColorSpaceFamilyComponentCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getColorSpaceFamilyComponentCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse>* ApiOcioConfigService::Stub::AsyncgetColorSpaceFamilyComponentCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetColorSpaceFamilyComponentCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getColorSpaceFamilyComponent(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest& request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getColorSpaceFamilyComponent_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getColorSpaceFamilyComponent(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceFamilyComponent_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getColorSpaceFamilyComponent(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getColorSpaceFamilyComponent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetColorSpaceFamilyComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getColorSpaceFamilyComponent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse>* ApiOcioConfigService::Stub::AsyncgetColorSpaceFamilyComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetColorSpaceFamilyComponentRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getDisplayCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayCountRequest& request, ::octaneapi::ApiOcioConfig_getDisplayCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayCountRequest, ::octaneapi::ApiOcioConfig_getDisplayCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getDisplayCount_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getDisplayCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayCountRequest* request, ::octaneapi::ApiOcioConfig_getDisplayCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayCountRequest, ::octaneapi::ApiOcioConfig_getDisplayCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayCount_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getDisplayCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayCountRequest* request, ::octaneapi::ApiOcioConfig_getDisplayCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayCountResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetDisplayCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getDisplayCountResponse, ::octaneapi::ApiOcioConfig_getDisplayCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getDisplayCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayCountResponse>* ApiOcioConfigService::Stub::AsyncgetDisplayCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetDisplayCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getDisplayName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayNameRequest& request, ::octaneapi::ApiOcioConfig_getDisplayNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayNameRequest, ::octaneapi::ApiOcioConfig_getDisplayNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getDisplayName_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getDisplayName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayNameRequest* request, ::octaneapi::ApiOcioConfig_getDisplayNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayNameRequest, ::octaneapi::ApiOcioConfig_getDisplayNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayName_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getDisplayName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayNameRequest* request, ::octaneapi::ApiOcioConfig_getDisplayNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayNameResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetDisplayNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getDisplayNameResponse, ::octaneapi::ApiOcioConfig_getDisplayNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getDisplayName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayNameResponse>* ApiOcioConfigService::Stub::AsyncgetDisplayNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetDisplayNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getDisplayViewCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest& request, ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest, ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getDisplayViewCount_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getDisplayViewCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest* request, ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest, ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayViewCount_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getDisplayViewCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest* request, ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayViewCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetDisplayViewCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse, ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getDisplayViewCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse>* ApiOcioConfigService::Stub::AsyncgetDisplayViewCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetDisplayViewCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getDisplayViewName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest& request, ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest, ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getDisplayViewName_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getDisplayViewName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest* request, ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest, ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayViewName_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getDisplayViewName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest* request, ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getDisplayViewName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetDisplayViewNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse, ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getDisplayViewName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse>* ApiOcioConfigService::Stub::AsyncgetDisplayViewNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetDisplayViewNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getLookCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookCountRequest& request, ::octaneapi::ApiOcioConfig_getLookCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getLookCountRequest, ::octaneapi::ApiOcioConfig_getLookCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getLookCount_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getLookCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookCountRequest* request, ::octaneapi::ApiOcioConfig_getLookCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getLookCountRequest, ::octaneapi::ApiOcioConfig_getLookCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLookCount_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getLookCount(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookCountRequest* request, ::octaneapi::ApiOcioConfig_getLookCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLookCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getLookCountResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetLookCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getLookCountResponse, ::octaneapi::ApiOcioConfig_getLookCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getLookCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getLookCountResponse>* ApiOcioConfigService::Stub::AsyncgetLookCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetLookCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiOcioConfigService::Stub::getLookName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookNameRequest& request, ::octaneapi::ApiOcioConfig_getLookNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiOcioConfig_getLookNameRequest, ::octaneapi::ApiOcioConfig_getLookNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getLookName_, context, request, response);
}

void ApiOcioConfigService::Stub::async::getLookName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookNameRequest* request, ::octaneapi::ApiOcioConfig_getLookNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiOcioConfig_getLookNameRequest, ::octaneapi::ApiOcioConfig_getLookNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLookName_, context, request, response, std::move(f));
}

void ApiOcioConfigService::Stub::async::getLookName(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookNameRequest* request, ::octaneapi::ApiOcioConfig_getLookNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLookName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getLookNameResponse>* ApiOcioConfigService::Stub::PrepareAsyncgetLookNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiOcioConfig_getLookNameResponse, ::octaneapi::ApiOcioConfig_getLookNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getLookName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioConfig_getLookNameResponse>* ApiOcioConfigService::Stub::AsyncgetLookNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioConfig_getLookNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetLookNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiOcioConfigService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_createRequest, ::octaneapi::ApiOcioConfig_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_createRequest* req,
             ::octaneapi::ApiOcioConfig_createResponse* resp) {
               return service->create(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_cloneRequest, ::octaneapi::ApiOcioConfig_cloneResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_cloneRequest* req,
             ::octaneapi::ApiOcioConfig_cloneResponse* resp) {
               return service->clone(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getRoleCountRequest, ::octaneapi::ApiOcioConfig_getRoleCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getRoleCountRequest* req,
             ::octaneapi::ApiOcioConfig_getRoleCountResponse* resp) {
               return service->getRoleCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getRoleNameRequest, ::octaneapi::ApiOcioConfig_getRoleNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getRoleNameRequest* req,
             ::octaneapi::ApiOcioConfig_getRoleNameResponse* resp) {
               return service->getRoleName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest* req,
             ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse* resp) {
               return service->getRoleColorSpaceName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest, ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest* req,
             ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse* resp) {
               return service->getColorSpaceCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest, ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest* req,
             ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse* resp) {
               return service->getColorSpaceName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest* req,
             ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse* resp) {
               return service->getColorSpaceFamilyComponentCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest* req,
             ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse* resp) {
               return service->getColorSpaceFamilyComponent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getDisplayCountRequest, ::octaneapi::ApiOcioConfig_getDisplayCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getDisplayCountRequest* req,
             ::octaneapi::ApiOcioConfig_getDisplayCountResponse* resp) {
               return service->getDisplayCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getDisplayNameRequest, ::octaneapi::ApiOcioConfig_getDisplayNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getDisplayNameRequest* req,
             ::octaneapi::ApiOcioConfig_getDisplayNameResponse* resp) {
               return service->getDisplayName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest, ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest* req,
             ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse* resp) {
               return service->getDisplayViewCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest, ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest* req,
             ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse* resp) {
               return service->getDisplayViewName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getLookCountRequest, ::octaneapi::ApiOcioConfig_getLookCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getLookCountRequest* req,
             ::octaneapi::ApiOcioConfig_getLookCountResponse* resp) {
               return service->getLookCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiOcioConfigService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiOcioConfigService::Service, ::octaneapi::ApiOcioConfig_getLookNameRequest, ::octaneapi::ApiOcioConfig_getLookNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiOcioConfigService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiOcioConfig_getLookNameRequest* req,
             ::octaneapi::ApiOcioConfig_getLookNameResponse* resp) {
               return service->getLookName(ctx, req, resp);
             }, this)));
}

ApiOcioConfigService::Service::~Service() {
}

::grpc::Status ApiOcioConfigService::Service::create(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_createRequest* request, ::octaneapi::ApiOcioConfig_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::destroy(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::clone(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_cloneRequest* request, ::octaneapi::ApiOcioConfig_cloneResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getRoleCount(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getRoleCountRequest* request, ::octaneapi::ApiOcioConfig_getRoleCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getRoleName(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getRoleNameRequest* request, ::octaneapi::ApiOcioConfig_getRoleNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getRoleColorSpaceName(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameRequest* request, ::octaneapi::ApiOcioConfig_getRoleColorSpaceNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getColorSpaceCount(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceCountRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getColorSpaceName(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceNameRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getColorSpaceFamilyComponentCount(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getColorSpaceFamilyComponent(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentRequest* request, ::octaneapi::ApiOcioConfig_getColorSpaceFamilyComponentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getDisplayCount(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getDisplayCountRequest* request, ::octaneapi::ApiOcioConfig_getDisplayCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getDisplayName(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getDisplayNameRequest* request, ::octaneapi::ApiOcioConfig_getDisplayNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getDisplayViewCount(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewCountRequest* request, ::octaneapi::ApiOcioConfig_getDisplayViewCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getDisplayViewName(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getDisplayViewNameRequest* request, ::octaneapi::ApiOcioConfig_getDisplayViewNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getLookCount(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getLookCountRequest* request, ::octaneapi::ApiOcioConfig_getLookCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiOcioConfigService::Service::getLookName(::grpc::ServerContext* context, const ::octaneapi::ApiOcioConfig_getLookNameRequest* request, ::octaneapi::ApiOcioConfig_getLookNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

