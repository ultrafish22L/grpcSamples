// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodesystem_3.proto

#include "apinodesystem_3.pb.h"
#include "apinodesystem_3.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiItemService_method_names[] = {
  "/octaneapi.ApiItemService/destroy",
  "/octaneapi.ApiItemService/name",
  "/octaneapi.ApiItemService/setName",
  "/octaneapi.ApiItemService/position",
  "/octaneapi.ApiItemService/setPosition",
  "/octaneapi.ApiItemService/setUIOperationFlags",
  "/octaneapi.ApiItemService/uiOperationFlags",
  "/octaneapi.ApiItemService/select",
  "/octaneapi.ApiItemService/time",
  "/octaneapi.ApiItemService/outType",
  "/octaneapi.ApiItemService/persistentId",
  "/octaneapi.ApiItemService/uniqueId",
  "/octaneapi.ApiItemService/collectItemTree",
  "/octaneapi.ApiItemService/deleteUnconnectedItems",
  "/octaneapi.ApiItemService/switchToFileData",
  "/octaneapi.ApiItemService/version",
  "/octaneapi.ApiItemService/isGraph",
  "/octaneapi.ApiItemService/isNode",
  "/octaneapi.ApiItemService/isLinker",
  "/octaneapi.ApiItemService/isInputLinker",
  "/octaneapi.ApiItemService/isOutputLinker",
  "/octaneapi.ApiItemService/toGraph",
  "/octaneapi.ApiItemService/toNode",
  "/octaneapi.ApiItemService/toGraph1",
  "/octaneapi.ApiItemService/toNode1",
  "/octaneapi.ApiItemService/hasOwner",
  "/octaneapi.ApiItemService/graphOwned",
  "/octaneapi.ApiItemService/pinOwned",
  "/octaneapi.ApiItemService/graphOwner",
  "/octaneapi.ApiItemService/pinOwner",
  "/octaneapi.ApiItemService/rootGraph",
  "/octaneapi.ApiItemService/rootGraph1",
  "/octaneapi.ApiItemService/attrCount",
  "/octaneapi.ApiItemService/hasAttr",
  "/octaneapi.ApiItemService/hasAttr1",
  "/octaneapi.ApiItemService/findAttr",
  "/octaneapi.ApiItemService/findAttr1",
  "/octaneapi.ApiItemService/attrId",
  "/octaneapi.ApiItemService/attrIdIx",
  "/octaneapi.ApiItemService/attrName",
  "/octaneapi.ApiItemService/attrNameIx",
  "/octaneapi.ApiItemService/attrType",
  "/octaneapi.ApiItemService/attrType1",
  "/octaneapi.ApiItemService/attrTypeIx",
  "/octaneapi.ApiItemService/attrInfo",
  "/octaneapi.ApiItemService/attrInfo1",
  "/octaneapi.ApiItemService/attrInfoIx",
  "/octaneapi.ApiItemService/attrAreDirty",
  "/octaneapi.ApiItemService/isDirtyAttr",
  "/octaneapi.ApiItemService/isDirtyAttr1",
  "/octaneapi.ApiItemService/isDirtyAttrIx",
  "/octaneapi.ApiItemService/copyAttrFrom",
  "/octaneapi.ApiItemService/copyAttrFrom1",
  "/octaneapi.ApiItemService/copyAttrFromIx",
  "/octaneapi.ApiItemService/copyAttrFrom2",
  "/octaneapi.ApiItemService/clearAllAttr",
  "/octaneapi.ApiItemService/clearAttr",
  "/octaneapi.ApiItemService/clearAttr1",
  "/octaneapi.ApiItemService/clearAttrIx",
  "/octaneapi.ApiItemService/clearAnim",
  "/octaneapi.ApiItemService/clearAnim1",
  "/octaneapi.ApiItemService/clearAnimIx",
  "/octaneapi.ApiItemService/isAnimated",
  "/octaneapi.ApiItemService/isAnimated1",
  "/octaneapi.ApiItemService/isAnimatedIx",
  "/octaneapi.ApiItemService/evaluate",
  "/octaneapi.ApiItemService/expand",
  "/octaneapi.ApiItemService/expandOutOfPin",
  "/octaneapi.ApiItemService/collapse",
  "/octaneapi.ApiItemService/dumpAttributes",
  "/octaneapi.ApiItemService/getByAttrID",
  "/octaneapi.ApiItemService/getByName",
  "/octaneapi.ApiItemService/getByIx",
  "/octaneapi.ApiItemService/getArrayByAttrID",
  "/octaneapi.ApiItemService/getArrayByName",
  "/octaneapi.ApiItemService/getArrayByIx",
  "/octaneapi.ApiItemService/setByAttrID",
  "/octaneapi.ApiItemService/setByName",
  "/octaneapi.ApiItemService/setByIx",
  "/octaneapi.ApiItemService/setArrayByName",
  "/octaneapi.ApiItemService/setArrayByAttrID",
  "/octaneapi.ApiItemService/setArrayByIx",
  "/octaneapi.ApiItemService/getAnimByAttr",
  "/octaneapi.ApiItemService/getAnimByName",
  "/octaneapi.ApiItemService/getAnimByIx",
  "/octaneapi.ApiItemService/setAnimByAttr",
  "/octaneapi.ApiItemService/setAnimByName",
  "/octaneapi.ApiItemService/setAnimByIx",
};

std::unique_ptr< ApiItemService::Stub> ApiItemService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiItemService::Stub> stub(new ApiItemService::Stub(channel, options));
  return stub;
}

ApiItemService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_destroy_(ApiItemService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_name_(ApiItemService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setName_(ApiItemService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_position_(ApiItemService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPosition_(ApiItemService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setUIOperationFlags_(ApiItemService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_uiOperationFlags_(ApiItemService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_select_(ApiItemService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_time_(ApiItemService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_outType_(ApiItemService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_persistentId_(ApiItemService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_uniqueId_(ApiItemService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_collectItemTree_(ApiItemService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deleteUnconnectedItems_(ApiItemService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_switchToFileData_(ApiItemService_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_version_(ApiItemService_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isGraph_(ApiItemService_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isNode_(ApiItemService_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isLinker_(ApiItemService_method_names[18], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isInputLinker_(ApiItemService_method_names[19], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isOutputLinker_(ApiItemService_method_names[20], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_toGraph_(ApiItemService_method_names[21], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_toNode_(ApiItemService_method_names[22], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_toGraph1_(ApiItemService_method_names[23], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_toNode1_(ApiItemService_method_names[24], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_hasOwner_(ApiItemService_method_names[25], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_graphOwned_(ApiItemService_method_names[26], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinOwned_(ApiItemService_method_names[27], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_graphOwner_(ApiItemService_method_names[28], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinOwner_(ApiItemService_method_names[29], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_rootGraph_(ApiItemService_method_names[30], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_rootGraph1_(ApiItemService_method_names[31], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrCount_(ApiItemService_method_names[32], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_hasAttr_(ApiItemService_method_names[33], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_hasAttr1_(ApiItemService_method_names[34], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_findAttr_(ApiItemService_method_names[35], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_findAttr1_(ApiItemService_method_names[36], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrId_(ApiItemService_method_names[37], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrIdIx_(ApiItemService_method_names[38], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrName_(ApiItemService_method_names[39], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrNameIx_(ApiItemService_method_names[40], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrType_(ApiItemService_method_names[41], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrType1_(ApiItemService_method_names[42], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrTypeIx_(ApiItemService_method_names[43], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrInfo_(ApiItemService_method_names[44], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrInfo1_(ApiItemService_method_names[45], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrInfoIx_(ApiItemService_method_names[46], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_attrAreDirty_(ApiItemService_method_names[47], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isDirtyAttr_(ApiItemService_method_names[48], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isDirtyAttr1_(ApiItemService_method_names[49], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isDirtyAttrIx_(ApiItemService_method_names[50], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_copyAttrFrom_(ApiItemService_method_names[51], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_copyAttrFrom1_(ApiItemService_method_names[52], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_copyAttrFromIx_(ApiItemService_method_names[53], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_copyAttrFrom2_(ApiItemService_method_names[54], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clearAllAttr_(ApiItemService_method_names[55], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clearAttr_(ApiItemService_method_names[56], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clearAttr1_(ApiItemService_method_names[57], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clearAttrIx_(ApiItemService_method_names[58], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clearAnim_(ApiItemService_method_names[59], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clearAnim1_(ApiItemService_method_names[60], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_clearAnimIx_(ApiItemService_method_names[61], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isAnimated_(ApiItemService_method_names[62], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isAnimated1_(ApiItemService_method_names[63], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isAnimatedIx_(ApiItemService_method_names[64], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_evaluate_(ApiItemService_method_names[65], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_expand_(ApiItemService_method_names[66], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_expandOutOfPin_(ApiItemService_method_names[67], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_collapse_(ApiItemService_method_names[68], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dumpAttributes_(ApiItemService_method_names[69], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getByAttrID_(ApiItemService_method_names[70], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getByName_(ApiItemService_method_names[71], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getByIx_(ApiItemService_method_names[72], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getArrayByAttrID_(ApiItemService_method_names[73], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getArrayByName_(ApiItemService_method_names[74], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getArrayByIx_(ApiItemService_method_names[75], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setByAttrID_(ApiItemService_method_names[76], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setByName_(ApiItemService_method_names[77], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setByIx_(ApiItemService_method_names[78], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setArrayByName_(ApiItemService_method_names[79], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setArrayByAttrID_(ApiItemService_method_names[80], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setArrayByIx_(ApiItemService_method_names[81], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getAnimByAttr_(ApiItemService_method_names[82], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getAnimByName_(ApiItemService_method_names[83], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getAnimByIx_(ApiItemService_method_names[84], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setAnimByAttr_(ApiItemService_method_names[85], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setAnimByName_(ApiItemService_method_names[86], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setAnimByIx_(ApiItemService_method_names[87], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiItemService::Stub::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy_, context, request, response);
}

void ApiItemService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::octaneapi::ApiItem_nameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_name_, context, request, response);
}

void ApiItemService::Stub::async::name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_name_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_name_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>* ApiItemService::Stub::PrepareAsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_nameResponse, ::octaneapi::ApiItem_nameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_name_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>* ApiItemService::Stub::AsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncnameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setName_, context, request, response);
}

void ApiItemService::Stub::async::setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncsetNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_setNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncsetNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::octaneapi::ApiItem_positionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_position_, context, request, response);
}

void ApiItemService::Stub::async::position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_position_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_position_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>* ApiItemService::Stub::PrepareAsyncpositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_positionResponse, ::octaneapi::ApiItem_positionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_position_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>* ApiItemService::Stub::AsyncpositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpositionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPosition_, context, request, response);
}

void ApiItemService::Stub::async::setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPosition_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPosition_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncsetPositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_setPositionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPosition_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncsetPositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPositionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setUIOperationFlags_, context, request, response);
}

void ApiItemService::Stub::async::setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setUIOperationFlags_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setUIOperationFlags_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncsetUIOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setUIOperationFlags_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncsetUIOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetUIOperationFlagsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_uiOperationFlags_, context, request, response);
}

void ApiItemService::Stub::async::uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_uiOperationFlags_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_uiOperationFlags_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>* ApiItemService::Stub::PrepareAsyncuiOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_uiOperationFlagsResponse, ::octaneapi::ApiItem_uiOperationFlagsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_uiOperationFlags_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>* ApiItemService::Stub::AsyncuiOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncuiOperationFlagsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_select_, context, request, response);
}

void ApiItemService::Stub::async::select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_select_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_select_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncselectRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_selectRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_select_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncselectRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncselectRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::octaneapi::ApiItem_timeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_time_, context, request, response);
}

void ApiItemService::Stub::async::time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_time_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_time_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>* ApiItemService::Stub::PrepareAsynctimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_timeResponse, ::octaneapi::ApiItem_timeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_time_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>* ApiItemService::Stub::AsynctimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctimeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::octaneapi::ApiItem_outTypeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_outType_, context, request, response);
}

void ApiItemService::Stub::async::outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_outType_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_outType_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>* ApiItemService::Stub::PrepareAsyncoutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_outTypeResponse, ::octaneapi::ApiItem_outTypeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_outType_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>* ApiItemService::Stub::AsyncoutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncoutTypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::octaneapi::ApiItem_persistentIdResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_persistentId_, context, request, response);
}

void ApiItemService::Stub::async::persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_persistentId_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_persistentId_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>* ApiItemService::Stub::PrepareAsyncpersistentIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_persistentIdResponse, ::octaneapi::ApiItem_persistentIdRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_persistentId_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>* ApiItemService::Stub::AsyncpersistentIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpersistentIdRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::octaneapi::ApiItem_uniqueIdResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_uniqueId_, context, request, response);
}

void ApiItemService::Stub::async::uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_uniqueId_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_uniqueId_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>* ApiItemService::Stub::PrepareAsyncuniqueIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_uniqueIdResponse, ::octaneapi::ApiItem_uniqueIdRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_uniqueId_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>* ApiItemService::Stub::AsyncuniqueIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncuniqueIdRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::octaneapi::ApiItem_collectItemTreeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_collectItemTree_, context, request, response);
}

void ApiItemService::Stub::async::collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_collectItemTree_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_collectItemTree_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>* ApiItemService::Stub::PrepareAsynccollectItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_collectItemTreeResponse, ::octaneapi::ApiItem_collectItemTreeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_collectItemTree_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>* ApiItemService::Stub::AsynccollectItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccollectItemTreeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_deleteUnconnectedItems_, context, request, response);
}

void ApiItemService::Stub::async::deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deleteUnconnectedItems_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deleteUnconnectedItems_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncdeleteUnconnectedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_deleteUnconnectedItems_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncdeleteUnconnectedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdeleteUnconnectedItemsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_switchToFileData_, context, request, response);
}

void ApiItemService::Stub::async::switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_switchToFileData_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_switchToFileData_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncswitchToFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_switchToFileDataRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_switchToFileData_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncswitchToFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncswitchToFileDataRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::octaneapi::ApiItem_versionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_version_, context, request, response);
}

void ApiItemService::Stub::async::version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_version_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_version_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>* ApiItemService::Stub::PrepareAsyncversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_versionResponse, ::octaneapi::ApiItem_versionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_version_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>* ApiItemService::Stub::AsyncversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncversionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::octaneapi::ApiItem_isGraphResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isGraph_, context, request, response);
}

void ApiItemService::Stub::async::isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isGraph_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isGraph_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>* ApiItemService::Stub::PrepareAsyncisGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isGraphResponse, ::octaneapi::ApiItem_isGraphRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isGraph_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>* ApiItemService::Stub::AsyncisGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisGraphRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::octaneapi::ApiItem_isNodeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isNode_, context, request, response);
}

void ApiItemService::Stub::async::isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isNode_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isNode_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>* ApiItemService::Stub::PrepareAsyncisNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isNodeResponse, ::octaneapi::ApiItem_isNodeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isNode_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>* ApiItemService::Stub::AsyncisNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisNodeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::octaneapi::ApiItem_isLinkerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isLinker_, context, request, response);
}

void ApiItemService::Stub::async::isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isLinker_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isLinker_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>* ApiItemService::Stub::PrepareAsyncisLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isLinkerResponse, ::octaneapi::ApiItem_isLinkerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isLinker_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>* ApiItemService::Stub::AsyncisLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisLinkerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::octaneapi::ApiItem_isInputLinkerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isInputLinker_, context, request, response);
}

void ApiItemService::Stub::async::isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isInputLinker_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isInputLinker_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>* ApiItemService::Stub::PrepareAsyncisInputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isInputLinkerResponse, ::octaneapi::ApiItem_isInputLinkerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isInputLinker_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>* ApiItemService::Stub::AsyncisInputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisInputLinkerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::octaneapi::ApiItem_isOutputLinkerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isOutputLinker_, context, request, response);
}

void ApiItemService::Stub::async::isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isOutputLinker_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isOutputLinker_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>* ApiItemService::Stub::PrepareAsyncisOutputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isOutputLinkerResponse, ::octaneapi::ApiItem_isOutputLinkerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isOutputLinker_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>* ApiItemService::Stub::AsyncisOutputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisOutputLinkerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::octaneapi::ApiItem_toGraphResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_toGraph_, context, request, response);
}

void ApiItemService::Stub::async::toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toGraph_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toGraph_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>* ApiItemService::Stub::PrepareAsynctoGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_toGraphResponse, ::octaneapi::ApiItem_toGraphRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_toGraph_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>* ApiItemService::Stub::AsynctoGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctoGraphRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::octaneapi::ApiItem_toNodeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_toNode_, context, request, response);
}

void ApiItemService::Stub::async::toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toNode_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toNode_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>* ApiItemService::Stub::PrepareAsynctoNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_toNodeResponse, ::octaneapi::ApiItem_toNodeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_toNode_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>* ApiItemService::Stub::AsynctoNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctoNodeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::octaneapi::ApiItem_toGraph1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_toGraph1_, context, request, response);
}

void ApiItemService::Stub::async::toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toGraph1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toGraph1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>* ApiItemService::Stub::PrepareAsynctoGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_toGraph1Response, ::octaneapi::ApiItem_toGraph1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_toGraph1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>* ApiItemService::Stub::AsynctoGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctoGraph1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::octaneapi::ApiItem_toNode1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_toNode1_, context, request, response);
}

void ApiItemService::Stub::async::toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toNode1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_toNode1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>* ApiItemService::Stub::PrepareAsynctoNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_toNode1Response, ::octaneapi::ApiItem_toNode1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_toNode1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>* ApiItemService::Stub::AsynctoNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctoNode1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::octaneapi::ApiItem_hasOwnerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_hasOwner_, context, request, response);
}

void ApiItemService::Stub::async::hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasOwner_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasOwner_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>* ApiItemService::Stub::PrepareAsynchasOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_hasOwnerResponse, ::octaneapi::ApiItem_hasOwnerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_hasOwner_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>* ApiItemService::Stub::AsynchasOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchasOwnerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::octaneapi::ApiItem_graphOwnedResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_graphOwned_, context, request, response);
}

void ApiItemService::Stub::async::graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_graphOwned_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_graphOwned_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>* ApiItemService::Stub::PrepareAsyncgraphOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_graphOwnedResponse, ::octaneapi::ApiItem_graphOwnedRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_graphOwned_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>* ApiItemService::Stub::AsyncgraphOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgraphOwnedRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::octaneapi::ApiItem_pinOwnedResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinOwned_, context, request, response);
}

void ApiItemService::Stub::async::pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinOwned_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinOwned_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>* ApiItemService::Stub::PrepareAsyncpinOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_pinOwnedResponse, ::octaneapi::ApiItem_pinOwnedRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinOwned_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>* ApiItemService::Stub::AsyncpinOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinOwnedRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::octaneapi::ApiItem_graphOwnerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_graphOwner_, context, request, response);
}

void ApiItemService::Stub::async::graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_graphOwner_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_graphOwner_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>* ApiItemService::Stub::PrepareAsyncgraphOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_graphOwnerResponse, ::octaneapi::ApiItem_graphOwnerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_graphOwner_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>* ApiItemService::Stub::AsyncgraphOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgraphOwnerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::octaneapi::ApiItem_pinOwnerResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinOwner_, context, request, response);
}

void ApiItemService::Stub::async::pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinOwner_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinOwner_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>* ApiItemService::Stub::PrepareAsyncpinOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_pinOwnerResponse, ::octaneapi::ApiItem_pinOwnerRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinOwner_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>* ApiItemService::Stub::AsyncpinOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinOwnerRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::octaneapi::ApiItem_rootGraphResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_rootGraph_, context, request, response);
}

void ApiItemService::Stub::async::rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_rootGraph_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_rootGraph_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>* ApiItemService::Stub::PrepareAsyncrootGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_rootGraphResponse, ::octaneapi::ApiItem_rootGraphRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_rootGraph_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>* ApiItemService::Stub::AsyncrootGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrootGraphRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::octaneapi::ApiItem_rootGraph1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_rootGraph1_, context, request, response);
}

void ApiItemService::Stub::async::rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_rootGraph1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_rootGraph1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>* ApiItemService::Stub::PrepareAsyncrootGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_rootGraph1Response, ::octaneapi::ApiItem_rootGraph1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_rootGraph1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>* ApiItemService::Stub::AsyncrootGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrootGraph1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::octaneapi::ApiItem_attrCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrCount_, context, request, response);
}

void ApiItemService::Stub::async::attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrCount_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>* ApiItemService::Stub::PrepareAsyncattrCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrCountResponse, ::octaneapi::ApiItem_attrCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>* ApiItemService::Stub::AsyncattrCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::octaneapi::ApiItem_hasAttrResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_hasAttr_, context, request, response);
}

void ApiItemService::Stub::async::hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasAttr_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasAttr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>* ApiItemService::Stub::PrepareAsynchasAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_hasAttrResponse, ::octaneapi::ApiItem_hasAttrRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_hasAttr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>* ApiItemService::Stub::AsynchasAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchasAttrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::octaneapi::ApiItem_hasAttr1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_hasAttr1_, context, request, response);
}

void ApiItemService::Stub::async::hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasAttr1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasAttr1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>* ApiItemService::Stub::PrepareAsynchasAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_hasAttr1Response, ::octaneapi::ApiItem_hasAttr1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_hasAttr1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>* ApiItemService::Stub::AsynchasAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchasAttr1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::octaneapi::ApiItem_findAttrResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_findAttr_, context, request, response);
}

void ApiItemService::Stub::async::findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findAttr_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findAttr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>* ApiItemService::Stub::PrepareAsyncfindAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_findAttrResponse, ::octaneapi::ApiItem_findAttrRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_findAttr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>* ApiItemService::Stub::AsyncfindAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfindAttrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::octaneapi::ApiItem_findAttr1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_findAttr1_, context, request, response);
}

void ApiItemService::Stub::async::findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findAttr1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findAttr1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>* ApiItemService::Stub::PrepareAsyncfindAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_findAttr1Response, ::octaneapi::ApiItem_findAttr1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_findAttr1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>* ApiItemService::Stub::AsyncfindAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfindAttr1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::octaneapi::ApiItem_attrIdResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrId_, context, request, response);
}

void ApiItemService::Stub::async::attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrId_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrId_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>* ApiItemService::Stub::PrepareAsyncattrIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrIdResponse, ::octaneapi::ApiItem_attrIdRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrId_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>* ApiItemService::Stub::AsyncattrIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrIdRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::octaneapi::ApiItem_attrIdIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrIdIx_, context, request, response);
}

void ApiItemService::Stub::async::attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrIdIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrIdIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>* ApiItemService::Stub::PrepareAsyncattrIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrIdIxResponse, ::octaneapi::ApiItem_attrIdIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrIdIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>* ApiItemService::Stub::AsyncattrIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrIdIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::octaneapi::ApiItem_attrNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrName_, context, request, response);
}

void ApiItemService::Stub::async::attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>* ApiItemService::Stub::PrepareAsyncattrNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrNameResponse, ::octaneapi::ApiItem_attrNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>* ApiItemService::Stub::AsyncattrNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::octaneapi::ApiItem_attrNameIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrNameIx_, context, request, response);
}

void ApiItemService::Stub::async::attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrNameIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrNameIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>* ApiItemService::Stub::PrepareAsyncattrNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrNameIxResponse, ::octaneapi::ApiItem_attrNameIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrNameIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>* ApiItemService::Stub::AsyncattrNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrNameIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::octaneapi::ApiItem_attrTypeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrType_, context, request, response);
}

void ApiItemService::Stub::async::attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrType_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrType_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>* ApiItemService::Stub::PrepareAsyncattrTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrTypeResponse, ::octaneapi::ApiItem_attrTypeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrType_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>* ApiItemService::Stub::AsyncattrTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrTypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::octaneapi::ApiItem_attrType1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrType1_, context, request, response);
}

void ApiItemService::Stub::async::attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrType1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrType1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>* ApiItemService::Stub::PrepareAsyncattrType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrType1Response, ::octaneapi::ApiItem_attrType1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrType1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>* ApiItemService::Stub::AsyncattrType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrType1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::octaneapi::ApiItem_attrTypeIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrTypeIx_, context, request, response);
}

void ApiItemService::Stub::async::attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrTypeIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrTypeIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>* ApiItemService::Stub::PrepareAsyncattrTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrTypeIxResponse, ::octaneapi::ApiItem_attrTypeIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrTypeIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>* ApiItemService::Stub::AsyncattrTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrTypeIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::octaneapi::ApiItem_attrInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrInfo_, context, request, response);
}

void ApiItemService::Stub::async::attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrInfo_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>* ApiItemService::Stub::PrepareAsyncattrInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrInfoResponse, ::octaneapi::ApiItem_attrInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>* ApiItemService::Stub::AsyncattrInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::octaneapi::ApiItem_attrInfo1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrInfo1_, context, request, response);
}

void ApiItemService::Stub::async::attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrInfo1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrInfo1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>* ApiItemService::Stub::PrepareAsyncattrInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrInfo1Response, ::octaneapi::ApiItem_attrInfo1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrInfo1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>* ApiItemService::Stub::AsyncattrInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrInfo1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::octaneapi::ApiItem_attrInfoIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrInfoIx_, context, request, response);
}

void ApiItemService::Stub::async::attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrInfoIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrInfoIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>* ApiItemService::Stub::PrepareAsyncattrInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrInfoIxResponse, ::octaneapi::ApiItem_attrInfoIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrInfoIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>* ApiItemService::Stub::AsyncattrInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrInfoIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::octaneapi::ApiItem_attrAreDirtyResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_attrAreDirty_, context, request, response);
}

void ApiItemService::Stub::async::attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrAreDirty_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_attrAreDirty_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>* ApiItemService::Stub::PrepareAsyncattrAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_attrAreDirtyResponse, ::octaneapi::ApiItem_attrAreDirtyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_attrAreDirty_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>* ApiItemService::Stub::AsyncattrAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncattrAreDirtyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::octaneapi::ApiItem_isDirtyAttrResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isDirtyAttr_, context, request, response);
}

void ApiItemService::Stub::async::isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyAttr_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyAttr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>* ApiItemService::Stub::PrepareAsyncisDirtyAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isDirtyAttrResponse, ::octaneapi::ApiItem_isDirtyAttrRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isDirtyAttr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>* ApiItemService::Stub::AsyncisDirtyAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisDirtyAttrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::octaneapi::ApiItem_isDirtyAttr1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isDirtyAttr1_, context, request, response);
}

void ApiItemService::Stub::async::isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyAttr1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyAttr1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>* ApiItemService::Stub::PrepareAsyncisDirtyAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isDirtyAttr1Response, ::octaneapi::ApiItem_isDirtyAttr1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isDirtyAttr1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>* ApiItemService::Stub::AsyncisDirtyAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisDirtyAttr1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isDirtyAttrIx_, context, request, response);
}

void ApiItemService::Stub::async::isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyAttrIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyAttrIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>* ApiItemService::Stub::PrepareAsyncisDirtyAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isDirtyAttrIxResponse, ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isDirtyAttrIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>* ApiItemService::Stub::AsyncisDirtyAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisDirtyAttrIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_copyAttrFrom_, context, request, response);
}

void ApiItemService::Stub::async::copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFrom_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFrom_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsynccopyAttrFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_copyAttrFromRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_copyAttrFrom_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsynccopyAttrFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccopyAttrFromRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_copyAttrFrom1_, context, request, response);
}

void ApiItemService::Stub::async::copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFrom1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFrom1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsynccopyAttrFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_copyAttrFrom1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_copyAttrFrom1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsynccopyAttrFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccopyAttrFrom1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_copyAttrFromIx_, context, request, response);
}

void ApiItemService::Stub::async::copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFromIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFromIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsynccopyAttrFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_copyAttrFromIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_copyAttrFromIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsynccopyAttrFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccopyAttrFromIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_copyAttrFrom2_, context, request, response);
}

void ApiItemService::Stub::async::copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFrom2_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyAttrFrom2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsynccopyAttrFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_copyAttrFrom2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_copyAttrFrom2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsynccopyAttrFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccopyAttrFrom2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clearAllAttr_, context, request, response);
}

void ApiItemService::Stub::async::clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAllAttr_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAllAttr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncclearAllAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_clearAllAttrRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clearAllAttr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncclearAllAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncclearAllAttrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clearAttr_, context, request, response);
}

void ApiItemService::Stub::async::clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAttr_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAttr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncclearAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_clearAttrRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clearAttr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncclearAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncclearAttrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clearAttr1_, context, request, response);
}

void ApiItemService::Stub::async::clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAttr1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAttr1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncclearAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_clearAttr1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clearAttr1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncclearAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncclearAttr1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clearAttrIx_, context, request, response);
}

void ApiItemService::Stub::async::clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAttrIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAttrIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncclearAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_clearAttrIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clearAttrIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncclearAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncclearAttrIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clearAnim_, context, request, response);
}

void ApiItemService::Stub::async::clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAnim_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAnim_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncclearAnimRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_clearAnimRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clearAnim_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncclearAnimRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncclearAnimRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clearAnim1_, context, request, response);
}

void ApiItemService::Stub::async::clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAnim1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAnim1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncclearAnim1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_clearAnim1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clearAnim1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncclearAnim1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncclearAnim1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_clearAnimIx_, context, request, response);
}

void ApiItemService::Stub::async::clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAnimIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_clearAnimIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncclearAnimIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_clearAnimIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_clearAnimIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncclearAnimIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncclearAnimIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::octaneapi::ApiItem_isAnimatedResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isAnimated_, context, request, response);
}

void ApiItemService::Stub::async::isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isAnimated_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isAnimated_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>* ApiItemService::Stub::PrepareAsyncisAnimatedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isAnimatedResponse, ::octaneapi::ApiItem_isAnimatedRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isAnimated_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>* ApiItemService::Stub::AsyncisAnimatedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisAnimatedRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::octaneapi::ApiItem_isAnimated1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isAnimated1_, context, request, response);
}

void ApiItemService::Stub::async::isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isAnimated1_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isAnimated1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>* ApiItemService::Stub::PrepareAsyncisAnimated1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isAnimated1Response, ::octaneapi::ApiItem_isAnimated1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isAnimated1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>* ApiItemService::Stub::AsyncisAnimated1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisAnimated1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::octaneapi::ApiItem_isAnimatedIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isAnimatedIx_, context, request, response);
}

void ApiItemService::Stub::async::isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isAnimatedIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isAnimatedIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>* ApiItemService::Stub::PrepareAsyncisAnimatedIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_isAnimatedIxResponse, ::octaneapi::ApiItem_isAnimatedIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isAnimatedIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>* ApiItemService::Stub::AsyncisAnimatedIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisAnimatedIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_evaluate_, context, request, response);
}

void ApiItemService::Stub::async::evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_evaluate_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_evaluate_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncevaluateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_evaluateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_evaluate_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncevaluateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncevaluateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_expand_, context, request, response);
}

void ApiItemService::Stub::async::expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_expand_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_expand_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncexpandRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_expandRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_expand_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncexpandRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncexpandRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::octaneapi::ApiItem_expandOutOfPinResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_expandOutOfPin_, context, request, response);
}

void ApiItemService::Stub::async::expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_expandOutOfPin_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_expandOutOfPin_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>* ApiItemService::Stub::PrepareAsyncexpandOutOfPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_expandOutOfPinResponse, ::octaneapi::ApiItem_expandOutOfPinRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_expandOutOfPin_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>* ApiItemService::Stub::AsyncexpandOutOfPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncexpandOutOfPinRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::octaneapi::ApiItem_collapseResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_collapse_, context, request, response);
}

void ApiItemService::Stub::async::collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_collapse_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_collapse_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>* ApiItemService::Stub::PrepareAsynccollapseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_collapseResponse, ::octaneapi::ApiItem_collapseRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_collapse_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>* ApiItemService::Stub::AsynccollapseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccollapseRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_dumpAttributes_, context, request, response);
}

void ApiItemService::Stub::async::dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_dumpAttributes_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_dumpAttributes_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::PrepareAsyncdumpAttributesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiItem_dumpAttributesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_dumpAttributes_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiItemService::Stub::AsyncdumpAttributesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdumpAttributesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::octaneapi::ApiItem_getValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getByAttrID_, context, request, response);
}

void ApiItemService::Stub::async::getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getByAttrID_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getByAttrID_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* ApiItemService::Stub::PrepareAsyncgetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getValueResponse, ::octaneapi::ApiItem_getValueByIDRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getByAttrID_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* ApiItemService::Stub::AsyncgetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetByAttrIDRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::octaneapi::ApiItem_getValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getByName_, context, request, response);
}

void ApiItemService::Stub::async::getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getByName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getByName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* ApiItemService::Stub::PrepareAsyncgetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getValueResponse, ::octaneapi::ApiItem_getValueByNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getByName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* ApiItemService::Stub::AsyncgetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetByNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::octaneapi::ApiItem_getValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getByIx_, context, request, response);
}

void ApiItemService::Stub::async::getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getByIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getByIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* ApiItemService::Stub::PrepareAsyncgetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getValueResponse, ::octaneapi::ApiItem_getValueByIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getByIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* ApiItemService::Stub::AsyncgetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetByIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getArrayByAttrID_, context, request, response);
}

void ApiItemService::Stub::async::getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getArrayByAttrID_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getArrayByAttrID_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* ApiItemService::Stub::PrepareAsyncgetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getArrayResponse, ::octaneapi::ApiItem_getArrayByIDRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getArrayByAttrID_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* ApiItemService::Stub::AsyncgetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetArrayByAttrIDRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getArrayByName_, context, request, response);
}

void ApiItemService::Stub::async::getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getArrayByName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getArrayByName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* ApiItemService::Stub::PrepareAsyncgetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getArrayResponse, ::octaneapi::ApiItem_getArrayByNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getArrayByName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* ApiItemService::Stub::AsyncgetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetArrayByNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getArrayByIx_, context, request, response);
}

void ApiItemService::Stub::async::getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getArrayByIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getArrayByIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* ApiItemService::Stub::PrepareAsyncgetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getArrayResponse, ::octaneapi::ApiItem_getArrayByIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getArrayByIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* ApiItemService::Stub::AsyncgetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetArrayByIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::octaneapi::ApiItem_setValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setByAttrID_, context, request, response);
}

void ApiItemService::Stub::async::setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setByAttrID_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setByAttrID_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* ApiItemService::Stub::PrepareAsyncsetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setValueResponse, ::octaneapi::ApiItem_setValueByIDRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setByAttrID_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* ApiItemService::Stub::AsyncsetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetByAttrIDRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::octaneapi::ApiItem_setValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setByName_, context, request, response);
}

void ApiItemService::Stub::async::setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setByName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setByName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* ApiItemService::Stub::PrepareAsyncsetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setValueResponse, ::octaneapi::ApiItem_setValueByNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setByName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* ApiItemService::Stub::AsyncsetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetByNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::octaneapi::ApiItem_setValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setByIx_, context, request, response);
}

void ApiItemService::Stub::async::setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setByIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setByIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* ApiItemService::Stub::PrepareAsyncsetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setValueResponse, ::octaneapi::ApiItem_setValueByIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setByIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* ApiItemService::Stub::AsyncsetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetByIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setArrayByName_, context, request, response);
}

void ApiItemService::Stub::async::setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setArrayByName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setArrayByName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* ApiItemService::Stub::PrepareAsyncsetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setArrayResponse, ::octaneapi::ApiItem_setArrayByNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setArrayByName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* ApiItemService::Stub::AsyncsetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetArrayByNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setArrayByAttrID_, context, request, response);
}

void ApiItemService::Stub::async::setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setArrayByAttrID_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setArrayByAttrID_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* ApiItemService::Stub::PrepareAsyncsetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setArrayResponse, ::octaneapi::ApiItem_setArrayByIDRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setArrayByAttrID_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* ApiItemService::Stub::AsyncsetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetArrayByAttrIDRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setArrayByIx_, context, request, response);
}

void ApiItemService::Stub::async::setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setArrayByIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setArrayByIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* ApiItemService::Stub::PrepareAsyncsetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setArrayResponse, ::octaneapi::ApiItem_setArrayByIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setArrayByIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* ApiItemService::Stub::AsyncsetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetArrayByIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getAnimByAttr_, context, request, response);
}

void ApiItemService::Stub::async::getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getAnimByAttr_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getAnimByAttr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* ApiItemService::Stub::PrepareAsyncgetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getAnimArrayResponse, ::octaneapi::ApiItem_getAnimByIDRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getAnimByAttr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* ApiItemService::Stub::AsyncgetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetAnimByAttrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getAnimByName_, context, request, response);
}

void ApiItemService::Stub::async::getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getAnimByName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getAnimByName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* ApiItemService::Stub::PrepareAsyncgetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getAnimArrayResponse, ::octaneapi::ApiItem_getAnimByNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getAnimByName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* ApiItemService::Stub::AsyncgetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetAnimByNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getAnimByIx_, context, request, response);
}

void ApiItemService::Stub::async::getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getAnimByIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getAnimByIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* ApiItemService::Stub::PrepareAsyncgetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_getAnimArrayResponse, ::octaneapi::ApiItem_getAnimByIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getAnimByIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* ApiItemService::Stub::AsyncgetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetAnimByIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setAnimByAttr_, context, request, response);
}

void ApiItemService::Stub::async::setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setAnimByAttr_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setAnimByAttr_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* ApiItemService::Stub::PrepareAsyncsetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setAnimArrayResponse, ::octaneapi::ApiItem_setAnimByIDRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setAnimByAttr_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* ApiItemService::Stub::AsyncsetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetAnimByAttrRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setAnimByName_, context, request, response);
}

void ApiItemService::Stub::async::setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setAnimByName_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setAnimByName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* ApiItemService::Stub::PrepareAsyncsetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setAnimArrayResponse, ::octaneapi::ApiItem_setAnimByNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setAnimByName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* ApiItemService::Stub::AsyncsetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetAnimByNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiItemService::Stub::setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setAnimByIx_, context, request, response);
}

void ApiItemService::Stub::async::setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setAnimByIx_, context, request, response, std::move(f));
}

void ApiItemService::Stub::async::setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setAnimByIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* ApiItemService::Stub::PrepareAsyncsetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiItem_setAnimArrayResponse, ::octaneapi::ApiItem_setAnimByIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setAnimByIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* ApiItemService::Stub::AsyncsetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetAnimByIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiItemService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_nameRequest* req,
             ::octaneapi::ApiItem_nameResponse* resp) {
               return service->name(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setNameRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_positionRequest* req,
             ::octaneapi::ApiItem_positionResponse* resp) {
               return service->position(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setPositionRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setPosition(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setUIOperationFlagsRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setUIOperationFlags(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_uiOperationFlagsRequest* req,
             ::octaneapi::ApiItem_uiOperationFlagsResponse* resp) {
               return service->uiOperationFlags(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_selectRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->select(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_timeRequest* req,
             ::octaneapi::ApiItem_timeResponse* resp) {
               return service->time(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_outTypeRequest* req,
             ::octaneapi::ApiItem_outTypeResponse* resp) {
               return service->outType(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_persistentIdRequest* req,
             ::octaneapi::ApiItem_persistentIdResponse* resp) {
               return service->persistentId(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_uniqueIdRequest* req,
             ::octaneapi::ApiItem_uniqueIdResponse* resp) {
               return service->uniqueId(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_collectItemTreeRequest* req,
             ::octaneapi::ApiItem_collectItemTreeResponse* resp) {
               return service->collectItemTree(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->deleteUnconnectedItems(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_switchToFileDataRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->switchToFileData(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_versionRequest* req,
             ::octaneapi::ApiItem_versionResponse* resp) {
               return service->version(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isGraphRequest* req,
             ::octaneapi::ApiItem_isGraphResponse* resp) {
               return service->isGraph(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isNodeRequest* req,
             ::octaneapi::ApiItem_isNodeResponse* resp) {
               return service->isNode(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isLinkerRequest* req,
             ::octaneapi::ApiItem_isLinkerResponse* resp) {
               return service->isLinker(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isInputLinkerRequest* req,
             ::octaneapi::ApiItem_isInputLinkerResponse* resp) {
               return service->isInputLinker(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isOutputLinkerRequest* req,
             ::octaneapi::ApiItem_isOutputLinkerResponse* resp) {
               return service->isOutputLinker(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_toGraphRequest* req,
             ::octaneapi::ApiItem_toGraphResponse* resp) {
               return service->toGraph(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_toNodeRequest* req,
             ::octaneapi::ApiItem_toNodeResponse* resp) {
               return service->toNode(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_toGraph1Request* req,
             ::octaneapi::ApiItem_toGraph1Response* resp) {
               return service->toGraph1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_toNode1Request* req,
             ::octaneapi::ApiItem_toNode1Response* resp) {
               return service->toNode1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_hasOwnerRequest* req,
             ::octaneapi::ApiItem_hasOwnerResponse* resp) {
               return service->hasOwner(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[26],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_graphOwnedRequest* req,
             ::octaneapi::ApiItem_graphOwnedResponse* resp) {
               return service->graphOwned(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[27],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_pinOwnedRequest* req,
             ::octaneapi::ApiItem_pinOwnedResponse* resp) {
               return service->pinOwned(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[28],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_graphOwnerRequest* req,
             ::octaneapi::ApiItem_graphOwnerResponse* resp) {
               return service->graphOwner(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[29],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_pinOwnerRequest* req,
             ::octaneapi::ApiItem_pinOwnerResponse* resp) {
               return service->pinOwner(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[30],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_rootGraphRequest* req,
             ::octaneapi::ApiItem_rootGraphResponse* resp) {
               return service->rootGraph(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[31],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_rootGraph1Request* req,
             ::octaneapi::ApiItem_rootGraph1Response* resp) {
               return service->rootGraph1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[32],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrCountRequest* req,
             ::octaneapi::ApiItem_attrCountResponse* resp) {
               return service->attrCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[33],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_hasAttrRequest* req,
             ::octaneapi::ApiItem_hasAttrResponse* resp) {
               return service->hasAttr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[34],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_hasAttr1Request* req,
             ::octaneapi::ApiItem_hasAttr1Response* resp) {
               return service->hasAttr1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[35],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_findAttrRequest* req,
             ::octaneapi::ApiItem_findAttrResponse* resp) {
               return service->findAttr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[36],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_findAttr1Request* req,
             ::octaneapi::ApiItem_findAttr1Response* resp) {
               return service->findAttr1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[37],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrIdRequest* req,
             ::octaneapi::ApiItem_attrIdResponse* resp) {
               return service->attrId(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[38],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrIdIxRequest* req,
             ::octaneapi::ApiItem_attrIdIxResponse* resp) {
               return service->attrIdIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[39],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrNameRequest* req,
             ::octaneapi::ApiItem_attrNameResponse* resp) {
               return service->attrName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[40],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrNameIxRequest* req,
             ::octaneapi::ApiItem_attrNameIxResponse* resp) {
               return service->attrNameIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[41],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrTypeRequest* req,
             ::octaneapi::ApiItem_attrTypeResponse* resp) {
               return service->attrType(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[42],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrType1Request* req,
             ::octaneapi::ApiItem_attrType1Response* resp) {
               return service->attrType1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[43],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrTypeIxRequest* req,
             ::octaneapi::ApiItem_attrTypeIxResponse* resp) {
               return service->attrTypeIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[44],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrInfoRequest* req,
             ::octaneapi::ApiItem_attrInfoResponse* resp) {
               return service->attrInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[45],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrInfo1Request* req,
             ::octaneapi::ApiItem_attrInfo1Response* resp) {
               return service->attrInfo1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[46],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrInfoIxRequest* req,
             ::octaneapi::ApiItem_attrInfoIxResponse* resp) {
               return service->attrInfoIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[47],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_attrAreDirtyRequest* req,
             ::octaneapi::ApiItem_attrAreDirtyResponse* resp) {
               return service->attrAreDirty(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[48],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isDirtyAttrRequest* req,
             ::octaneapi::ApiItem_isDirtyAttrResponse* resp) {
               return service->isDirtyAttr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[49],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isDirtyAttr1Request* req,
             ::octaneapi::ApiItem_isDirtyAttr1Response* resp) {
               return service->isDirtyAttr1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[50],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isDirtyAttrIxRequest* req,
             ::octaneapi::ApiItem_isDirtyAttrIxResponse* resp) {
               return service->isDirtyAttrIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[51],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_copyAttrFromRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->copyAttrFrom(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[52],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_copyAttrFrom1Request* req,
             ::google::protobuf::Empty* resp) {
               return service->copyAttrFrom1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[53],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_copyAttrFromIxRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->copyAttrFromIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[54],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_copyAttrFrom2Request* req,
             ::google::protobuf::Empty* resp) {
               return service->copyAttrFrom2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[55],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_clearAllAttrRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->clearAllAttr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[56],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_clearAttrRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->clearAttr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[57],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_clearAttr1Request* req,
             ::google::protobuf::Empty* resp) {
               return service->clearAttr1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[58],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_clearAttrIxRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->clearAttrIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[59],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_clearAnimRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->clearAnim(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[60],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_clearAnim1Request* req,
             ::google::protobuf::Empty* resp) {
               return service->clearAnim1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[61],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_clearAnimIxRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->clearAnimIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[62],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isAnimatedRequest* req,
             ::octaneapi::ApiItem_isAnimatedResponse* resp) {
               return service->isAnimated(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[63],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isAnimated1Request* req,
             ::octaneapi::ApiItem_isAnimated1Response* resp) {
               return service->isAnimated1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[64],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_isAnimatedIxRequest* req,
             ::octaneapi::ApiItem_isAnimatedIxResponse* resp) {
               return service->isAnimatedIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[65],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_evaluateRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->evaluate(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[66],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_expandRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->expand(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[67],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_expandOutOfPinRequest* req,
             ::octaneapi::ApiItem_expandOutOfPinResponse* resp) {
               return service->expandOutOfPin(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[68],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_collapseRequest* req,
             ::octaneapi::ApiItem_collapseResponse* resp) {
               return service->collapse(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[69],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_dumpAttributesRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->dumpAttributes(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[70],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getValueByIDRequest* req,
             ::octaneapi::ApiItem_getValueResponse* resp) {
               return service->getByAttrID(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[71],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getValueByNameRequest* req,
             ::octaneapi::ApiItem_getValueResponse* resp) {
               return service->getByName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[72],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getValueByIxRequest* req,
             ::octaneapi::ApiItem_getValueResponse* resp) {
               return service->getByIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[73],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getArrayByIDRequest* req,
             ::octaneapi::ApiItem_getArrayResponse* resp) {
               return service->getArrayByAttrID(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[74],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getArrayByNameRequest* req,
             ::octaneapi::ApiItem_getArrayResponse* resp) {
               return service->getArrayByName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[75],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getArrayByIxRequest* req,
             ::octaneapi::ApiItem_getArrayResponse* resp) {
               return service->getArrayByIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[76],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setValueByIDRequest* req,
             ::octaneapi::ApiItem_setValueResponse* resp) {
               return service->setByAttrID(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[77],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setValueByNameRequest* req,
             ::octaneapi::ApiItem_setValueResponse* resp) {
               return service->setByName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[78],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setValueByIxRequest* req,
             ::octaneapi::ApiItem_setValueResponse* resp) {
               return service->setByIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[79],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setArrayByNameRequest* req,
             ::octaneapi::ApiItem_setArrayResponse* resp) {
               return service->setArrayByName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[80],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setArrayByIDRequest* req,
             ::octaneapi::ApiItem_setArrayResponse* resp) {
               return service->setArrayByAttrID(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[81],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setArrayByIxRequest* req,
             ::octaneapi::ApiItem_setArrayResponse* resp) {
               return service->setArrayByIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[82],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getAnimByIDRequest* req,
             ::octaneapi::ApiItem_getAnimArrayResponse* resp) {
               return service->getAnimByAttr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[83],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getAnimByNameRequest* req,
             ::octaneapi::ApiItem_getAnimArrayResponse* resp) {
               return service->getAnimByName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[84],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_getAnimByIxRequest* req,
             ::octaneapi::ApiItem_getAnimArrayResponse* resp) {
               return service->getAnimByIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[85],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setAnimByIDRequest* req,
             ::octaneapi::ApiItem_setAnimArrayResponse* resp) {
               return service->setAnimByAttr(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[86],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setAnimByNameRequest* req,
             ::octaneapi::ApiItem_setAnimArrayResponse* resp) {
               return service->setAnimByName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiItemService_method_names[87],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiItemService::Service, ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiItemService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiItem_setAnimByIxRequest* req,
             ::octaneapi::ApiItem_setAnimArrayResponse* resp) {
               return service->setAnimByIx(ctx, req, resp);
             }, this)));
}

ApiItemService::Service::~Service() {
}

::grpc::Status ApiItemService::Service::destroy(::grpc::ServerContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::name(::grpc::ServerContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::position(::grpc::ServerContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setPosition(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setUIOperationFlags(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::uiOperationFlags(::grpc::ServerContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::select(::grpc::ServerContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::time(::grpc::ServerContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::outType(::grpc::ServerContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::persistentId(::grpc::ServerContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::uniqueId(::grpc::ServerContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::collectItemTree(::grpc::ServerContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::deleteUnconnectedItems(::grpc::ServerContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::switchToFileData(::grpc::ServerContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::version(::grpc::ServerContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isGraph(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isNode(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isLinker(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isInputLinker(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isOutputLinker(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::toGraph(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::toNode(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::toGraph1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::toNode1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::hasOwner(::grpc::ServerContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::graphOwned(::grpc::ServerContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::pinOwned(::grpc::ServerContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::graphOwner(::grpc::ServerContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::pinOwner(::grpc::ServerContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::rootGraph(::grpc::ServerContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::rootGraph1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrCount(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::hasAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::hasAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::findAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::findAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrId(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrIdIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrNameIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrType(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrType1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrTypeIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrInfo(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrInfo1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrInfoIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::attrAreDirty(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isDirtyAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isDirtyAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isDirtyAttrIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::copyAttrFrom(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::copyAttrFrom1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::copyAttrFromIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::copyAttrFrom2(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::clearAllAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::clearAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::clearAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::clearAttrIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::clearAnim(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::clearAnim1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::clearAnimIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isAnimated(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isAnimated1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::isAnimatedIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::evaluate(::grpc::ServerContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::expand(::grpc::ServerContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::expandOutOfPin(::grpc::ServerContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::collapse(::grpc::ServerContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::dumpAttributes(::grpc::ServerContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getArrayByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getArrayByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getArrayByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setArrayByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setArrayByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setArrayByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getAnimByAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getAnimByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::getAnimByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setAnimByAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setAnimByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiItemService::Service::setAnimByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

