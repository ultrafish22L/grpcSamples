// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apilocaldb.proto

#include "apilocaldb.pb.h"
#include "apilocaldb.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiLocalDBService_method_names[] = {
  "/octaneapi.ApiLocalDBService/isSupported",
  "/octaneapi.ApiLocalDBService/root",
  "/octaneapi.ApiLocalDBService/setRootDirectory",
  "/octaneapi.ApiLocalDBService/addObserver",
  "/octaneapi.ApiLocalDBService/removeObserver",
};

std::unique_ptr< ApiLocalDBService::Stub> ApiLocalDBService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiLocalDBService::Stub> stub(new ApiLocalDBService::Stub(channel, options));
  return stub;
}

ApiLocalDBService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_isSupported_(ApiLocalDBService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_root_(ApiLocalDBService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setRootDirectory_(ApiLocalDBService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_addObserver_(ApiLocalDBService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_removeObserver_(ApiLocalDBService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiLocalDBService::Stub::isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::octaneapi::ApiLocalDB_isSupportedResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isSupported_, context, request, response);
}

void ApiLocalDBService::Stub::async::isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isSupported_, context, request, response, std::move(f));
}

void ApiLocalDBService::Stub::async::isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isSupported_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>* ApiLocalDBService::Stub::PrepareAsyncisSupportedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_isSupportedResponse, ::octaneapi::ApiLocalDB_isSupportedRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isSupported_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>* ApiLocalDBService::Stub::AsyncisSupportedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisSupportedRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDBService::Stub::root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::octaneapi::ApiLocalDB_rootResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_root_, context, request, response);
}

void ApiLocalDBService::Stub::async::root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_root_, context, request, response, std::move(f));
}

void ApiLocalDBService::Stub::async::root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_root_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>* ApiLocalDBService::Stub::PrepareAsyncrootRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_rootResponse, ::octaneapi::ApiLocalDB_rootRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_root_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>* ApiLocalDBService::Stub::AsyncrootRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrootRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDBService::Stub::setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setRootDirectory_, context, request, response);
}

void ApiLocalDBService::Stub::async::setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setRootDirectory_, context, request, response, std::move(f));
}

void ApiLocalDBService::Stub::async::setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setRootDirectory_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* ApiLocalDBService::Stub::PrepareAsyncsetRootDirectoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_setRootDirectoryResponse, ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setRootDirectory_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* ApiLocalDBService::Stub::AsyncsetRootDirectoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetRootDirectoryRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDBService::Stub::addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::octaneapi::ApiLocalDB_addObserverResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_addObserver_, context, request, response);
}

void ApiLocalDBService::Stub::async::addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addObserver_, context, request, response, std::move(f));
}

void ApiLocalDBService::Stub::async::addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addObserver_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>* ApiLocalDBService::Stub::PrepareAsyncaddObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_addObserverResponse, ::octaneapi::ApiLocalDB_addObserverRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_addObserver_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>* ApiLocalDBService::Stub::AsyncaddObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncaddObserverRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDBService::Stub::removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::octaneapi::ApiLocalDB_removeObserverResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_removeObserver_, context, request, response);
}

void ApiLocalDBService::Stub::async::removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_removeObserver_, context, request, response, std::move(f));
}

void ApiLocalDBService::Stub::async::removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_removeObserver_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>* ApiLocalDBService::Stub::PrepareAsyncremoveObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_removeObserverResponse, ::octaneapi::ApiLocalDB_removeObserverRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_removeObserver_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>* ApiLocalDBService::Stub::AsyncremoveObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncremoveObserverRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiLocalDBService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDBService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDBService::Service, ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDBService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_isSupportedRequest* req,
             ::octaneapi::ApiLocalDB_isSupportedResponse* resp) {
               return service->isSupported(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDBService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDBService::Service, ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDBService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_rootRequest* req,
             ::octaneapi::ApiLocalDB_rootResponse* resp) {
               return service->root(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDBService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDBService::Service, ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDBService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* req,
             ::octaneapi::ApiLocalDB_setRootDirectoryResponse* resp) {
               return service->setRootDirectory(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDBService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDBService::Service, ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDBService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_addObserverRequest* req,
             ::octaneapi::ApiLocalDB_addObserverResponse* resp) {
               return service->addObserver(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDBService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDBService::Service, ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDBService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_removeObserverRequest* req,
             ::octaneapi::ApiLocalDB_removeObserverResponse* resp) {
               return service->removeObserver(ctx, req, resp);
             }, this)));
}

ApiLocalDBService::Service::~Service() {
}

::grpc::Status ApiLocalDBService::Service::isSupported(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDBService::Service::root(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDBService::Service::setRootDirectory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDBService::Service::addObserver(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDBService::Service::removeObserver(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiLocalDB_CategoryService_method_names[] = {
  "/octaneapi.ApiLocalDB_CategoryService/name",
  "/octaneapi.ApiLocalDB_CategoryService/fileName",
  "/octaneapi.ApiLocalDB_CategoryService/subCategoryCount",
  "/octaneapi.ApiLocalDB_CategoryService/subCategoryName",
  "/octaneapi.ApiLocalDB_CategoryService/subCategory",
  "/octaneapi.ApiLocalDB_CategoryService/packageCount",
  "/octaneapi.ApiLocalDB_CategoryService/package",
  "/octaneapi.ApiLocalDB_CategoryService/categoryByPath",
  "/octaneapi.ApiLocalDB_CategoryService/packageByPath",
  "/octaneapi.ApiLocalDB_CategoryService/createCategory",
  "/octaneapi.ApiLocalDB_CategoryService/deleteCategory",
  "/octaneapi.ApiLocalDB_CategoryService/savePackage",
  "/octaneapi.ApiLocalDB_CategoryService/deletePackage",
  "/octaneapi.ApiLocalDB_CategoryService/free",
};

std::unique_ptr< ApiLocalDB_CategoryService::Stub> ApiLocalDB_CategoryService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiLocalDB_CategoryService::Stub> stub(new ApiLocalDB_CategoryService::Stub(channel, options));
  return stub;
}

ApiLocalDB_CategoryService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_name_(ApiLocalDB_CategoryService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_fileName_(ApiLocalDB_CategoryService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_subCategoryCount_(ApiLocalDB_CategoryService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_subCategoryName_(ApiLocalDB_CategoryService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_subCategory_(ApiLocalDB_CategoryService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_packageCount_(ApiLocalDB_CategoryService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_package_(ApiLocalDB_CategoryService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_categoryByPath_(ApiLocalDB_CategoryService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_packageByPath_(ApiLocalDB_CategoryService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createCategory_(ApiLocalDB_CategoryService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deleteCategory_(ApiLocalDB_CategoryService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_savePackage_(ApiLocalDB_CategoryService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deletePackage_(ApiLocalDB_CategoryService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_free_(ApiLocalDB_CategoryService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiLocalDB_CategoryService::Stub::name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_name_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_name_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_name_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_name_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* ApiLocalDB_CategoryService::Stub::AsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncnameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_fileName_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fileName_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fileName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncfileNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_fileName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* ApiLocalDB_CategoryService::Stub::AsyncfileNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfileNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_subCategoryCount_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_subCategoryCount_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_subCategoryCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncsubCategoryCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_subCategoryCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* ApiLocalDB_CategoryService::Stub::AsyncsubCategoryCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsubCategoryCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_subCategoryName_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_subCategoryName_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_subCategoryName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncsubCategoryNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_subCategoryName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* ApiLocalDB_CategoryService::Stub::AsyncsubCategoryNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsubCategoryNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_subCategory_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_subCategory_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_subCategory_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncsubCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_subCategory_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* ApiLocalDB_CategoryService::Stub::AsyncsubCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsubCategoryRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_packageCount_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_packageCount_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_packageCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncpackageCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_packageCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* ApiLocalDB_CategoryService::Stub::AsyncpackageCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpackageCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_package_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_package_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_package_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncpackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_package_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* ApiLocalDB_CategoryService::Stub::AsyncpackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpackageRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_categoryByPath_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_categoryByPath_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_categoryByPath_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsynccategoryByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_categoryByPath_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* ApiLocalDB_CategoryService::Stub::AsynccategoryByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccategoryByPathRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_packageByPath_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_packageByPath_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_packageByPath_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncpackageByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_packageByPath_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* ApiLocalDB_CategoryService::Stub::AsyncpackageByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpackageByPathRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createCategory_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createCategory_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createCategory_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsynccreateCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createCategory_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* ApiLocalDB_CategoryService::Stub::AsynccreateCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateCategoryRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_deleteCategory_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deleteCategory_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deleteCategory_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncdeleteCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_deleteCategory_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* ApiLocalDB_CategoryService::Stub::AsyncdeleteCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdeleteCategoryRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_savePackage_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_savePackage_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_savePackage_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncsavePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_savePackage_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* ApiLocalDB_CategoryService::Stub::AsyncsavePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsavePackageRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_deletePackage_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deletePackage_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deletePackage_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* ApiLocalDB_CategoryService::Stub::PrepareAsyncdeletePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_deletePackage_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* ApiLocalDB_CategoryService::Stub::AsyncdeletePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdeletePackageRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_CategoryService::Stub::free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_free_, context, request, response);
}

void ApiLocalDB_CategoryService::Stub::async::free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free_, context, request, response, std::move(f));
}

void ApiLocalDB_CategoryService::Stub::async::free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiLocalDB_CategoryService::Stub::PrepareAsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_free_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiLocalDB_CategoryService::Stub::AsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfreeRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiLocalDB_CategoryService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* resp) {
               return service->name(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* resp) {
               return service->fileName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* resp) {
               return service->subCategoryCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* resp) {
               return service->subCategoryName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* resp) {
               return service->subCategory(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* resp) {
               return service->packageCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* resp) {
               return service->package(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* resp) {
               return service->categoryByPath(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* resp) {
               return service->packageByPath(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* resp) {
               return service->createCategory(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* resp) {
               return service->deleteCategory(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* resp) {
               return service->savePackage(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* resp) {
               return service->deletePackage(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_CategoryService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_CategoryService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_CategoryService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->free(ctx, req, resp);
             }, this)));
}

ApiLocalDB_CategoryService::Service::~Service() {
}

::grpc::Status ApiLocalDB_CategoryService::Service::name(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::fileName(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::subCategoryCount(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::subCategoryName(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::subCategory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::packageCount(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::package(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::categoryByPath(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::packageByPath(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::createCategory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::deleteCategory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::savePackage(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::deletePackage(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_CategoryService::Service::free(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiLocalDB_PackageService_method_names[] = {
  "/octaneapi.ApiLocalDB_PackageService/name1",
  "/octaneapi.ApiLocalDB_PackageService/fileName1",
  "/octaneapi.ApiLocalDB_PackageService/hasThumbnail",
  "/octaneapi.ApiLocalDB_PackageService/getThumbnail",
  "/octaneapi.ApiLocalDB_PackageService/loadPackage",
  "/octaneapi.ApiLocalDB_PackageService/free1",
};

std::unique_ptr< ApiLocalDB_PackageService::Stub> ApiLocalDB_PackageService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiLocalDB_PackageService::Stub> stub(new ApiLocalDB_PackageService::Stub(channel, options));
  return stub;
}

ApiLocalDB_PackageService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_name1_(ApiLocalDB_PackageService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_fileName1_(ApiLocalDB_PackageService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_hasThumbnail_(ApiLocalDB_PackageService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getThumbnail_(ApiLocalDB_PackageService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_loadPackage_(ApiLocalDB_PackageService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_free1_(ApiLocalDB_PackageService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiLocalDB_PackageService::Stub::name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_name1_, context, request, response);
}

void ApiLocalDB_PackageService::Stub::async::name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_name1_, context, request, response, std::move(f));
}

void ApiLocalDB_PackageService::Stub::async::name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_name1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* ApiLocalDB_PackageService::Stub::PrepareAsyncname1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_name1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* ApiLocalDB_PackageService::Stub::Asyncname1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncname1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_PackageService::Stub::fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_fileName1_, context, request, response);
}

void ApiLocalDB_PackageService::Stub::async::fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fileName1_, context, request, response, std::move(f));
}

void ApiLocalDB_PackageService::Stub::async::fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fileName1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* ApiLocalDB_PackageService::Stub::PrepareAsyncfileName1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_fileName1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* ApiLocalDB_PackageService::Stub::AsyncfileName1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfileName1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_PackageService::Stub::hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_hasThumbnail_, context, request, response);
}

void ApiLocalDB_PackageService::Stub::async::hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasThumbnail_, context, request, response, std::move(f));
}

void ApiLocalDB_PackageService::Stub::async::hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasThumbnail_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* ApiLocalDB_PackageService::Stub::PrepareAsynchasThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_hasThumbnail_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* ApiLocalDB_PackageService::Stub::AsynchasThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchasThumbnailRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_PackageService::Stub::getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getThumbnail_, context, request, response);
}

void ApiLocalDB_PackageService::Stub::async::getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getThumbnail_, context, request, response, std::move(f));
}

void ApiLocalDB_PackageService::Stub::async::getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getThumbnail_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* ApiLocalDB_PackageService::Stub::PrepareAsyncgetThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getThumbnail_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* ApiLocalDB_PackageService::Stub::AsyncgetThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetThumbnailRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_PackageService::Stub::loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_loadPackage_, context, request, response);
}

void ApiLocalDB_PackageService::Stub::async::loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_loadPackage_, context, request, response, std::move(f));
}

void ApiLocalDB_PackageService::Stub::async::loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_loadPackage_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* ApiLocalDB_PackageService::Stub::PrepareAsyncloadPackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_loadPackage_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* ApiLocalDB_PackageService::Stub::AsyncloadPackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncloadPackageRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiLocalDB_PackageService::Stub::free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_free1_, context, request, response);
}

void ApiLocalDB_PackageService::Stub::async::free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free1_, context, request, response, std::move(f));
}

void ApiLocalDB_PackageService::Stub::async::free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiLocalDB_PackageService::Stub::PrepareAsyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_free1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiLocalDB_PackageService::Stub::Asyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfree1Raw(context, request, cq);
  result->StartCall();
  return result;
}

ApiLocalDB_PackageService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_PackageService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_PackageService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_PackageService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* resp) {
               return service->name1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_PackageService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_PackageService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_PackageService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* resp) {
               return service->fileName1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_PackageService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_PackageService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_PackageService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* resp) {
               return service->hasThumbnail(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_PackageService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_PackageService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_PackageService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* resp) {
               return service->getThumbnail(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_PackageService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_PackageService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_PackageService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* req,
             ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* resp) {
               return service->loadPackage(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiLocalDB_PackageService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiLocalDB_PackageService::Service, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiLocalDB_PackageService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->free1(ctx, req, resp);
             }, this)));
}

ApiLocalDB_PackageService::Service::~Service() {
}

::grpc::Status ApiLocalDB_PackageService::Service::name1(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_PackageService::Service::fileName1(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_PackageService::Service::hasThumbnail(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_PackageService::Service::getThumbnail(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_PackageService::Service::loadPackage(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiLocalDB_PackageService::Service::free1(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

