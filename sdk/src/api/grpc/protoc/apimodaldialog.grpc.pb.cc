// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apimodaldialog.proto

#include "apimodaldialog.pb.h"
#include "apimodaldialog.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiModalDialogService_method_names[] = {
  "/octaneapi.ApiModalDialogService/create",
  "/octaneapi.ApiModalDialogService/destroy",
  "/octaneapi.ApiModalDialogService/addContentComponent",
  "/octaneapi.ApiModalDialogService/show",
  "/octaneapi.ApiModalDialogService/close",
  "/octaneapi.ApiModalDialogService/showInfoMessageDialog",
  "/octaneapi.ApiModalDialogService/showErrorMessageDialog",
  "/octaneapi.ApiModalDialogService/showOkCancelDialog",
  "/octaneapi.ApiModalDialogService/showYesNoCancelDialog",
};

std::unique_ptr< ApiModalDialogService::Stub> ApiModalDialogService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiModalDialogService::Stub> stub(new ApiModalDialogService::Stub(channel, options));
  return stub;
}

ApiModalDialogService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_create_(ApiModalDialogService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destroy_(ApiModalDialogService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_addContentComponent_(ApiModalDialogService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_show_(ApiModalDialogService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_close_(ApiModalDialogService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_showInfoMessageDialog_(ApiModalDialogService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_showErrorMessageDialog_(ApiModalDialogService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_showOkCancelDialog_(ApiModalDialogService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_showYesNoCancelDialog_(ApiModalDialogService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiModalDialogService::Stub::create(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_createRequest& request, ::octaneapi::ApiModalDialog_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_createRequest, ::octaneapi::ApiModalDialog_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create_, context, request, response);
}

void ApiModalDialogService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_createRequest* request, ::octaneapi::ApiModalDialog_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_createRequest, ::octaneapi::ApiModalDialog_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_createRequest* request, ::octaneapi::ApiModalDialog_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_createResponse>* ApiModalDialogService::Stub::PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModalDialog_createResponse, ::octaneapi::ApiModalDialog_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_createResponse>* ApiModalDialogService::Stub::AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy_, context, request, response);
}

void ApiModalDialogService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiModalDialog_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_addContentComponentRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_addContentComponentRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_addContentComponent_, context, request, response);
}

void ApiModalDialogService::Stub::async::addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_addContentComponentRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_addContentComponentRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addContentComponent_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_addContentComponentRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addContentComponent_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::PrepareAsyncaddContentComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiModalDialog_addContentComponentRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_addContentComponent_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::AsyncaddContentComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncaddContentComponentRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::show(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showRequest& request, ::octaneapi::ApiModalDialog_showResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_showRequest, ::octaneapi::ApiModalDialog_showResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_show_, context, request, response);
}

void ApiModalDialogService::Stub::async::show(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showRequest* request, ::octaneapi::ApiModalDialog_showResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_showRequest, ::octaneapi::ApiModalDialog_showResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_show_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::show(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showRequest* request, ::octaneapi::ApiModalDialog_showResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_show_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_showResponse>* ApiModalDialogService::Stub::PrepareAsyncshowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModalDialog_showResponse, ::octaneapi::ApiModalDialog_showRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_show_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_showResponse>* ApiModalDialogService::Stub::AsyncshowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncshowRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::close(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_closeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_closeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_close_, context, request, response);
}

void ApiModalDialogService::Stub::async::close(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_closeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_closeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_close_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::close(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_closeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_close_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::PrepareAsynccloseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_closeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiModalDialog_closeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_close_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::AsynccloseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_closeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccloseRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::showInfoMessageDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_showInfoMessageDialog_, context, request, response);
}

void ApiModalDialogService::Stub::async::showInfoMessageDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showInfoMessageDialog_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::showInfoMessageDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showInfoMessageDialog_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::PrepareAsyncshowInfoMessageDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_showInfoMessageDialog_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::AsyncshowInfoMessageDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncshowInfoMessageDialogRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::showErrorMessageDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_showErrorMessageDialog_, context, request, response);
}

void ApiModalDialogService::Stub::async::showErrorMessageDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showErrorMessageDialog_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::showErrorMessageDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showErrorMessageDialog_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::PrepareAsyncshowErrorMessageDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_showErrorMessageDialog_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiModalDialogService::Stub::AsyncshowErrorMessageDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncshowErrorMessageDialogRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::showOkCancelDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showOkCancelDialogRequest& request, ::octaneapi::ApiModalDialog_showOkCancelDialogResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_showOkCancelDialogRequest, ::octaneapi::ApiModalDialog_showOkCancelDialogResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_showOkCancelDialog_, context, request, response);
}

void ApiModalDialogService::Stub::async::showOkCancelDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showOkCancelDialogRequest* request, ::octaneapi::ApiModalDialog_showOkCancelDialogResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_showOkCancelDialogRequest, ::octaneapi::ApiModalDialog_showOkCancelDialogResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showOkCancelDialog_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::showOkCancelDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showOkCancelDialogRequest* request, ::octaneapi::ApiModalDialog_showOkCancelDialogResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showOkCancelDialog_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_showOkCancelDialogResponse>* ApiModalDialogService::Stub::PrepareAsyncshowOkCancelDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showOkCancelDialogRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModalDialog_showOkCancelDialogResponse, ::octaneapi::ApiModalDialog_showOkCancelDialogRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_showOkCancelDialog_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_showOkCancelDialogResponse>* ApiModalDialogService::Stub::AsyncshowOkCancelDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showOkCancelDialogRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncshowOkCancelDialogRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModalDialogService::Stub::showYesNoCancelDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest& request, ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest, ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_showYesNoCancelDialog_, context, request, response);
}

void ApiModalDialogService::Stub::async::showYesNoCancelDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest* request, ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest, ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showYesNoCancelDialog_, context, request, response, std::move(f));
}

void ApiModalDialogService::Stub::async::showYesNoCancelDialog(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest* request, ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showYesNoCancelDialog_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse>* ApiModalDialogService::Stub::PrepareAsyncshowYesNoCancelDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse, ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_showYesNoCancelDialog_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse>* ApiModalDialogService::Stub::AsyncshowYesNoCancelDialogRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncshowYesNoCancelDialogRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiModalDialogService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_createRequest, ::octaneapi::ApiModalDialog_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_createRequest* req,
             ::octaneapi::ApiModalDialog_createResponse* resp) {
               return service->create(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_addContentComponentRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_addContentComponentRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->addContentComponent(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_showRequest, ::octaneapi::ApiModalDialog_showResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_showRequest* req,
             ::octaneapi::ApiModalDialog_showResponse* resp) {
               return service->show(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_closeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_closeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->close(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->showInfoMessageDialog(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->showErrorMessageDialog(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_showOkCancelDialogRequest, ::octaneapi::ApiModalDialog_showOkCancelDialogResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_showOkCancelDialogRequest* req,
             ::octaneapi::ApiModalDialog_showOkCancelDialogResponse* resp) {
               return service->showOkCancelDialog(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModalDialogService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModalDialogService::Service, ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest, ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModalDialogService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest* req,
             ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse* resp) {
               return service->showYesNoCancelDialog(ctx, req, resp);
             }, this)));
}

ApiModalDialogService::Service::~Service() {
}

::grpc::Status ApiModalDialogService::Service::create(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_createRequest* request, ::octaneapi::ApiModalDialog_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::destroy(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::addContentComponent(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_addContentComponentRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::show(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_showRequest* request, ::octaneapi::ApiModalDialog_showResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::close(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_closeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::showInfoMessageDialog(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_showInfoMessageDialogRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::showErrorMessageDialog(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_showErrorMessageDialogRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::showOkCancelDialog(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_showOkCancelDialogRequest* request, ::octaneapi::ApiModalDialog_showOkCancelDialogResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModalDialogService::Service::showYesNoCancelDialog(::grpc::ServerContext* context, const ::octaneapi::ApiModalDialog_showYesNoCancelDialogRequest* request, ::octaneapi::ApiModalDialog_showYesNoCancelDialogResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

