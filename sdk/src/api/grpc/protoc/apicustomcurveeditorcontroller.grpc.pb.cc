// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apicustomcurveeditorcontroller.proto

#include "apicustomcurveeditorcontroller.pb.h"
#include "apicustomcurveeditorcontroller.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiCustomCurveEditorControllerService_method_names[] = {
  "/octaneapi.ApiCustomCurveEditorControllerService/setBounds",
  "/octaneapi.ApiCustomCurveEditorControllerService/onButtonClick",
  "/octaneapi.ApiCustomCurveEditorControllerService/onKeyPress",
  "/octaneapi.ApiCustomCurveEditorControllerService/onMouseMove",
  "/octaneapi.ApiCustomCurveEditorControllerService/onMouseExit",
  "/octaneapi.ApiCustomCurveEditorControllerService/onMouseDown",
  "/octaneapi.ApiCustomCurveEditorControllerService/onMouseUp",
  "/octaneapi.ApiCustomCurveEditorControllerService/draw",
};

std::unique_ptr< ApiCustomCurveEditorControllerService::Stub> ApiCustomCurveEditorControllerService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiCustomCurveEditorControllerService::Stub> stub(new ApiCustomCurveEditorControllerService::Stub(channel, options));
  return stub;
}

ApiCustomCurveEditorControllerService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_setBounds_(ApiCustomCurveEditorControllerService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_onButtonClick_(ApiCustomCurveEditorControllerService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_onKeyPress_(ApiCustomCurveEditorControllerService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_onMouseMove_(ApiCustomCurveEditorControllerService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_onMouseExit_(ApiCustomCurveEditorControllerService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_onMouseDown_(ApiCustomCurveEditorControllerService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_onMouseUp_(ApiCustomCurveEditorControllerService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_draw_(ApiCustomCurveEditorControllerService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::setBounds(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setBounds_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::setBounds(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setBounds_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::setBounds(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setBounds_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::PrepareAsyncsetBoundsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setBounds_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::AsyncsetBoundsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetBoundsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::onButtonClick(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_onButtonClick_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::onButtonClick(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onButtonClick_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::onButtonClick(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onButtonClick_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::PrepareAsynconButtonClickRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_onButtonClick_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::AsynconButtonClickRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynconButtonClickRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::onKeyPress(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_onKeyPress_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::onKeyPress(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onKeyPress_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::onKeyPress(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onKeyPress_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::PrepareAsynconKeyPressRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_onKeyPress_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::AsynconKeyPressRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynconKeyPressRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::onMouseMove(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_onMouseMove_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseMove(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseMove_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseMove(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseMove_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::PrepareAsynconMouseMoveRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_onMouseMove_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::AsynconMouseMoveRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynconMouseMoveRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::onMouseExit(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_onMouseExit_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseExit(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseExit_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseExit(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseExit_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::PrepareAsynconMouseExitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_onMouseExit_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::AsynconMouseExitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynconMouseExitRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::onMouseDown(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest& request, ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest, ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_onMouseDown_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseDown(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest* request, ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest, ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseDown_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseDown(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest* request, ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseDown_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse>* ApiCustomCurveEditorControllerService::Stub::PrepareAsynconMouseDownRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse, ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_onMouseDown_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse>* ApiCustomCurveEditorControllerService::Stub::AsynconMouseDownRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynconMouseDownRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::onMouseUp(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_onMouseUp_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseUp(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseUp_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::onMouseUp(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onMouseUp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::PrepareAsynconMouseUpRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_onMouseUp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::AsynconMouseUpRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynconMouseUpRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorControllerService::Stub::draw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_drawRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_drawRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_draw_, context, request, response);
}

void ApiCustomCurveEditorControllerService::Stub::async::draw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_drawRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_drawRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_draw_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorControllerService::Stub::async::draw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_drawRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_draw_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::PrepareAsyncdrawRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_drawRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_drawRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_draw_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorControllerService::Stub::AsyncdrawRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_drawRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdrawRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiCustomCurveEditorControllerService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setBounds(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->onButtonClick(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->onKeyPress(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->onMouseMove(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->onMouseExit(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest, ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest* req,
             ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse* resp) {
               return service->onMouseDown(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->onMouseUp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorControllerService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorControllerService::Service, ::octaneapi::ApiCustomCurveEditorController_drawRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorControllerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_drawRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->draw(ctx, req, resp);
             }, this)));
}

ApiCustomCurveEditorControllerService::Service::~Service() {
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::setBounds(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_setBoundsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::onButtonClick(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_onButtonClickRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::onKeyPress(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_onKeyPressRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::onMouseMove(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseMoveRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::onMouseExit(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseExitRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::onMouseDown(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseDownRequest* request, ::octaneapi::ApiCustomCurveEditorController_onMouseDownResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::onMouseUp(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_onMouseUpRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorControllerService::Service::draw(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_drawRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiCustomCurveEditorController_DrawerService_method_names[] = {
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/setColor",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/setClipRegionAndFillBackground",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/drawRectangle",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/fillRectangle",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/fillCircle",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/startPath",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/lineTo",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/cubicBezierTo",
  "/octaneapi.ApiCustomCurveEditorController_DrawerService/finishPath",
};

std::unique_ptr< ApiCustomCurveEditorController_DrawerService::Stub> ApiCustomCurveEditorController_DrawerService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiCustomCurveEditorController_DrawerService::Stub> stub(new ApiCustomCurveEditorController_DrawerService::Stub(channel, options));
  return stub;
}

ApiCustomCurveEditorController_DrawerService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_setColor_(ApiCustomCurveEditorController_DrawerService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setClipRegionAndFillBackground_(ApiCustomCurveEditorController_DrawerService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_drawRectangle_(ApiCustomCurveEditorController_DrawerService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_fillRectangle_(ApiCustomCurveEditorController_DrawerService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_fillCircle_(ApiCustomCurveEditorController_DrawerService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_startPath_(ApiCustomCurveEditorController_DrawerService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_lineTo_(ApiCustomCurveEditorController_DrawerService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_cubicBezierTo_(ApiCustomCurveEditorController_DrawerService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_finishPath_(ApiCustomCurveEditorController_DrawerService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::setColor(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setColor_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::setColor(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setColor_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::setColor(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setColor_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsyncsetColorRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setColor_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsyncsetColorRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetColorRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::setClipRegionAndFillBackground(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setClipRegionAndFillBackground_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::setClipRegionAndFillBackground(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setClipRegionAndFillBackground_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::setClipRegionAndFillBackground(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setClipRegionAndFillBackground_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsyncsetClipRegionAndFillBackgroundRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setClipRegionAndFillBackground_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsyncsetClipRegionAndFillBackgroundRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetClipRegionAndFillBackgroundRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::drawRectangle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_drawRectangle_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::drawRectangle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_drawRectangle_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::drawRectangle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_drawRectangle_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsyncdrawRectangleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_drawRectangle_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsyncdrawRectangleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdrawRectangleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::fillRectangle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_fillRectangle_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::fillRectangle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fillRectangle_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::fillRectangle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fillRectangle_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsyncfillRectangleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_fillRectangle_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsyncfillRectangleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfillRectangleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::fillCircle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_fillCircle_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::fillCircle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fillCircle_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::fillCircle(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_fillCircle_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsyncfillCircleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_fillCircle_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsyncfillCircleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfillCircleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::startPath(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_startPath_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::startPath(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_startPath_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::startPath(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_startPath_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsyncstartPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_startPath_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsyncstartPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstartPathRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::lineTo(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_lineTo_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::lineTo(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_lineTo_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::lineTo(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_lineTo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsynclineToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_lineTo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsynclineToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynclineToRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::cubicBezierTo(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_cubicBezierTo_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::cubicBezierTo(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_cubicBezierTo_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::cubicBezierTo(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_cubicBezierTo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsynccubicBezierToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_cubicBezierTo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsynccubicBezierToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccubicBezierToRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Stub::finishPath(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_finishPath_, context, request, response);
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::finishPath(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_finishPath_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_DrawerService::Stub::async::finishPath(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_finishPath_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::PrepareAsyncfinishPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_finishPath_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_DrawerService::Stub::AsyncfinishPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfinishPathRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiCustomCurveEditorController_DrawerService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setColor(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setClipRegionAndFillBackground(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->drawRectangle(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->fillRectangle(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->fillCircle(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->startPath(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->lineTo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->cubicBezierTo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_DrawerService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_DrawerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_DrawerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->finishPath(ctx, req, resp);
             }, this)));
}

ApiCustomCurveEditorController_DrawerService::Service::~Service() {
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::setColor(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setColorRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::setClipRegionAndFillBackground(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_setClipRegionAndFillBackgroundRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::drawRectangle(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_drawRectangleRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::fillRectangle(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillRectangleRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::fillCircle(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_fillCircleRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::startPath(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_startPathRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::lineTo(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_lineToRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::cubicBezierTo(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_cubicBezierToRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCustomCurveEditorController_DrawerService::Service::finishPath(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Drawer_finishPathRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiCustomCurveEditorController_ListenerService_method_names[] = {
  "/octaneapi.ApiCustomCurveEditorController_ListenerService/onVisualChange",
};

std::unique_ptr< ApiCustomCurveEditorController_ListenerService::Stub> ApiCustomCurveEditorController_ListenerService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiCustomCurveEditorController_ListenerService::Stub> stub(new ApiCustomCurveEditorController_ListenerService::Stub(channel, options));
  return stub;
}

ApiCustomCurveEditorController_ListenerService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_onVisualChange_(ApiCustomCurveEditorController_ListenerService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiCustomCurveEditorController_ListenerService::Stub::onVisualChange(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_onVisualChange_, context, request, response);
}

void ApiCustomCurveEditorController_ListenerService::Stub::async::onVisualChange(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onVisualChange_, context, request, response, std::move(f));
}

void ApiCustomCurveEditorController_ListenerService::Stub::async::onVisualChange(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_onVisualChange_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_ListenerService::Stub::PrepareAsynconVisualChangeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_onVisualChange_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCustomCurveEditorController_ListenerService::Stub::AsynconVisualChangeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynconVisualChangeRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiCustomCurveEditorController_ListenerService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCustomCurveEditorController_ListenerService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCustomCurveEditorController_ListenerService::Service, ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCustomCurveEditorController_ListenerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->onVisualChange(ctx, req, resp);
             }, this)));
}

ApiCustomCurveEditorController_ListenerService::Service::~Service() {
}

::grpc::Status ApiCustomCurveEditorController_ListenerService::Service::onVisualChange(::grpc::ServerContext* context, const ::octaneapi::ApiCustomCurveEditorController_ApiCustomCurveEditorController_Listener_onVisualChangeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

