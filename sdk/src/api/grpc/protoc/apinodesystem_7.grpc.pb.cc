// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodesystem_7.proto

#include "apinodesystem_7.pb.h"
#include "apinodesystem_7.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiNodeService_method_names[] = {
  "/octaneapi.ApiNodeService/create",
  "/octaneapi.ApiNodeService/addDynamicPinForLoading",
  "/octaneapi.ApiNodeService/info",
  "/octaneapi.ApiNodeService/type",
  "/octaneapi.ApiNodeService/outputTextureValueType",
  "/octaneapi.ApiNodeService/setTextureTypeConfiguration",
  "/octaneapi.ApiNodeService/configureEmptyPins",
  "/octaneapi.ApiNodeService/pinCount",
  "/octaneapi.ApiNodeService/staticPinCount",
  "/octaneapi.ApiNodeService/dynPinCount",
  "/octaneapi.ApiNodeService/hasPin",
  "/octaneapi.ApiNodeService/hasPin1",
  "/octaneapi.ApiNodeService/hasPinIx",
  "/octaneapi.ApiNodeService/findPin",
  "/octaneapi.ApiNodeService/findPin1",
  "/octaneapi.ApiNodeService/pinId",
  "/octaneapi.ApiNodeService/pinIdIx",
  "/octaneapi.ApiNodeService/pinName",
  "/octaneapi.ApiNodeService/pinNameIx",
  "/octaneapi.ApiNodeService/pinLabel",
  "/octaneapi.ApiNodeService/pinLabel1",
  "/octaneapi.ApiNodeService/pinLabelIx",
  "/octaneapi.ApiNodeService/pinType",
  "/octaneapi.ApiNodeService/pinType1",
  "/octaneapi.ApiNodeService/pinTypeIx",
  "/octaneapi.ApiNodeService/pinTextureValueType",
  "/octaneapi.ApiNodeService/pinTextureValueTypeIx",
  "/octaneapi.ApiNodeService/pinInfo",
  "/octaneapi.ApiNodeService/pinInfo1",
  "/octaneapi.ApiNodeService/pinInfoIx",
  "/octaneapi.ApiNodeService/pinsAreDirty",
  "/octaneapi.ApiNodeService/isDirtyPin",
  "/octaneapi.ApiNodeService/isDirtyPin1",
  "/octaneapi.ApiNodeService/isDirtyPinIx",
  "/octaneapi.ApiNodeService/canConnectTo",
  "/octaneapi.ApiNodeService/canConnectTo1",
  "/octaneapi.ApiNodeService/canConnectToIx",
  "/octaneapi.ApiNodeService/connectTo",
  "/octaneapi.ApiNodeService/connectTo1",
  "/octaneapi.ApiNodeService/connectToIx",
  "/octaneapi.ApiNodeService/connectedNode",
  "/octaneapi.ApiNodeService/connectedNode1",
  "/octaneapi.ApiNodeService/connectedNodeIx",
  "/octaneapi.ApiNodeService/inputNode",
  "/octaneapi.ApiNodeService/inputNode1",
  "/octaneapi.ApiNodeService/inputNodeIx",
  "/octaneapi.ApiNodeService/destinationNodes",
  "/octaneapi.ApiNodeService/buildLinkerNodePinInfo",
  "/octaneapi.ApiNodeService/buildDestinationPinInfo",
  "/octaneapi.ApiNodeService/ownedItem",
  "/octaneapi.ApiNodeService/ownedItem1",
  "/octaneapi.ApiNodeService/ownedItemIx",
  "/octaneapi.ApiNodeService/createInternal",
  "/octaneapi.ApiNodeService/createInternal1",
  "/octaneapi.ApiNodeService/createInternalIx",
  "/octaneapi.ApiNodeService/createInternal2",
  "/octaneapi.ApiNodeService/createInternal3",
  "/octaneapi.ApiNodeService/createInternalIx1",
  "/octaneapi.ApiNodeService/copyFrom",
  "/octaneapi.ApiNodeService/copyFrom1",
  "/octaneapi.ApiNodeService/copyFromIx",
  "/octaneapi.ApiNodeService/getPinBool",
  "/octaneapi.ApiNodeService/getPinFloat",
  "/octaneapi.ApiNodeService/getPinFloat2",
  "/octaneapi.ApiNodeService/getPinFloat3",
  "/octaneapi.ApiNodeService/getPinFloat4",
  "/octaneapi.ApiNodeService/getPinInt",
  "/octaneapi.ApiNodeService/getPinInt2",
  "/octaneapi.ApiNodeService/getPinInt3",
  "/octaneapi.ApiNodeService/getPinInt4",
  "/octaneapi.ApiNodeService/getPinMatrix",
  "/octaneapi.ApiNodeService/getPinString",
  "/octaneapi.ApiNodeService/getPinFilePath",
  "/octaneapi.ApiNodeService/getPinBool1",
  "/octaneapi.ApiNodeService/getPinFloat1",
  "/octaneapi.ApiNodeService/getPinFloat21",
  "/octaneapi.ApiNodeService/getPinFloat31",
  "/octaneapi.ApiNodeService/getPinFloat41",
  "/octaneapi.ApiNodeService/getPinInt1",
  "/octaneapi.ApiNodeService/getPinInt21",
  "/octaneapi.ApiNodeService/getPinInt31",
  "/octaneapi.ApiNodeService/getPinInt41",
  "/octaneapi.ApiNodeService/getPinMatrix1",
  "/octaneapi.ApiNodeService/getPinString1",
  "/octaneapi.ApiNodeService/getPinFilePath1",
  "/octaneapi.ApiNodeService/getPinBoolIx",
  "/octaneapi.ApiNodeService/getPinFloatIx",
  "/octaneapi.ApiNodeService/getPinFloat2Ix",
  "/octaneapi.ApiNodeService/getPinFloat3Ix",
  "/octaneapi.ApiNodeService/getPinFloat4Ix",
  "/octaneapi.ApiNodeService/getPinIntIx",
  "/octaneapi.ApiNodeService/getPinInt2Ix",
  "/octaneapi.ApiNodeService/getPinInt3Ix",
  "/octaneapi.ApiNodeService/getPinInt4Ix",
  "/octaneapi.ApiNodeService/getPinMatrixIx",
  "/octaneapi.ApiNodeService/getPinStringIx",
  "/octaneapi.ApiNodeService/getPinFilePathIx",
  "/octaneapi.ApiNodeService/getPinValue",
  "/octaneapi.ApiNodeService/getPinValue1",
  "/octaneapi.ApiNodeService/getPinValue2",
  "/octaneapi.ApiNodeService/getPinValue3",
  "/octaneapi.ApiNodeService/getPinValue4",
  "/octaneapi.ApiNodeService/getPinValue5",
  "/octaneapi.ApiNodeService/getPinValue6",
  "/octaneapi.ApiNodeService/getPinValue7",
  "/octaneapi.ApiNodeService/getPinValue8",
  "/octaneapi.ApiNodeService/getPinValue9",
  "/octaneapi.ApiNodeService/getPinValue10",
  "/octaneapi.ApiNodeService/getPinValue11",
  "/octaneapi.ApiNodeService/getPinValue12",
  "/octaneapi.ApiNodeService/getPinValue13",
  "/octaneapi.ApiNodeService/getPinValue14",
  "/octaneapi.ApiNodeService/getPinValue15",
  "/octaneapi.ApiNodeService/getPinValue16",
  "/octaneapi.ApiNodeService/getPinValue17",
  "/octaneapi.ApiNodeService/getPinValue18",
  "/octaneapi.ApiNodeService/getPinValue19",
  "/octaneapi.ApiNodeService/getPinValue20",
  "/octaneapi.ApiNodeService/getPinValue21",
  "/octaneapi.ApiNodeService/getPinValue22",
  "/octaneapi.ApiNodeService/getPinValue23",
  "/octaneapi.ApiNodeService/getPinValueIx",
  "/octaneapi.ApiNodeService/getPinValueIx1",
  "/octaneapi.ApiNodeService/getPinValueIx2",
  "/octaneapi.ApiNodeService/getPinValueIx3",
  "/octaneapi.ApiNodeService/getPinValueIx4",
  "/octaneapi.ApiNodeService/getPinValueIx5",
  "/octaneapi.ApiNodeService/getPinValueIx6",
  "/octaneapi.ApiNodeService/getPinValueIx7",
  "/octaneapi.ApiNodeService/getPinValueIx8",
  "/octaneapi.ApiNodeService/getPinValueIx9",
  "/octaneapi.ApiNodeService/getPinValueIx10",
  "/octaneapi.ApiNodeService/getPinValueIx11",
  "/octaneapi.ApiNodeService/setPinValue",
  "/octaneapi.ApiNodeService/setPinValue1",
  "/octaneapi.ApiNodeService/setPinValue2",
  "/octaneapi.ApiNodeService/setPinValue3",
  "/octaneapi.ApiNodeService/setPinValue4",
  "/octaneapi.ApiNodeService/setPinValue5",
  "/octaneapi.ApiNodeService/setPinValue6",
  "/octaneapi.ApiNodeService/setPinValue7",
  "/octaneapi.ApiNodeService/setPinValue8",
  "/octaneapi.ApiNodeService/setPinValue9",
  "/octaneapi.ApiNodeService/setPinValue10",
  "/octaneapi.ApiNodeService/setPinValue11",
  "/octaneapi.ApiNodeService/setPinValue12",
  "/octaneapi.ApiNodeService/setPinValue13",
  "/octaneapi.ApiNodeService/setPinValue14",
  "/octaneapi.ApiNodeService/setPinValue15",
  "/octaneapi.ApiNodeService/setPinValue16",
  "/octaneapi.ApiNodeService/setPinValue17",
  "/octaneapi.ApiNodeService/setPinValue18",
  "/octaneapi.ApiNodeService/setPinValue19",
  "/octaneapi.ApiNodeService/setPinValue20",
  "/octaneapi.ApiNodeService/setPinValue21",
  "/octaneapi.ApiNodeService/setPinValue22",
  "/octaneapi.ApiNodeService/setPinValue23",
  "/octaneapi.ApiNodeService/setPinValueIx",
  "/octaneapi.ApiNodeService/setPinValueIx1",
  "/octaneapi.ApiNodeService/setPinValueIx2",
  "/octaneapi.ApiNodeService/setPinValueIx3",
  "/octaneapi.ApiNodeService/setPinValueIx4",
  "/octaneapi.ApiNodeService/setPinValueIx5",
  "/octaneapi.ApiNodeService/setPinValueIx6",
  "/octaneapi.ApiNodeService/setPinValueIx7",
  "/octaneapi.ApiNodeService/setPinValueIx8",
  "/octaneapi.ApiNodeService/setPinValueIx9",
  "/octaneapi.ApiNodeService/setPinValueIx10",
  "/octaneapi.ApiNodeService/setPinValueIx11",
  "/octaneapi.ApiNodeService/storeToDb",
  "/octaneapi.ApiNodeService/showOslWindow",
  "/octaneapi.ApiNodeService/closeOslWindow",
  "/octaneapi.ApiNodeService/unpackFileData",
};

std::unique_ptr< ApiNodeService::Stub> ApiNodeService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiNodeService::Stub> stub(new ApiNodeService::Stub(channel, options));
  return stub;
}

ApiNodeService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_create_(ApiNodeService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_addDynamicPinForLoading_(ApiNodeService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_info_(ApiNodeService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_type_(ApiNodeService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_outputTextureValueType_(ApiNodeService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setTextureTypeConfiguration_(ApiNodeService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_configureEmptyPins_(ApiNodeService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinCount_(ApiNodeService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_staticPinCount_(ApiNodeService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_dynPinCount_(ApiNodeService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_hasPin_(ApiNodeService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_hasPin1_(ApiNodeService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_hasPinIx_(ApiNodeService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_findPin_(ApiNodeService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_findPin1_(ApiNodeService_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinId_(ApiNodeService_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinIdIx_(ApiNodeService_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinName_(ApiNodeService_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinNameIx_(ApiNodeService_method_names[18], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinLabel_(ApiNodeService_method_names[19], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinLabel1_(ApiNodeService_method_names[20], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinLabelIx_(ApiNodeService_method_names[21], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinType_(ApiNodeService_method_names[22], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinType1_(ApiNodeService_method_names[23], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinTypeIx_(ApiNodeService_method_names[24], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinTextureValueType_(ApiNodeService_method_names[25], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinTextureValueTypeIx_(ApiNodeService_method_names[26], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinInfo_(ApiNodeService_method_names[27], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinInfo1_(ApiNodeService_method_names[28], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinInfoIx_(ApiNodeService_method_names[29], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_pinsAreDirty_(ApiNodeService_method_names[30], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isDirtyPin_(ApiNodeService_method_names[31], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isDirtyPin1_(ApiNodeService_method_names[32], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_isDirtyPinIx_(ApiNodeService_method_names[33], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_canConnectTo_(ApiNodeService_method_names[34], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_canConnectTo1_(ApiNodeService_method_names[35], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_canConnectToIx_(ApiNodeService_method_names[36], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_connectTo_(ApiNodeService_method_names[37], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_connectTo1_(ApiNodeService_method_names[38], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_connectToIx_(ApiNodeService_method_names[39], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_connectedNode_(ApiNodeService_method_names[40], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_connectedNode1_(ApiNodeService_method_names[41], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_connectedNodeIx_(ApiNodeService_method_names[42], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_inputNode_(ApiNodeService_method_names[43], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_inputNode1_(ApiNodeService_method_names[44], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_inputNodeIx_(ApiNodeService_method_names[45], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destinationNodes_(ApiNodeService_method_names[46], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_buildLinkerNodePinInfo_(ApiNodeService_method_names[47], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_buildDestinationPinInfo_(ApiNodeService_method_names[48], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ownedItem_(ApiNodeService_method_names[49], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ownedItem1_(ApiNodeService_method_names[50], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ownedItemIx_(ApiNodeService_method_names[51], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createInternal_(ApiNodeService_method_names[52], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createInternal1_(ApiNodeService_method_names[53], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createInternalIx_(ApiNodeService_method_names[54], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createInternal2_(ApiNodeService_method_names[55], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createInternal3_(ApiNodeService_method_names[56], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createInternalIx1_(ApiNodeService_method_names[57], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_copyFrom_(ApiNodeService_method_names[58], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_copyFrom1_(ApiNodeService_method_names[59], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_copyFromIx_(ApiNodeService_method_names[60], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinBool_(ApiNodeService_method_names[61], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat_(ApiNodeService_method_names[62], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat2_(ApiNodeService_method_names[63], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat3_(ApiNodeService_method_names[64], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat4_(ApiNodeService_method_names[65], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt_(ApiNodeService_method_names[66], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt2_(ApiNodeService_method_names[67], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt3_(ApiNodeService_method_names[68], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt4_(ApiNodeService_method_names[69], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinMatrix_(ApiNodeService_method_names[70], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinString_(ApiNodeService_method_names[71], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFilePath_(ApiNodeService_method_names[72], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinBool1_(ApiNodeService_method_names[73], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat1_(ApiNodeService_method_names[74], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat21_(ApiNodeService_method_names[75], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat31_(ApiNodeService_method_names[76], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat41_(ApiNodeService_method_names[77], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt1_(ApiNodeService_method_names[78], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt21_(ApiNodeService_method_names[79], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt31_(ApiNodeService_method_names[80], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt41_(ApiNodeService_method_names[81], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinMatrix1_(ApiNodeService_method_names[82], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinString1_(ApiNodeService_method_names[83], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFilePath1_(ApiNodeService_method_names[84], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinBoolIx_(ApiNodeService_method_names[85], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloatIx_(ApiNodeService_method_names[86], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat2Ix_(ApiNodeService_method_names[87], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat3Ix_(ApiNodeService_method_names[88], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFloat4Ix_(ApiNodeService_method_names[89], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinIntIx_(ApiNodeService_method_names[90], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt2Ix_(ApiNodeService_method_names[91], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt3Ix_(ApiNodeService_method_names[92], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinInt4Ix_(ApiNodeService_method_names[93], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinMatrixIx_(ApiNodeService_method_names[94], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinStringIx_(ApiNodeService_method_names[95], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinFilePathIx_(ApiNodeService_method_names[96], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue_(ApiNodeService_method_names[97], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue1_(ApiNodeService_method_names[98], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue2_(ApiNodeService_method_names[99], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue3_(ApiNodeService_method_names[100], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue4_(ApiNodeService_method_names[101], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue5_(ApiNodeService_method_names[102], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue6_(ApiNodeService_method_names[103], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue7_(ApiNodeService_method_names[104], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue8_(ApiNodeService_method_names[105], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue9_(ApiNodeService_method_names[106], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue10_(ApiNodeService_method_names[107], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue11_(ApiNodeService_method_names[108], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue12_(ApiNodeService_method_names[109], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue13_(ApiNodeService_method_names[110], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue14_(ApiNodeService_method_names[111], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue15_(ApiNodeService_method_names[112], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue16_(ApiNodeService_method_names[113], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue17_(ApiNodeService_method_names[114], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue18_(ApiNodeService_method_names[115], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue19_(ApiNodeService_method_names[116], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue20_(ApiNodeService_method_names[117], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue21_(ApiNodeService_method_names[118], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue22_(ApiNodeService_method_names[119], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValue23_(ApiNodeService_method_names[120], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx_(ApiNodeService_method_names[121], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx1_(ApiNodeService_method_names[122], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx2_(ApiNodeService_method_names[123], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx3_(ApiNodeService_method_names[124], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx4_(ApiNodeService_method_names[125], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx5_(ApiNodeService_method_names[126], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx6_(ApiNodeService_method_names[127], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx7_(ApiNodeService_method_names[128], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx8_(ApiNodeService_method_names[129], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx9_(ApiNodeService_method_names[130], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx10_(ApiNodeService_method_names[131], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getPinValueIx11_(ApiNodeService_method_names[132], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue_(ApiNodeService_method_names[133], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue1_(ApiNodeService_method_names[134], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue2_(ApiNodeService_method_names[135], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue3_(ApiNodeService_method_names[136], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue4_(ApiNodeService_method_names[137], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue5_(ApiNodeService_method_names[138], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue6_(ApiNodeService_method_names[139], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue7_(ApiNodeService_method_names[140], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue8_(ApiNodeService_method_names[141], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue9_(ApiNodeService_method_names[142], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue10_(ApiNodeService_method_names[143], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue11_(ApiNodeService_method_names[144], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue12_(ApiNodeService_method_names[145], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue13_(ApiNodeService_method_names[146], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue14_(ApiNodeService_method_names[147], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue15_(ApiNodeService_method_names[148], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue16_(ApiNodeService_method_names[149], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue17_(ApiNodeService_method_names[150], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue18_(ApiNodeService_method_names[151], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue19_(ApiNodeService_method_names[152], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue20_(ApiNodeService_method_names[153], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue21_(ApiNodeService_method_names[154], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue22_(ApiNodeService_method_names[155], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValue23_(ApiNodeService_method_names[156], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx_(ApiNodeService_method_names[157], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx1_(ApiNodeService_method_names[158], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx2_(ApiNodeService_method_names[159], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx3_(ApiNodeService_method_names[160], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx4_(ApiNodeService_method_names[161], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx5_(ApiNodeService_method_names[162], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx6_(ApiNodeService_method_names[163], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx7_(ApiNodeService_method_names[164], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx8_(ApiNodeService_method_names[165], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx9_(ApiNodeService_method_names[166], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx10_(ApiNodeService_method_names[167], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setPinValueIx11_(ApiNodeService_method_names[168], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_storeToDb_(ApiNodeService_method_names[169], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_showOslWindow_(ApiNodeService_method_names[170], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_closeOslWindow_(ApiNodeService_method_names[171], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_unpackFileData_(ApiNodeService_method_names[172], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiNodeService::Stub::create(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createRequest& request, ::octaneapi::ApiNode_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_createRequest, ::octaneapi::ApiNode_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create_, context, request, response);
}

void ApiNodeService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createRequest* request, ::octaneapi::ApiNode_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_createRequest, ::octaneapi::ApiNode_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createRequest* request, ::octaneapi::ApiNode_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createResponse>* ApiNodeService::Stub::PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_createResponse, ::octaneapi::ApiNode_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createResponse>* ApiNodeService::Stub::AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::addDynamicPinForLoading(::grpc::ClientContext* context, const ::octaneapi::ApiNode_addDynamicPinForLoadingRequest& request, ::octaneapi::ApiNode_addDynamicPinForLoadingResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_addDynamicPinForLoadingRequest, ::octaneapi::ApiNode_addDynamicPinForLoadingResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_addDynamicPinForLoading_, context, request, response);
}

void ApiNodeService::Stub::async::addDynamicPinForLoading(::grpc::ClientContext* context, const ::octaneapi::ApiNode_addDynamicPinForLoadingRequest* request, ::octaneapi::ApiNode_addDynamicPinForLoadingResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_addDynamicPinForLoadingRequest, ::octaneapi::ApiNode_addDynamicPinForLoadingResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addDynamicPinForLoading_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::addDynamicPinForLoading(::grpc::ClientContext* context, const ::octaneapi::ApiNode_addDynamicPinForLoadingRequest* request, ::octaneapi::ApiNode_addDynamicPinForLoadingResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addDynamicPinForLoading_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_addDynamicPinForLoadingResponse>* ApiNodeService::Stub::PrepareAsyncaddDynamicPinForLoadingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_addDynamicPinForLoadingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_addDynamicPinForLoadingResponse, ::octaneapi::ApiNode_addDynamicPinForLoadingRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_addDynamicPinForLoading_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_addDynamicPinForLoadingResponse>* ApiNodeService::Stub::AsyncaddDynamicPinForLoadingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_addDynamicPinForLoadingRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncaddDynamicPinForLoadingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::info(::grpc::ClientContext* context, const ::octaneapi::ApiNode_infoRequest& request, ::octaneapi::ApiNode_infoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_infoRequest, ::octaneapi::ApiNode_infoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_info_, context, request, response);
}

void ApiNodeService::Stub::async::info(::grpc::ClientContext* context, const ::octaneapi::ApiNode_infoRequest* request, ::octaneapi::ApiNode_infoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_infoRequest, ::octaneapi::ApiNode_infoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_info_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::info(::grpc::ClientContext* context, const ::octaneapi::ApiNode_infoRequest* request, ::octaneapi::ApiNode_infoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_info_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_infoResponse>* ApiNodeService::Stub::PrepareAsyncinfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_infoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_infoResponse, ::octaneapi::ApiNode_infoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_info_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_infoResponse>* ApiNodeService::Stub::AsyncinfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_infoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::type(::grpc::ClientContext* context, const ::octaneapi::ApiNode_typeRequest& request, ::octaneapi::ApiNode_typeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_typeRequest, ::octaneapi::ApiNode_typeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_type_, context, request, response);
}

void ApiNodeService::Stub::async::type(::grpc::ClientContext* context, const ::octaneapi::ApiNode_typeRequest* request, ::octaneapi::ApiNode_typeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_typeRequest, ::octaneapi::ApiNode_typeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_type_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::type(::grpc::ClientContext* context, const ::octaneapi::ApiNode_typeRequest* request, ::octaneapi::ApiNode_typeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_type_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_typeResponse>* ApiNodeService::Stub::PrepareAsynctypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_typeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_typeResponse, ::octaneapi::ApiNode_typeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_type_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_typeResponse>* ApiNodeService::Stub::AsynctypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_typeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::outputTextureValueType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_outputTextureValueTypeRequest& request, ::octaneapi::ApiNode_outputTextureValueTypeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_outputTextureValueTypeRequest, ::octaneapi::ApiNode_outputTextureValueTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_outputTextureValueType_, context, request, response);
}

void ApiNodeService::Stub::async::outputTextureValueType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_outputTextureValueTypeRequest* request, ::octaneapi::ApiNode_outputTextureValueTypeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_outputTextureValueTypeRequest, ::octaneapi::ApiNode_outputTextureValueTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_outputTextureValueType_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::outputTextureValueType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_outputTextureValueTypeRequest* request, ::octaneapi::ApiNode_outputTextureValueTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_outputTextureValueType_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_outputTextureValueTypeResponse>* ApiNodeService::Stub::PrepareAsyncoutputTextureValueTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_outputTextureValueTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_outputTextureValueTypeResponse, ::octaneapi::ApiNode_outputTextureValueTypeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_outputTextureValueType_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_outputTextureValueTypeResponse>* ApiNodeService::Stub::AsyncoutputTextureValueTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_outputTextureValueTypeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncoutputTextureValueTypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setTextureTypeConfiguration(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setTextureTypeConfigurationRequest& request, ::octaneapi::ApiNode_setTextureTypeConfigurationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setTextureTypeConfigurationRequest, ::octaneapi::ApiNode_setTextureTypeConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setTextureTypeConfiguration_, context, request, response);
}

void ApiNodeService::Stub::async::setTextureTypeConfiguration(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setTextureTypeConfigurationRequest* request, ::octaneapi::ApiNode_setTextureTypeConfigurationResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setTextureTypeConfigurationRequest, ::octaneapi::ApiNode_setTextureTypeConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setTextureTypeConfiguration_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setTextureTypeConfiguration(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setTextureTypeConfigurationRequest* request, ::octaneapi::ApiNode_setTextureTypeConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setTextureTypeConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_setTextureTypeConfigurationResponse>* ApiNodeService::Stub::PrepareAsyncsetTextureTypeConfigurationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setTextureTypeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_setTextureTypeConfigurationResponse, ::octaneapi::ApiNode_setTextureTypeConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setTextureTypeConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_setTextureTypeConfigurationResponse>* ApiNodeService::Stub::AsyncsetTextureTypeConfigurationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setTextureTypeConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetTextureTypeConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::configureEmptyPins(::grpc::ClientContext* context, const ::octaneapi::ApiNode_configureEmptyPinsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_configureEmptyPinsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_configureEmptyPins_, context, request, response);
}

void ApiNodeService::Stub::async::configureEmptyPins(::grpc::ClientContext* context, const ::octaneapi::ApiNode_configureEmptyPinsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_configureEmptyPinsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_configureEmptyPins_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::configureEmptyPins(::grpc::ClientContext* context, const ::octaneapi::ApiNode_configureEmptyPinsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_configureEmptyPins_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncconfigureEmptyPinsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_configureEmptyPinsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_configureEmptyPinsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_configureEmptyPins_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncconfigureEmptyPinsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_configureEmptyPinsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncconfigureEmptyPinsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinCountRequest& request, ::octaneapi::ApiNode_pinCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinCountRequest, ::octaneapi::ApiNode_pinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinCount_, context, request, response);
}

void ApiNodeService::Stub::async::pinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinCountRequest* request, ::octaneapi::ApiNode_pinCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinCountRequest, ::octaneapi::ApiNode_pinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinCount_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinCountRequest* request, ::octaneapi::ApiNode_pinCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinCountResponse>* ApiNodeService::Stub::PrepareAsyncpinCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinCountResponse, ::octaneapi::ApiNode_pinCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinCountResponse>* ApiNodeService::Stub::AsyncpinCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::staticPinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_staticPinCountRequest& request, ::octaneapi::ApiNode_staticPinCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_staticPinCountRequest, ::octaneapi::ApiNode_staticPinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_staticPinCount_, context, request, response);
}

void ApiNodeService::Stub::async::staticPinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_staticPinCountRequest* request, ::octaneapi::ApiNode_staticPinCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_staticPinCountRequest, ::octaneapi::ApiNode_staticPinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_staticPinCount_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::staticPinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_staticPinCountRequest* request, ::octaneapi::ApiNode_staticPinCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_staticPinCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_staticPinCountResponse>* ApiNodeService::Stub::PrepareAsyncstaticPinCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_staticPinCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_staticPinCountResponse, ::octaneapi::ApiNode_staticPinCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_staticPinCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_staticPinCountResponse>* ApiNodeService::Stub::AsyncstaticPinCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_staticPinCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstaticPinCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::dynPinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_dynPinCountRequest& request, ::octaneapi::ApiNode_dynPinCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_dynPinCountRequest, ::octaneapi::ApiNode_dynPinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_dynPinCount_, context, request, response);
}

void ApiNodeService::Stub::async::dynPinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_dynPinCountRequest* request, ::octaneapi::ApiNode_dynPinCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_dynPinCountRequest, ::octaneapi::ApiNode_dynPinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_dynPinCount_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::dynPinCount(::grpc::ClientContext* context, const ::octaneapi::ApiNode_dynPinCountRequest* request, ::octaneapi::ApiNode_dynPinCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_dynPinCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_dynPinCountResponse>* ApiNodeService::Stub::PrepareAsyncdynPinCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_dynPinCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_dynPinCountResponse, ::octaneapi::ApiNode_dynPinCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_dynPinCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_dynPinCountResponse>* ApiNodeService::Stub::AsyncdynPinCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_dynPinCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdynPinCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::hasPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinRequest& request, ::octaneapi::ApiNode_hasPinResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_hasPinRequest, ::octaneapi::ApiNode_hasPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_hasPin_, context, request, response);
}

void ApiNodeService::Stub::async::hasPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinRequest* request, ::octaneapi::ApiNode_hasPinResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_hasPinRequest, ::octaneapi::ApiNode_hasPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasPin_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::hasPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinRequest* request, ::octaneapi::ApiNode_hasPinResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasPin_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_hasPinResponse>* ApiNodeService::Stub::PrepareAsynchasPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_hasPinResponse, ::octaneapi::ApiNode_hasPinRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_hasPin_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_hasPinResponse>* ApiNodeService::Stub::AsynchasPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchasPinRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::hasPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPin1Request& request, ::octaneapi::ApiNode_hasPin1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_hasPin1Request, ::octaneapi::ApiNode_hasPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_hasPin1_, context, request, response);
}

void ApiNodeService::Stub::async::hasPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPin1Request* request, ::octaneapi::ApiNode_hasPin1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_hasPin1Request, ::octaneapi::ApiNode_hasPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasPin1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::hasPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPin1Request* request, ::octaneapi::ApiNode_hasPin1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasPin1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_hasPin1Response>* ApiNodeService::Stub::PrepareAsynchasPin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPin1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_hasPin1Response, ::octaneapi::ApiNode_hasPin1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_hasPin1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_hasPin1Response>* ApiNodeService::Stub::AsynchasPin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPin1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchasPin1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::hasPinIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinIxRequest& request, ::octaneapi::ApiNode_hasPinIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_hasPinIxRequest, ::octaneapi::ApiNode_hasPinIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_hasPinIx_, context, request, response);
}

void ApiNodeService::Stub::async::hasPinIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinIxRequest* request, ::octaneapi::ApiNode_hasPinIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_hasPinIxRequest, ::octaneapi::ApiNode_hasPinIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasPinIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::hasPinIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinIxRequest* request, ::octaneapi::ApiNode_hasPinIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_hasPinIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_hasPinIxResponse>* ApiNodeService::Stub::PrepareAsynchasPinIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_hasPinIxResponse, ::octaneapi::ApiNode_hasPinIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_hasPinIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_hasPinIxResponse>* ApiNodeService::Stub::AsynchasPinIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_hasPinIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynchasPinIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::findPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPinRequest& request, ::octaneapi::ApiNode_findPinResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_findPinRequest, ::octaneapi::ApiNode_findPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_findPin_, context, request, response);
}

void ApiNodeService::Stub::async::findPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPinRequest* request, ::octaneapi::ApiNode_findPinResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_findPinRequest, ::octaneapi::ApiNode_findPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findPin_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::findPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPinRequest* request, ::octaneapi::ApiNode_findPinResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findPin_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_findPinResponse>* ApiNodeService::Stub::PrepareAsyncfindPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPinRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_findPinResponse, ::octaneapi::ApiNode_findPinRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_findPin_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_findPinResponse>* ApiNodeService::Stub::AsyncfindPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPinRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfindPinRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::findPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPin1Request& request, ::octaneapi::ApiNode_findPin1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_findPin1Request, ::octaneapi::ApiNode_findPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_findPin1_, context, request, response);
}

void ApiNodeService::Stub::async::findPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPin1Request* request, ::octaneapi::ApiNode_findPin1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_findPin1Request, ::octaneapi::ApiNode_findPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findPin1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::findPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPin1Request* request, ::octaneapi::ApiNode_findPin1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_findPin1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_findPin1Response>* ApiNodeService::Stub::PrepareAsyncfindPin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPin1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_findPin1Response, ::octaneapi::ApiNode_findPin1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_findPin1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_findPin1Response>* ApiNodeService::Stub::AsyncfindPin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_findPin1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfindPin1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinId(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdRequest& request, ::octaneapi::ApiNode_pinIdResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinIdRequest, ::octaneapi::ApiNode_pinIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinId_, context, request, response);
}

void ApiNodeService::Stub::async::pinId(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdRequest* request, ::octaneapi::ApiNode_pinIdResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinIdRequest, ::octaneapi::ApiNode_pinIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinId_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinId(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdRequest* request, ::octaneapi::ApiNode_pinIdResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinId_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinIdResponse>* ApiNodeService::Stub::PrepareAsyncpinIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinIdResponse, ::octaneapi::ApiNode_pinIdRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinId_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinIdResponse>* ApiNodeService::Stub::AsyncpinIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinIdRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdIxRequest& request, ::octaneapi::ApiNode_pinIdIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinIdIxRequest, ::octaneapi::ApiNode_pinIdIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinIdIx_, context, request, response);
}

void ApiNodeService::Stub::async::pinIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdIxRequest* request, ::octaneapi::ApiNode_pinIdIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinIdIxRequest, ::octaneapi::ApiNode_pinIdIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinIdIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdIxRequest* request, ::octaneapi::ApiNode_pinIdIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinIdIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinIdIxResponse>* ApiNodeService::Stub::PrepareAsyncpinIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinIdIxResponse, ::octaneapi::ApiNode_pinIdIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinIdIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinIdIxResponse>* ApiNodeService::Stub::AsyncpinIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinIdIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinIdIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinName(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameRequest& request, ::octaneapi::ApiNode_pinNameResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinNameRequest, ::octaneapi::ApiNode_pinNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinName_, context, request, response);
}

void ApiNodeService::Stub::async::pinName(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameRequest* request, ::octaneapi::ApiNode_pinNameResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinNameRequest, ::octaneapi::ApiNode_pinNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinName_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinName(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameRequest* request, ::octaneapi::ApiNode_pinNameResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinNameResponse>* ApiNodeService::Stub::PrepareAsyncpinNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinNameResponse, ::octaneapi::ApiNode_pinNameRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinName_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinNameResponse>* ApiNodeService::Stub::AsyncpinNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinNameRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameIxRequest& request, ::octaneapi::ApiNode_pinNameIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinNameIxRequest, ::octaneapi::ApiNode_pinNameIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinNameIx_, context, request, response);
}

void ApiNodeService::Stub::async::pinNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameIxRequest* request, ::octaneapi::ApiNode_pinNameIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinNameIxRequest, ::octaneapi::ApiNode_pinNameIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinNameIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameIxRequest* request, ::octaneapi::ApiNode_pinNameIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinNameIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinNameIxResponse>* ApiNodeService::Stub::PrepareAsyncpinNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinNameIxResponse, ::octaneapi::ApiNode_pinNameIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinNameIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinNameIxResponse>* ApiNodeService::Stub::AsyncpinNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinNameIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinNameIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinLabel(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelRequest& request, ::octaneapi::ApiNode_pinLabelResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinLabelRequest, ::octaneapi::ApiNode_pinLabelResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinLabel_, context, request, response);
}

void ApiNodeService::Stub::async::pinLabel(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelRequest* request, ::octaneapi::ApiNode_pinLabelResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinLabelRequest, ::octaneapi::ApiNode_pinLabelResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinLabel_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinLabel(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelRequest* request, ::octaneapi::ApiNode_pinLabelResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinLabel_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinLabelResponse>* ApiNodeService::Stub::PrepareAsyncpinLabelRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinLabelResponse, ::octaneapi::ApiNode_pinLabelRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinLabel_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinLabelResponse>* ApiNodeService::Stub::AsyncpinLabelRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinLabelRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinLabel1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabel1Request& request, ::octaneapi::ApiNode_pinLabel1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinLabel1Request, ::octaneapi::ApiNode_pinLabel1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinLabel1_, context, request, response);
}

void ApiNodeService::Stub::async::pinLabel1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabel1Request* request, ::octaneapi::ApiNode_pinLabel1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinLabel1Request, ::octaneapi::ApiNode_pinLabel1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinLabel1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinLabel1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabel1Request* request, ::octaneapi::ApiNode_pinLabel1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinLabel1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinLabel1Response>* ApiNodeService::Stub::PrepareAsyncpinLabel1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabel1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinLabel1Response, ::octaneapi::ApiNode_pinLabel1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinLabel1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinLabel1Response>* ApiNodeService::Stub::AsyncpinLabel1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabel1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinLabel1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinLabelIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelIxRequest& request, ::octaneapi::ApiNode_pinLabelIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinLabelIxRequest, ::octaneapi::ApiNode_pinLabelIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinLabelIx_, context, request, response);
}

void ApiNodeService::Stub::async::pinLabelIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelIxRequest* request, ::octaneapi::ApiNode_pinLabelIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinLabelIxRequest, ::octaneapi::ApiNode_pinLabelIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinLabelIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinLabelIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelIxRequest* request, ::octaneapi::ApiNode_pinLabelIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinLabelIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinLabelIxResponse>* ApiNodeService::Stub::PrepareAsyncpinLabelIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinLabelIxResponse, ::octaneapi::ApiNode_pinLabelIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinLabelIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinLabelIxResponse>* ApiNodeService::Stub::AsyncpinLabelIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinLabelIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinLabelIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeRequest& request, ::octaneapi::ApiNode_pinTypeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinTypeRequest, ::octaneapi::ApiNode_pinTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinType_, context, request, response);
}

void ApiNodeService::Stub::async::pinType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeRequest* request, ::octaneapi::ApiNode_pinTypeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinTypeRequest, ::octaneapi::ApiNode_pinTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinType_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeRequest* request, ::octaneapi::ApiNode_pinTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinType_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTypeResponse>* ApiNodeService::Stub::PrepareAsyncpinTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinTypeResponse, ::octaneapi::ApiNode_pinTypeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinType_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTypeResponse>* ApiNodeService::Stub::AsyncpinTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinTypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinType1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinType1Request& request, ::octaneapi::ApiNode_pinType1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinType1Request, ::octaneapi::ApiNode_pinType1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinType1_, context, request, response);
}

void ApiNodeService::Stub::async::pinType1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinType1Request* request, ::octaneapi::ApiNode_pinType1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinType1Request, ::octaneapi::ApiNode_pinType1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinType1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinType1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinType1Request* request, ::octaneapi::ApiNode_pinType1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinType1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinType1Response>* ApiNodeService::Stub::PrepareAsyncpinType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinType1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinType1Response, ::octaneapi::ApiNode_pinType1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinType1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinType1Response>* ApiNodeService::Stub::AsyncpinType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinType1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinType1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeIxRequest& request, ::octaneapi::ApiNode_pinTypeIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinTypeIxRequest, ::octaneapi::ApiNode_pinTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinTypeIx_, context, request, response);
}

void ApiNodeService::Stub::async::pinTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeIxRequest* request, ::octaneapi::ApiNode_pinTypeIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinTypeIxRequest, ::octaneapi::ApiNode_pinTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinTypeIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeIxRequest* request, ::octaneapi::ApiNode_pinTypeIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinTypeIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTypeIxResponse>* ApiNodeService::Stub::PrepareAsyncpinTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinTypeIxResponse, ::octaneapi::ApiNode_pinTypeIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinTypeIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTypeIxResponse>* ApiNodeService::Stub::AsyncpinTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinTypeIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinTextureValueType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeRequest& request, ::octaneapi::ApiNode_pinTextureValueTypeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinTextureValueTypeRequest, ::octaneapi::ApiNode_pinTextureValueTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinTextureValueType_, context, request, response);
}

void ApiNodeService::Stub::async::pinTextureValueType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeRequest* request, ::octaneapi::ApiNode_pinTextureValueTypeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinTextureValueTypeRequest, ::octaneapi::ApiNode_pinTextureValueTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinTextureValueType_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinTextureValueType(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeRequest* request, ::octaneapi::ApiNode_pinTextureValueTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinTextureValueType_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTextureValueTypeResponse>* ApiNodeService::Stub::PrepareAsyncpinTextureValueTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinTextureValueTypeResponse, ::octaneapi::ApiNode_pinTextureValueTypeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinTextureValueType_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTextureValueTypeResponse>* ApiNodeService::Stub::AsyncpinTextureValueTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinTextureValueTypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinTextureValueTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeIxRequest& request, ::octaneapi::ApiNode_pinTextureValueTypeIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinTextureValueTypeIxRequest, ::octaneapi::ApiNode_pinTextureValueTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinTextureValueTypeIx_, context, request, response);
}

void ApiNodeService::Stub::async::pinTextureValueTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeIxRequest* request, ::octaneapi::ApiNode_pinTextureValueTypeIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinTextureValueTypeIxRequest, ::octaneapi::ApiNode_pinTextureValueTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinTextureValueTypeIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinTextureValueTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeIxRequest* request, ::octaneapi::ApiNode_pinTextureValueTypeIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinTextureValueTypeIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTextureValueTypeIxResponse>* ApiNodeService::Stub::PrepareAsyncpinTextureValueTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinTextureValueTypeIxResponse, ::octaneapi::ApiNode_pinTextureValueTypeIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinTextureValueTypeIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinTextureValueTypeIxResponse>* ApiNodeService::Stub::AsyncpinTextureValueTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinTextureValueTypeIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoRequest& request, ::octaneapi::ApiNode_pinInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinInfoRequest, ::octaneapi::ApiNode_pinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinInfo_, context, request, response);
}

void ApiNodeService::Stub::async::pinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoRequest* request, ::octaneapi::ApiNode_pinInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinInfoRequest, ::octaneapi::ApiNode_pinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinInfo_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoRequest* request, ::octaneapi::ApiNode_pinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinInfoResponse>* ApiNodeService::Stub::PrepareAsyncpinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinInfoResponse, ::octaneapi::ApiNode_pinInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinInfoResponse>* ApiNodeService::Stub::AsyncpinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfo1Request& request, ::octaneapi::ApiNode_pinInfo1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinInfo1Request, ::octaneapi::ApiNode_pinInfo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinInfo1_, context, request, response);
}

void ApiNodeService::Stub::async::pinInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfo1Request* request, ::octaneapi::ApiNode_pinInfo1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinInfo1Request, ::octaneapi::ApiNode_pinInfo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinInfo1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfo1Request* request, ::octaneapi::ApiNode_pinInfo1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinInfo1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinInfo1Response>* ApiNodeService::Stub::PrepareAsyncpinInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfo1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinInfo1Response, ::octaneapi::ApiNode_pinInfo1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinInfo1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinInfo1Response>* ApiNodeService::Stub::AsyncpinInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfo1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinInfo1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoIxRequest& request, ::octaneapi::ApiNode_pinInfoIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinInfoIxRequest, ::octaneapi::ApiNode_pinInfoIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinInfoIx_, context, request, response);
}

void ApiNodeService::Stub::async::pinInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoIxRequest* request, ::octaneapi::ApiNode_pinInfoIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinInfoIxRequest, ::octaneapi::ApiNode_pinInfoIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinInfoIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoIxRequest* request, ::octaneapi::ApiNode_pinInfoIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinInfoIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinInfoIxResponse>* ApiNodeService::Stub::PrepareAsyncpinInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinInfoIxResponse, ::octaneapi::ApiNode_pinInfoIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinInfoIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinInfoIxResponse>* ApiNodeService::Stub::AsyncpinInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinInfoIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::pinsAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinsAreDirtyRequest& request, ::octaneapi::ApiNode_pinsAreDirtyResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_pinsAreDirtyRequest, ::octaneapi::ApiNode_pinsAreDirtyResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_pinsAreDirty_, context, request, response);
}

void ApiNodeService::Stub::async::pinsAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinsAreDirtyRequest* request, ::octaneapi::ApiNode_pinsAreDirtyResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_pinsAreDirtyRequest, ::octaneapi::ApiNode_pinsAreDirtyResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinsAreDirty_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::pinsAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinsAreDirtyRequest* request, ::octaneapi::ApiNode_pinsAreDirtyResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_pinsAreDirty_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinsAreDirtyResponse>* ApiNodeService::Stub::PrepareAsyncpinsAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinsAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_pinsAreDirtyResponse, ::octaneapi::ApiNode_pinsAreDirtyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_pinsAreDirty_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_pinsAreDirtyResponse>* ApiNodeService::Stub::AsyncpinsAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_pinsAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncpinsAreDirtyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::isDirtyPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinRequest& request, ::octaneapi::ApiNode_isDirtyPinResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_isDirtyPinRequest, ::octaneapi::ApiNode_isDirtyPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isDirtyPin_, context, request, response);
}

void ApiNodeService::Stub::async::isDirtyPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinRequest* request, ::octaneapi::ApiNode_isDirtyPinResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_isDirtyPinRequest, ::octaneapi::ApiNode_isDirtyPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyPin_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::isDirtyPin(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinRequest* request, ::octaneapi::ApiNode_isDirtyPinResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyPin_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_isDirtyPinResponse>* ApiNodeService::Stub::PrepareAsyncisDirtyPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_isDirtyPinResponse, ::octaneapi::ApiNode_isDirtyPinRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isDirtyPin_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_isDirtyPinResponse>* ApiNodeService::Stub::AsyncisDirtyPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisDirtyPinRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::isDirtyPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPin1Request& request, ::octaneapi::ApiNode_isDirtyPin1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_isDirtyPin1Request, ::octaneapi::ApiNode_isDirtyPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isDirtyPin1_, context, request, response);
}

void ApiNodeService::Stub::async::isDirtyPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPin1Request* request, ::octaneapi::ApiNode_isDirtyPin1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_isDirtyPin1Request, ::octaneapi::ApiNode_isDirtyPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyPin1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::isDirtyPin1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPin1Request* request, ::octaneapi::ApiNode_isDirtyPin1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyPin1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_isDirtyPin1Response>* ApiNodeService::Stub::PrepareAsyncisDirtyPin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPin1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_isDirtyPin1Response, ::octaneapi::ApiNode_isDirtyPin1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isDirtyPin1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_isDirtyPin1Response>* ApiNodeService::Stub::AsyncisDirtyPin1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPin1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisDirtyPin1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::isDirtyPinIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinIxRequest& request, ::octaneapi::ApiNode_isDirtyPinIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_isDirtyPinIxRequest, ::octaneapi::ApiNode_isDirtyPinIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isDirtyPinIx_, context, request, response);
}

void ApiNodeService::Stub::async::isDirtyPinIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinIxRequest* request, ::octaneapi::ApiNode_isDirtyPinIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_isDirtyPinIxRequest, ::octaneapi::ApiNode_isDirtyPinIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyPinIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::isDirtyPinIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinIxRequest* request, ::octaneapi::ApiNode_isDirtyPinIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isDirtyPinIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_isDirtyPinIxResponse>* ApiNodeService::Stub::PrepareAsyncisDirtyPinIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_isDirtyPinIxResponse, ::octaneapi::ApiNode_isDirtyPinIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isDirtyPinIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_isDirtyPinIxResponse>* ApiNodeService::Stub::AsyncisDirtyPinIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_isDirtyPinIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisDirtyPinIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::canConnectTo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToRequest& request, ::octaneapi::ApiNode_canConnectToResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_canConnectToRequest, ::octaneapi::ApiNode_canConnectToResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_canConnectTo_, context, request, response);
}

void ApiNodeService::Stub::async::canConnectTo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToRequest* request, ::octaneapi::ApiNode_canConnectToResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_canConnectToRequest, ::octaneapi::ApiNode_canConnectToResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_canConnectTo_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::canConnectTo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToRequest* request, ::octaneapi::ApiNode_canConnectToResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_canConnectTo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_canConnectToResponse>* ApiNodeService::Stub::PrepareAsynccanConnectToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_canConnectToResponse, ::octaneapi::ApiNode_canConnectToRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_canConnectTo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_canConnectToResponse>* ApiNodeService::Stub::AsynccanConnectToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccanConnectToRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::canConnectTo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectTo1Request& request, ::octaneapi::ApiNode_canConnectTo1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_canConnectTo1Request, ::octaneapi::ApiNode_canConnectTo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_canConnectTo1_, context, request, response);
}

void ApiNodeService::Stub::async::canConnectTo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectTo1Request* request, ::octaneapi::ApiNode_canConnectTo1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_canConnectTo1Request, ::octaneapi::ApiNode_canConnectTo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_canConnectTo1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::canConnectTo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectTo1Request* request, ::octaneapi::ApiNode_canConnectTo1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_canConnectTo1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_canConnectTo1Response>* ApiNodeService::Stub::PrepareAsynccanConnectTo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectTo1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_canConnectTo1Response, ::octaneapi::ApiNode_canConnectTo1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_canConnectTo1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_canConnectTo1Response>* ApiNodeService::Stub::AsynccanConnectTo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectTo1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccanConnectTo1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::canConnectToIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToIxRequest& request, ::octaneapi::ApiNode_canConnectToIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_canConnectToIxRequest, ::octaneapi::ApiNode_canConnectToIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_canConnectToIx_, context, request, response);
}

void ApiNodeService::Stub::async::canConnectToIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToIxRequest* request, ::octaneapi::ApiNode_canConnectToIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_canConnectToIxRequest, ::octaneapi::ApiNode_canConnectToIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_canConnectToIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::canConnectToIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToIxRequest* request, ::octaneapi::ApiNode_canConnectToIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_canConnectToIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_canConnectToIxResponse>* ApiNodeService::Stub::PrepareAsynccanConnectToIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_canConnectToIxResponse, ::octaneapi::ApiNode_canConnectToIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_canConnectToIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_canConnectToIxResponse>* ApiNodeService::Stub::AsynccanConnectToIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_canConnectToIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccanConnectToIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::connectTo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_connectToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_connectTo_, context, request, response);
}

void ApiNodeService::Stub::async::connectTo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_connectToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectTo_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::connectTo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectTo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncconnectToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_connectToRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_connectTo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncconnectToRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncconnectToRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::connectTo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectTo1Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_connectTo1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_connectTo1_, context, request, response);
}

void ApiNodeService::Stub::async::connectTo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectTo1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_connectTo1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectTo1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::connectTo1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectTo1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectTo1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncconnectTo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectTo1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_connectTo1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_connectTo1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncconnectTo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectTo1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncconnectTo1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::connectToIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToIxRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_connectToIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_connectToIx_, context, request, response);
}

void ApiNodeService::Stub::async::connectToIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_connectToIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectToIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::connectToIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectToIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncconnectToIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_connectToIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_connectToIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncconnectToIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectToIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncconnectToIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::connectedNode(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeRequest& request, ::octaneapi::ApiNode_connectedNodeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_connectedNodeRequest, ::octaneapi::ApiNode_connectedNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_connectedNode_, context, request, response);
}

void ApiNodeService::Stub::async::connectedNode(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeRequest* request, ::octaneapi::ApiNode_connectedNodeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_connectedNodeRequest, ::octaneapi::ApiNode_connectedNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectedNode_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::connectedNode(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeRequest* request, ::octaneapi::ApiNode_connectedNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectedNode_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_connectedNodeResponse>* ApiNodeService::Stub::PrepareAsyncconnectedNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_connectedNodeResponse, ::octaneapi::ApiNode_connectedNodeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_connectedNode_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_connectedNodeResponse>* ApiNodeService::Stub::AsyncconnectedNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncconnectedNodeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::connectedNode1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNode1Request& request, ::octaneapi::ApiNode_connectedNode1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_connectedNode1Request, ::octaneapi::ApiNode_connectedNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_connectedNode1_, context, request, response);
}

void ApiNodeService::Stub::async::connectedNode1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNode1Request* request, ::octaneapi::ApiNode_connectedNode1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_connectedNode1Request, ::octaneapi::ApiNode_connectedNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectedNode1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::connectedNode1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNode1Request* request, ::octaneapi::ApiNode_connectedNode1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectedNode1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_connectedNode1Response>* ApiNodeService::Stub::PrepareAsyncconnectedNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNode1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_connectedNode1Response, ::octaneapi::ApiNode_connectedNode1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_connectedNode1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_connectedNode1Response>* ApiNodeService::Stub::AsyncconnectedNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNode1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncconnectedNode1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::connectedNodeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeIxRequest& request, ::octaneapi::ApiNode_connectedNodeIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_connectedNodeIxRequest, ::octaneapi::ApiNode_connectedNodeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_connectedNodeIx_, context, request, response);
}

void ApiNodeService::Stub::async::connectedNodeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeIxRequest* request, ::octaneapi::ApiNode_connectedNodeIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_connectedNodeIxRequest, ::octaneapi::ApiNode_connectedNodeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectedNodeIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::connectedNodeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeIxRequest* request, ::octaneapi::ApiNode_connectedNodeIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_connectedNodeIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_connectedNodeIxResponse>* ApiNodeService::Stub::PrepareAsyncconnectedNodeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_connectedNodeIxResponse, ::octaneapi::ApiNode_connectedNodeIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_connectedNodeIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_connectedNodeIxResponse>* ApiNodeService::Stub::AsyncconnectedNodeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_connectedNodeIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncconnectedNodeIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::inputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeRequest& request, ::octaneapi::ApiNode_inputNodeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_inputNodeRequest, ::octaneapi::ApiNode_inputNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_inputNode_, context, request, response);
}

void ApiNodeService::Stub::async::inputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeRequest* request, ::octaneapi::ApiNode_inputNodeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_inputNodeRequest, ::octaneapi::ApiNode_inputNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_inputNode_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::inputNode(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeRequest* request, ::octaneapi::ApiNode_inputNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_inputNode_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_inputNodeResponse>* ApiNodeService::Stub::PrepareAsyncinputNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_inputNodeResponse, ::octaneapi::ApiNode_inputNodeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_inputNode_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_inputNodeResponse>* ApiNodeService::Stub::AsyncinputNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinputNodeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::inputNode1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNode1Request& request, ::octaneapi::ApiNode_inputNode1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_inputNode1Request, ::octaneapi::ApiNode_inputNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_inputNode1_, context, request, response);
}

void ApiNodeService::Stub::async::inputNode1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNode1Request* request, ::octaneapi::ApiNode_inputNode1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_inputNode1Request, ::octaneapi::ApiNode_inputNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_inputNode1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::inputNode1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNode1Request* request, ::octaneapi::ApiNode_inputNode1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_inputNode1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_inputNode1Response>* ApiNodeService::Stub::PrepareAsyncinputNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNode1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_inputNode1Response, ::octaneapi::ApiNode_inputNode1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_inputNode1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_inputNode1Response>* ApiNodeService::Stub::AsyncinputNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNode1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinputNode1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::inputNodeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeIxRequest& request, ::octaneapi::ApiNode_inputNodeIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_inputNodeIxRequest, ::octaneapi::ApiNode_inputNodeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_inputNodeIx_, context, request, response);
}

void ApiNodeService::Stub::async::inputNodeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeIxRequest* request, ::octaneapi::ApiNode_inputNodeIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_inputNodeIxRequest, ::octaneapi::ApiNode_inputNodeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_inputNodeIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::inputNodeIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeIxRequest* request, ::octaneapi::ApiNode_inputNodeIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_inputNodeIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_inputNodeIxResponse>* ApiNodeService::Stub::PrepareAsyncinputNodeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_inputNodeIxResponse, ::octaneapi::ApiNode_inputNodeIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_inputNodeIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_inputNodeIxResponse>* ApiNodeService::Stub::AsyncinputNodeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_inputNodeIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinputNodeIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::destinationNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNode_destinationNodesRequest& request, ::octaneapi::ApiNode_destinationNodesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_destinationNodesRequest, ::octaneapi::ApiNode_destinationNodesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destinationNodes_, context, request, response);
}

void ApiNodeService::Stub::async::destinationNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNode_destinationNodesRequest* request, ::octaneapi::ApiNode_destinationNodesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_destinationNodesRequest, ::octaneapi::ApiNode_destinationNodesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destinationNodes_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::destinationNodes(::grpc::ClientContext* context, const ::octaneapi::ApiNode_destinationNodesRequest* request, ::octaneapi::ApiNode_destinationNodesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destinationNodes_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_destinationNodesResponse>* ApiNodeService::Stub::PrepareAsyncdestinationNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_destinationNodesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_destinationNodesResponse, ::octaneapi::ApiNode_destinationNodesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destinationNodes_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_destinationNodesResponse>* ApiNodeService::Stub::AsyncdestinationNodesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_destinationNodesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestinationNodesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::buildLinkerNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest& request, ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest, ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_buildLinkerNodePinInfo_, context, request, response);
}

void ApiNodeService::Stub::async::buildLinkerNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest* request, ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest, ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_buildLinkerNodePinInfo_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::buildLinkerNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest* request, ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_buildLinkerNodePinInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse>* ApiNodeService::Stub::PrepareAsyncbuildLinkerNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse, ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_buildLinkerNodePinInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse>* ApiNodeService::Stub::AsyncbuildLinkerNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncbuildLinkerNodePinInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::buildDestinationPinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildDestinationPinInfoRequest& request, ::octaneapi::ApiNode_buildDestinationPinInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_buildDestinationPinInfoRequest, ::octaneapi::ApiNode_buildDestinationPinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_buildDestinationPinInfo_, context, request, response);
}

void ApiNodeService::Stub::async::buildDestinationPinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildDestinationPinInfoRequest* request, ::octaneapi::ApiNode_buildDestinationPinInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_buildDestinationPinInfoRequest, ::octaneapi::ApiNode_buildDestinationPinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_buildDestinationPinInfo_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::buildDestinationPinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildDestinationPinInfoRequest* request, ::octaneapi::ApiNode_buildDestinationPinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_buildDestinationPinInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_buildDestinationPinInfoResponse>* ApiNodeService::Stub::PrepareAsyncbuildDestinationPinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildDestinationPinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_buildDestinationPinInfoResponse, ::octaneapi::ApiNode_buildDestinationPinInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_buildDestinationPinInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_buildDestinationPinInfoResponse>* ApiNodeService::Stub::AsyncbuildDestinationPinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_buildDestinationPinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncbuildDestinationPinInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::ownedItem(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemRequest& request, ::octaneapi::ApiNode_ownedItemResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_ownedItemRequest, ::octaneapi::ApiNode_ownedItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ownedItem_, context, request, response);
}

void ApiNodeService::Stub::async::ownedItem(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemRequest* request, ::octaneapi::ApiNode_ownedItemResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_ownedItemRequest, ::octaneapi::ApiNode_ownedItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ownedItem_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::ownedItem(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemRequest* request, ::octaneapi::ApiNode_ownedItemResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ownedItem_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_ownedItemResponse>* ApiNodeService::Stub::PrepareAsyncownedItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_ownedItemResponse, ::octaneapi::ApiNode_ownedItemRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ownedItem_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_ownedItemResponse>* ApiNodeService::Stub::AsyncownedItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncownedItemRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::ownedItem1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItem1Request& request, ::octaneapi::ApiNode_ownedItem1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_ownedItem1Request, ::octaneapi::ApiNode_ownedItem1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ownedItem1_, context, request, response);
}

void ApiNodeService::Stub::async::ownedItem1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItem1Request* request, ::octaneapi::ApiNode_ownedItem1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_ownedItem1Request, ::octaneapi::ApiNode_ownedItem1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ownedItem1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::ownedItem1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItem1Request* request, ::octaneapi::ApiNode_ownedItem1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ownedItem1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_ownedItem1Response>* ApiNodeService::Stub::PrepareAsyncownedItem1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItem1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_ownedItem1Response, ::octaneapi::ApiNode_ownedItem1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ownedItem1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_ownedItem1Response>* ApiNodeService::Stub::AsyncownedItem1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItem1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncownedItem1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::ownedItemIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemIxRequest& request, ::octaneapi::ApiNode_ownedItemIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_ownedItemIxRequest, ::octaneapi::ApiNode_ownedItemIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ownedItemIx_, context, request, response);
}

void ApiNodeService::Stub::async::ownedItemIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemIxRequest* request, ::octaneapi::ApiNode_ownedItemIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_ownedItemIxRequest, ::octaneapi::ApiNode_ownedItemIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ownedItemIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::ownedItemIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemIxRequest* request, ::octaneapi::ApiNode_ownedItemIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ownedItemIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_ownedItemIxResponse>* ApiNodeService::Stub::PrepareAsyncownedItemIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_ownedItemIxResponse, ::octaneapi::ApiNode_ownedItemIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ownedItemIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_ownedItemIxResponse>* ApiNodeService::Stub::AsyncownedItemIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_ownedItemIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncownedItemIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::createInternal(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalRequest& request, ::octaneapi::ApiNode_createInternalResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_createInternalRequest, ::octaneapi::ApiNode_createInternalResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createInternal_, context, request, response);
}

void ApiNodeService::Stub::async::createInternal(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalRequest* request, ::octaneapi::ApiNode_createInternalResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_createInternalRequest, ::octaneapi::ApiNode_createInternalResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::createInternal(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalRequest* request, ::octaneapi::ApiNode_createInternalResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternalResponse>* ApiNodeService::Stub::PrepareAsynccreateInternalRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_createInternalResponse, ::octaneapi::ApiNode_createInternalRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createInternal_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternalResponse>* ApiNodeService::Stub::AsynccreateInternalRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateInternalRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::createInternal1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal1Request& request, ::octaneapi::ApiNode_createInternal1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_createInternal1Request, ::octaneapi::ApiNode_createInternal1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createInternal1_, context, request, response);
}

void ApiNodeService::Stub::async::createInternal1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal1Request* request, ::octaneapi::ApiNode_createInternal1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_createInternal1Request, ::octaneapi::ApiNode_createInternal1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::createInternal1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal1Request* request, ::octaneapi::ApiNode_createInternal1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternal1Response>* ApiNodeService::Stub::PrepareAsynccreateInternal1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_createInternal1Response, ::octaneapi::ApiNode_createInternal1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createInternal1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternal1Response>* ApiNodeService::Stub::AsynccreateInternal1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateInternal1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::createInternalIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIxRequest& request, ::octaneapi::ApiNode_createInternalIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_createInternalIxRequest, ::octaneapi::ApiNode_createInternalIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createInternalIx_, context, request, response);
}

void ApiNodeService::Stub::async::createInternalIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIxRequest* request, ::octaneapi::ApiNode_createInternalIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_createInternalIxRequest, ::octaneapi::ApiNode_createInternalIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternalIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::createInternalIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIxRequest* request, ::octaneapi::ApiNode_createInternalIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternalIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternalIxResponse>* ApiNodeService::Stub::PrepareAsynccreateInternalIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_createInternalIxResponse, ::octaneapi::ApiNode_createInternalIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createInternalIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternalIxResponse>* ApiNodeService::Stub::AsynccreateInternalIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateInternalIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::createInternal2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal2Request& request, ::octaneapi::ApiNode_createInternal2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_createInternal2Request, ::octaneapi::ApiNode_createInternal2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createInternal2_, context, request, response);
}

void ApiNodeService::Stub::async::createInternal2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal2Request* request, ::octaneapi::ApiNode_createInternal2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_createInternal2Request, ::octaneapi::ApiNode_createInternal2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal2_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::createInternal2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal2Request* request, ::octaneapi::ApiNode_createInternal2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternal2Response>* ApiNodeService::Stub::PrepareAsynccreateInternal2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_createInternal2Response, ::octaneapi::ApiNode_createInternal2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createInternal2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternal2Response>* ApiNodeService::Stub::AsynccreateInternal2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateInternal2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::createInternal3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal3Request& request, ::octaneapi::ApiNode_createInternal3Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_createInternal3Request, ::octaneapi::ApiNode_createInternal3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createInternal3_, context, request, response);
}

void ApiNodeService::Stub::async::createInternal3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal3Request* request, ::octaneapi::ApiNode_createInternal3Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_createInternal3Request, ::octaneapi::ApiNode_createInternal3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal3_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::createInternal3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal3Request* request, ::octaneapi::ApiNode_createInternal3Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternal3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternal3Response>* ApiNodeService::Stub::PrepareAsynccreateInternal3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_createInternal3Response, ::octaneapi::ApiNode_createInternal3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createInternal3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternal3Response>* ApiNodeService::Stub::AsynccreateInternal3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternal3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateInternal3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::createInternalIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIx1Request& request, ::octaneapi::ApiNode_createInternalIx1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_createInternalIx1Request, ::octaneapi::ApiNode_createInternalIx1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createInternalIx1_, context, request, response);
}

void ApiNodeService::Stub::async::createInternalIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIx1Request* request, ::octaneapi::ApiNode_createInternalIx1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_createInternalIx1Request, ::octaneapi::ApiNode_createInternalIx1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternalIx1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::createInternalIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIx1Request* request, ::octaneapi::ApiNode_createInternalIx1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createInternalIx1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternalIx1Response>* ApiNodeService::Stub::PrepareAsynccreateInternalIx1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIx1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_createInternalIx1Response, ::octaneapi::ApiNode_createInternalIx1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createInternalIx1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_createInternalIx1Response>* ApiNodeService::Stub::AsynccreateInternalIx1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_createInternalIx1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateInternalIx1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::copyFrom(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromRequest& request, ::octaneapi::ApiNode_copyFromResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_copyFromRequest, ::octaneapi::ApiNode_copyFromResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_copyFrom_, context, request, response);
}

void ApiNodeService::Stub::async::copyFrom(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromRequest* request, ::octaneapi::ApiNode_copyFromResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_copyFromRequest, ::octaneapi::ApiNode_copyFromResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyFrom_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::copyFrom(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromRequest* request, ::octaneapi::ApiNode_copyFromResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyFrom_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_copyFromResponse>* ApiNodeService::Stub::PrepareAsynccopyFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_copyFromResponse, ::octaneapi::ApiNode_copyFromRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_copyFrom_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_copyFromResponse>* ApiNodeService::Stub::AsynccopyFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccopyFromRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFrom1Request& request, ::octaneapi::ApiNode_copyFrom1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_copyFrom1Request, ::octaneapi::ApiNode_copyFrom1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_copyFrom1_, context, request, response);
}

void ApiNodeService::Stub::async::copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFrom1Request* request, ::octaneapi::ApiNode_copyFrom1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_copyFrom1Request, ::octaneapi::ApiNode_copyFrom1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyFrom1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::copyFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFrom1Request* request, ::octaneapi::ApiNode_copyFrom1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyFrom1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_copyFrom1Response>* ApiNodeService::Stub::PrepareAsynccopyFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFrom1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_copyFrom1Response, ::octaneapi::ApiNode_copyFrom1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_copyFrom1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_copyFrom1Response>* ApiNodeService::Stub::AsynccopyFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFrom1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccopyFrom1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::copyFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromIxRequest& request, ::octaneapi::ApiNode_copyFromIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_copyFromIxRequest, ::octaneapi::ApiNode_copyFromIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_copyFromIx_, context, request, response);
}

void ApiNodeService::Stub::async::copyFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromIxRequest* request, ::octaneapi::ApiNode_copyFromIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_copyFromIxRequest, ::octaneapi::ApiNode_copyFromIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyFromIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::copyFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromIxRequest* request, ::octaneapi::ApiNode_copyFromIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_copyFromIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_copyFromIxResponse>* ApiNodeService::Stub::PrepareAsynccopyFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_copyFromIxResponse, ::octaneapi::ApiNode_copyFromIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_copyFromIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_copyFromIxResponse>* ApiNodeService::Stub::AsynccopyFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_copyFromIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccopyFromIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinBool(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolRequest& request, ::octaneapi::ApiNode_getPinBoolResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinBoolRequest, ::octaneapi::ApiNode_getPinBoolResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinBool_, context, request, response);
}

void ApiNodeService::Stub::async::getPinBool(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolRequest* request, ::octaneapi::ApiNode_getPinBoolResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinBoolRequest, ::octaneapi::ApiNode_getPinBoolResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinBool_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinBool(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolRequest* request, ::octaneapi::ApiNode_getPinBoolResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinBool_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinBoolResponse>* ApiNodeService::Stub::PrepareAsyncgetPinBoolRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinBoolResponse, ::octaneapi::ApiNode_getPinBoolRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinBool_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinBoolResponse>* ApiNodeService::Stub::AsyncgetPinBoolRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinBoolRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatRequest& request, ::octaneapi::ApiNode_getPinFloatResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloatRequest, ::octaneapi::ApiNode_getPinFloatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatRequest* request, ::octaneapi::ApiNode_getPinFloatResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloatRequest, ::octaneapi::ApiNode_getPinFloatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatRequest* request, ::octaneapi::ApiNode_getPinFloatResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloatResponse>* ApiNodeService::Stub::PrepareAsyncgetPinFloatRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloatResponse, ::octaneapi::ApiNode_getPinFloatRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloatResponse>* ApiNodeService::Stub::AsyncgetPinFloatRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloatRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2Request& request, ::octaneapi::ApiNode_getPinFloat2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat2Request, ::octaneapi::ApiNode_getPinFloat2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat2_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2Request* request, ::octaneapi::ApiNode_getPinFloat2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat2Request, ::octaneapi::ApiNode_getPinFloat2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat2_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2Request* request, ::octaneapi::ApiNode_getPinFloat2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat2Response>* ApiNodeService::Stub::PrepareAsyncgetPinFloat2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat2Response, ::octaneapi::ApiNode_getPinFloat2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat2Response>* ApiNodeService::Stub::AsyncgetPinFloat2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3Request& request, ::octaneapi::ApiNode_getPinFloat3Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat3Request, ::octaneapi::ApiNode_getPinFloat3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat3_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3Request* request, ::octaneapi::ApiNode_getPinFloat3Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat3Request, ::octaneapi::ApiNode_getPinFloat3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat3_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3Request* request, ::octaneapi::ApiNode_getPinFloat3Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat3Response>* ApiNodeService::Stub::PrepareAsyncgetPinFloat3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat3Response, ::octaneapi::ApiNode_getPinFloat3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat3Response>* ApiNodeService::Stub::AsyncgetPinFloat3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4Request& request, ::octaneapi::ApiNode_getPinFloat4Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat4Request, ::octaneapi::ApiNode_getPinFloat4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat4_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4Request* request, ::octaneapi::ApiNode_getPinFloat4Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat4Request, ::octaneapi::ApiNode_getPinFloat4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat4_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4Request* request, ::octaneapi::ApiNode_getPinFloat4Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat4_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat4Response>* ApiNodeService::Stub::PrepareAsyncgetPinFloat4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat4Response, ::octaneapi::ApiNode_getPinFloat4Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat4_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat4Response>* ApiNodeService::Stub::AsyncgetPinFloat4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat4Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntRequest& request, ::octaneapi::ApiNode_getPinIntResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinIntRequest, ::octaneapi::ApiNode_getPinIntResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntRequest* request, ::octaneapi::ApiNode_getPinIntResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinIntRequest, ::octaneapi::ApiNode_getPinIntResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntRequest* request, ::octaneapi::ApiNode_getPinIntResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinIntResponse>* ApiNodeService::Stub::PrepareAsyncgetPinIntRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinIntResponse, ::octaneapi::ApiNode_getPinIntRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinIntResponse>* ApiNodeService::Stub::AsyncgetPinIntRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinIntRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2Request& request, ::octaneapi::ApiNode_getPinInt2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt2Request, ::octaneapi::ApiNode_getPinInt2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt2_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2Request* request, ::octaneapi::ApiNode_getPinInt2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt2Request, ::octaneapi::ApiNode_getPinInt2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt2_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2Request* request, ::octaneapi::ApiNode_getPinInt2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt2Response>* ApiNodeService::Stub::PrepareAsyncgetPinInt2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt2Response, ::octaneapi::ApiNode_getPinInt2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt2Response>* ApiNodeService::Stub::AsyncgetPinInt2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3Request& request, ::octaneapi::ApiNode_getPinInt3Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt3Request, ::octaneapi::ApiNode_getPinInt3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt3_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3Request* request, ::octaneapi::ApiNode_getPinInt3Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt3Request, ::octaneapi::ApiNode_getPinInt3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt3_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3Request* request, ::octaneapi::ApiNode_getPinInt3Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt3Response>* ApiNodeService::Stub::PrepareAsyncgetPinInt3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt3Response, ::octaneapi::ApiNode_getPinInt3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt3Response>* ApiNodeService::Stub::AsyncgetPinInt3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4Request& request, ::octaneapi::ApiNode_getPinInt4Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt4Request, ::octaneapi::ApiNode_getPinInt4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt4_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4Request* request, ::octaneapi::ApiNode_getPinInt4Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt4Request, ::octaneapi::ApiNode_getPinInt4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt4_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4Request* request, ::octaneapi::ApiNode_getPinInt4Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt4_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt4Response>* ApiNodeService::Stub::PrepareAsyncgetPinInt4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt4Response, ::octaneapi::ApiNode_getPinInt4Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt4_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt4Response>* ApiNodeService::Stub::AsyncgetPinInt4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt4Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinMatrix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixRequest& request, ::octaneapi::ApiNode_getPinMatrixResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinMatrixRequest, ::octaneapi::ApiNode_getPinMatrixResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinMatrix_, context, request, response);
}

void ApiNodeService::Stub::async::getPinMatrix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixRequest* request, ::octaneapi::ApiNode_getPinMatrixResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinMatrixRequest, ::octaneapi::ApiNode_getPinMatrixResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinMatrix_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinMatrix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixRequest* request, ::octaneapi::ApiNode_getPinMatrixResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinMatrix_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinMatrixResponse>* ApiNodeService::Stub::PrepareAsyncgetPinMatrixRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinMatrixResponse, ::octaneapi::ApiNode_getPinMatrixRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinMatrix_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinMatrixResponse>* ApiNodeService::Stub::AsyncgetPinMatrixRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinMatrixRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinString(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringRequest& request, ::octaneapi::ApiNode_getPinStringResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinStringRequest, ::octaneapi::ApiNode_getPinStringResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinString_, context, request, response);
}

void ApiNodeService::Stub::async::getPinString(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringRequest* request, ::octaneapi::ApiNode_getPinStringResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinStringRequest, ::octaneapi::ApiNode_getPinStringResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinString_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinString(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringRequest* request, ::octaneapi::ApiNode_getPinStringResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinString_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinStringResponse>* ApiNodeService::Stub::PrepareAsyncgetPinStringRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinStringResponse, ::octaneapi::ApiNode_getPinStringRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinString_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinStringResponse>* ApiNodeService::Stub::AsyncgetPinStringRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinStringRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFilePath(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathRequest& request, ::octaneapi::ApiNode_getPinFilePathResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFilePathRequest, ::octaneapi::ApiNode_getPinFilePathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFilePath_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFilePath(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathRequest* request, ::octaneapi::ApiNode_getPinFilePathResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFilePathRequest, ::octaneapi::ApiNode_getPinFilePathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFilePath_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFilePath(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathRequest* request, ::octaneapi::ApiNode_getPinFilePathResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFilePath_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFilePathResponse>* ApiNodeService::Stub::PrepareAsyncgetPinFilePathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFilePathResponse, ::octaneapi::ApiNode_getPinFilePathRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFilePath_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFilePathResponse>* ApiNodeService::Stub::AsyncgetPinFilePathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFilePathRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinBool1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBool1Request& request, ::octaneapi::ApiNode_getPinBool1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinBool1Request, ::octaneapi::ApiNode_getPinBool1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinBool1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinBool1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBool1Request* request, ::octaneapi::ApiNode_getPinBool1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinBool1Request, ::octaneapi::ApiNode_getPinBool1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinBool1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinBool1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBool1Request* request, ::octaneapi::ApiNode_getPinBool1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinBool1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinBool1Response>* ApiNodeService::Stub::PrepareAsyncgetPinBool1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBool1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinBool1Response, ::octaneapi::ApiNode_getPinBool1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinBool1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinBool1Response>* ApiNodeService::Stub::AsyncgetPinBool1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBool1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinBool1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat1Request& request, ::octaneapi::ApiNode_getPinFloat1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat1Request, ::octaneapi::ApiNode_getPinFloat1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat1Request* request, ::octaneapi::ApiNode_getPinFloat1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat1Request, ::octaneapi::ApiNode_getPinFloat1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat1Request* request, ::octaneapi::ApiNode_getPinFloat1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat1Response>* ApiNodeService::Stub::PrepareAsyncgetPinFloat1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat1Response, ::octaneapi::ApiNode_getPinFloat1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat1Response>* ApiNodeService::Stub::AsyncgetPinFloat1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat21Request& request, ::octaneapi::ApiNode_getPinFloat21Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat21Request, ::octaneapi::ApiNode_getPinFloat21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat21_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat21Request* request, ::octaneapi::ApiNode_getPinFloat21Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat21Request, ::octaneapi::ApiNode_getPinFloat21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat21_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat21Request* request, ::octaneapi::ApiNode_getPinFloat21Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat21_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat21Response>* ApiNodeService::Stub::PrepareAsyncgetPinFloat21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat21Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat21Response, ::octaneapi::ApiNode_getPinFloat21Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat21_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat21Response>* ApiNodeService::Stub::AsyncgetPinFloat21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat21Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat21Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat31(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat31Request& request, ::octaneapi::ApiNode_getPinFloat31Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat31Request, ::octaneapi::ApiNode_getPinFloat31Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat31_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat31(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat31Request* request, ::octaneapi::ApiNode_getPinFloat31Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat31Request, ::octaneapi::ApiNode_getPinFloat31Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat31_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat31(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat31Request* request, ::octaneapi::ApiNode_getPinFloat31Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat31_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat31Response>* ApiNodeService::Stub::PrepareAsyncgetPinFloat31Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat31Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat31Response, ::octaneapi::ApiNode_getPinFloat31Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat31_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat31Response>* ApiNodeService::Stub::AsyncgetPinFloat31Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat31Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat31Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat41(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat41Request& request, ::octaneapi::ApiNode_getPinFloat41Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat41Request, ::octaneapi::ApiNode_getPinFloat41Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat41_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat41(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat41Request* request, ::octaneapi::ApiNode_getPinFloat41Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat41Request, ::octaneapi::ApiNode_getPinFloat41Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat41_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat41(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat41Request* request, ::octaneapi::ApiNode_getPinFloat41Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat41_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat41Response>* ApiNodeService::Stub::PrepareAsyncgetPinFloat41Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat41Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat41Response, ::octaneapi::ApiNode_getPinFloat41Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat41_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat41Response>* ApiNodeService::Stub::AsyncgetPinFloat41Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat41Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat41Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt1Request& request, ::octaneapi::ApiNode_getPinInt1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt1Request, ::octaneapi::ApiNode_getPinInt1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt1Request* request, ::octaneapi::ApiNode_getPinInt1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt1Request, ::octaneapi::ApiNode_getPinInt1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt1Request* request, ::octaneapi::ApiNode_getPinInt1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt1Response>* ApiNodeService::Stub::PrepareAsyncgetPinInt1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt1Response, ::octaneapi::ApiNode_getPinInt1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt1Response>* ApiNodeService::Stub::AsyncgetPinInt1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt21Request& request, ::octaneapi::ApiNode_getPinInt21Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt21Request, ::octaneapi::ApiNode_getPinInt21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt21_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt21Request* request, ::octaneapi::ApiNode_getPinInt21Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt21Request, ::octaneapi::ApiNode_getPinInt21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt21_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt21Request* request, ::octaneapi::ApiNode_getPinInt21Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt21_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt21Response>* ApiNodeService::Stub::PrepareAsyncgetPinInt21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt21Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt21Response, ::octaneapi::ApiNode_getPinInt21Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt21_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt21Response>* ApiNodeService::Stub::AsyncgetPinInt21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt21Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt21Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt31(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt31Request& request, ::octaneapi::ApiNode_getPinInt31Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt31Request, ::octaneapi::ApiNode_getPinInt31Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt31_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt31(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt31Request* request, ::octaneapi::ApiNode_getPinInt31Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt31Request, ::octaneapi::ApiNode_getPinInt31Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt31_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt31(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt31Request* request, ::octaneapi::ApiNode_getPinInt31Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt31_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt31Response>* ApiNodeService::Stub::PrepareAsyncgetPinInt31Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt31Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt31Response, ::octaneapi::ApiNode_getPinInt31Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt31_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt31Response>* ApiNodeService::Stub::AsyncgetPinInt31Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt31Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt31Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt41(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt41Request& request, ::octaneapi::ApiNode_getPinInt41Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt41Request, ::octaneapi::ApiNode_getPinInt41Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt41_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt41(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt41Request* request, ::octaneapi::ApiNode_getPinInt41Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt41Request, ::octaneapi::ApiNode_getPinInt41Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt41_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt41(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt41Request* request, ::octaneapi::ApiNode_getPinInt41Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt41_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt41Response>* ApiNodeService::Stub::PrepareAsyncgetPinInt41Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt41Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt41Response, ::octaneapi::ApiNode_getPinInt41Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt41_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt41Response>* ApiNodeService::Stub::AsyncgetPinInt41Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt41Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt41Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinMatrix1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrix1Request& request, ::octaneapi::ApiNode_getPinMatrix1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinMatrix1Request, ::octaneapi::ApiNode_getPinMatrix1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinMatrix1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinMatrix1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrix1Request* request, ::octaneapi::ApiNode_getPinMatrix1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinMatrix1Request, ::octaneapi::ApiNode_getPinMatrix1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinMatrix1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinMatrix1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrix1Request* request, ::octaneapi::ApiNode_getPinMatrix1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinMatrix1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinMatrix1Response>* ApiNodeService::Stub::PrepareAsyncgetPinMatrix1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrix1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinMatrix1Response, ::octaneapi::ApiNode_getPinMatrix1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinMatrix1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinMatrix1Response>* ApiNodeService::Stub::AsyncgetPinMatrix1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrix1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinMatrix1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinString1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinString1Request& request, ::octaneapi::ApiNode_getPinString1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinString1Request, ::octaneapi::ApiNode_getPinString1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinString1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinString1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinString1Request* request, ::octaneapi::ApiNode_getPinString1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinString1Request, ::octaneapi::ApiNode_getPinString1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinString1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinString1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinString1Request* request, ::octaneapi::ApiNode_getPinString1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinString1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinString1Response>* ApiNodeService::Stub::PrepareAsyncgetPinString1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinString1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinString1Response, ::octaneapi::ApiNode_getPinString1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinString1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinString1Response>* ApiNodeService::Stub::AsyncgetPinString1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinString1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinString1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFilePath1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePath1Request& request, ::octaneapi::ApiNode_getPinFilePath1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFilePath1Request, ::octaneapi::ApiNode_getPinFilePath1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFilePath1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFilePath1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePath1Request* request, ::octaneapi::ApiNode_getPinFilePath1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFilePath1Request, ::octaneapi::ApiNode_getPinFilePath1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFilePath1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFilePath1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePath1Request* request, ::octaneapi::ApiNode_getPinFilePath1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFilePath1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFilePath1Response>* ApiNodeService::Stub::PrepareAsyncgetPinFilePath1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePath1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFilePath1Response, ::octaneapi::ApiNode_getPinFilePath1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFilePath1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFilePath1Response>* ApiNodeService::Stub::AsyncgetPinFilePath1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePath1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFilePath1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinBoolIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolIxRequest& request, ::octaneapi::ApiNode_getPinBoolIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinBoolIxRequest, ::octaneapi::ApiNode_getPinBoolIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinBoolIx_, context, request, response);
}

void ApiNodeService::Stub::async::getPinBoolIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolIxRequest* request, ::octaneapi::ApiNode_getPinBoolIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinBoolIxRequest, ::octaneapi::ApiNode_getPinBoolIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinBoolIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinBoolIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolIxRequest* request, ::octaneapi::ApiNode_getPinBoolIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinBoolIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinBoolIxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinBoolIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinBoolIxResponse, ::octaneapi::ApiNode_getPinBoolIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinBoolIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinBoolIxResponse>* ApiNodeService::Stub::AsyncgetPinBoolIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinBoolIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinBoolIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloatIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatIxRequest& request, ::octaneapi::ApiNode_getPinFloatIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloatIxRequest, ::octaneapi::ApiNode_getPinFloatIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloatIx_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloatIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatIxRequest* request, ::octaneapi::ApiNode_getPinFloatIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloatIxRequest, ::octaneapi::ApiNode_getPinFloatIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloatIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloatIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatIxRequest* request, ::octaneapi::ApiNode_getPinFloatIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloatIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloatIxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinFloatIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloatIxResponse, ::octaneapi::ApiNode_getPinFloatIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloatIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloatIxResponse>* ApiNodeService::Stub::AsyncgetPinFloatIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloatIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloatIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat2Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2IxRequest& request, ::octaneapi::ApiNode_getPinFloat2IxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat2IxRequest, ::octaneapi::ApiNode_getPinFloat2IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat2Ix_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat2Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2IxRequest* request, ::octaneapi::ApiNode_getPinFloat2IxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat2IxRequest, ::octaneapi::ApiNode_getPinFloat2IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat2Ix_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat2Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2IxRequest* request, ::octaneapi::ApiNode_getPinFloat2IxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat2Ix_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat2IxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinFloat2IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2IxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat2IxResponse, ::octaneapi::ApiNode_getPinFloat2IxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat2Ix_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat2IxResponse>* ApiNodeService::Stub::AsyncgetPinFloat2IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat2IxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat2IxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat3Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3IxRequest& request, ::octaneapi::ApiNode_getPinFloat3IxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat3IxRequest, ::octaneapi::ApiNode_getPinFloat3IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat3Ix_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat3Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3IxRequest* request, ::octaneapi::ApiNode_getPinFloat3IxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat3IxRequest, ::octaneapi::ApiNode_getPinFloat3IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat3Ix_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat3Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3IxRequest* request, ::octaneapi::ApiNode_getPinFloat3IxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat3Ix_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat3IxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinFloat3IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3IxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat3IxResponse, ::octaneapi::ApiNode_getPinFloat3IxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat3Ix_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat3IxResponse>* ApiNodeService::Stub::AsyncgetPinFloat3IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat3IxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat3IxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFloat4Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4IxRequest& request, ::octaneapi::ApiNode_getPinFloat4IxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFloat4IxRequest, ::octaneapi::ApiNode_getPinFloat4IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFloat4Ix_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFloat4Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4IxRequest* request, ::octaneapi::ApiNode_getPinFloat4IxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFloat4IxRequest, ::octaneapi::ApiNode_getPinFloat4IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat4Ix_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFloat4Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4IxRequest* request, ::octaneapi::ApiNode_getPinFloat4IxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFloat4Ix_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat4IxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinFloat4IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4IxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFloat4IxResponse, ::octaneapi::ApiNode_getPinFloat4IxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFloat4Ix_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFloat4IxResponse>* ApiNodeService::Stub::AsyncgetPinFloat4IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFloat4IxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFloat4IxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinIntIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntIxRequest& request, ::octaneapi::ApiNode_getPinIntIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinIntIxRequest, ::octaneapi::ApiNode_getPinIntIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinIntIx_, context, request, response);
}

void ApiNodeService::Stub::async::getPinIntIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntIxRequest* request, ::octaneapi::ApiNode_getPinIntIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinIntIxRequest, ::octaneapi::ApiNode_getPinIntIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinIntIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinIntIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntIxRequest* request, ::octaneapi::ApiNode_getPinIntIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinIntIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinIntIxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinIntIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinIntIxResponse, ::octaneapi::ApiNode_getPinIntIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinIntIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinIntIxResponse>* ApiNodeService::Stub::AsyncgetPinIntIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinIntIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinIntIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt2Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2IxRequest& request, ::octaneapi::ApiNode_getPinInt2IxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt2IxRequest, ::octaneapi::ApiNode_getPinInt2IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt2Ix_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt2Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2IxRequest* request, ::octaneapi::ApiNode_getPinInt2IxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt2IxRequest, ::octaneapi::ApiNode_getPinInt2IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt2Ix_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt2Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2IxRequest* request, ::octaneapi::ApiNode_getPinInt2IxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt2Ix_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt2IxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinInt2IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2IxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt2IxResponse, ::octaneapi::ApiNode_getPinInt2IxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt2Ix_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt2IxResponse>* ApiNodeService::Stub::AsyncgetPinInt2IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt2IxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt2IxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt3Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3IxRequest& request, ::octaneapi::ApiNode_getPinInt3IxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt3IxRequest, ::octaneapi::ApiNode_getPinInt3IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt3Ix_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt3Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3IxRequest* request, ::octaneapi::ApiNode_getPinInt3IxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt3IxRequest, ::octaneapi::ApiNode_getPinInt3IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt3Ix_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt3Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3IxRequest* request, ::octaneapi::ApiNode_getPinInt3IxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt3Ix_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt3IxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinInt3IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3IxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt3IxResponse, ::octaneapi::ApiNode_getPinInt3IxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt3Ix_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt3IxResponse>* ApiNodeService::Stub::AsyncgetPinInt3IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt3IxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt3IxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinInt4Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4IxRequest& request, ::octaneapi::ApiNode_getPinInt4IxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinInt4IxRequest, ::octaneapi::ApiNode_getPinInt4IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinInt4Ix_, context, request, response);
}

void ApiNodeService::Stub::async::getPinInt4Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4IxRequest* request, ::octaneapi::ApiNode_getPinInt4IxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinInt4IxRequest, ::octaneapi::ApiNode_getPinInt4IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt4Ix_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinInt4Ix(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4IxRequest* request, ::octaneapi::ApiNode_getPinInt4IxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinInt4Ix_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt4IxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinInt4IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4IxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinInt4IxResponse, ::octaneapi::ApiNode_getPinInt4IxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinInt4Ix_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinInt4IxResponse>* ApiNodeService::Stub::AsyncgetPinInt4IxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinInt4IxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinInt4IxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinMatrixIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixIxRequest& request, ::octaneapi::ApiNode_getPinMatrixIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinMatrixIxRequest, ::octaneapi::ApiNode_getPinMatrixIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinMatrixIx_, context, request, response);
}

void ApiNodeService::Stub::async::getPinMatrixIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixIxRequest* request, ::octaneapi::ApiNode_getPinMatrixIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinMatrixIxRequest, ::octaneapi::ApiNode_getPinMatrixIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinMatrixIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinMatrixIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixIxRequest* request, ::octaneapi::ApiNode_getPinMatrixIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinMatrixIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinMatrixIxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinMatrixIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinMatrixIxResponse, ::octaneapi::ApiNode_getPinMatrixIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinMatrixIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinMatrixIxResponse>* ApiNodeService::Stub::AsyncgetPinMatrixIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinMatrixIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinMatrixIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinStringIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringIxRequest& request, ::octaneapi::ApiNode_getPinStringIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinStringIxRequest, ::octaneapi::ApiNode_getPinStringIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinStringIx_, context, request, response);
}

void ApiNodeService::Stub::async::getPinStringIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringIxRequest* request, ::octaneapi::ApiNode_getPinStringIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinStringIxRequest, ::octaneapi::ApiNode_getPinStringIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinStringIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinStringIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringIxRequest* request, ::octaneapi::ApiNode_getPinStringIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinStringIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinStringIxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinStringIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinStringIxResponse, ::octaneapi::ApiNode_getPinStringIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinStringIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinStringIxResponse>* ApiNodeService::Stub::AsyncgetPinStringIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinStringIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinStringIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinFilePathIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathIxRequest& request, ::octaneapi::ApiNode_getPinFilePathIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinFilePathIxRequest, ::octaneapi::ApiNode_getPinFilePathIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinFilePathIx_, context, request, response);
}

void ApiNodeService::Stub::async::getPinFilePathIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathIxRequest* request, ::octaneapi::ApiNode_getPinFilePathIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinFilePathIxRequest, ::octaneapi::ApiNode_getPinFilePathIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFilePathIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinFilePathIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathIxRequest* request, ::octaneapi::ApiNode_getPinFilePathIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinFilePathIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFilePathIxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinFilePathIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinFilePathIxResponse, ::octaneapi::ApiNode_getPinFilePathIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinFilePathIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinFilePathIxResponse>* ApiNodeService::Stub::AsyncgetPinFilePathIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinFilePathIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinFilePathIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueRequest& request, ::octaneapi::ApiNode_getPinValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueRequest, ::octaneapi::ApiNode_getPinValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueRequest* request, ::octaneapi::ApiNode_getPinValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueRequest, ::octaneapi::ApiNode_getPinValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueRequest* request, ::octaneapi::ApiNode_getPinValueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueResponse>* ApiNodeService::Stub::PrepareAsyncgetPinValueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueResponse, ::octaneapi::ApiNode_getPinValueRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueResponse>* ApiNodeService::Stub::AsyncgetPinValueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue1Request& request, ::octaneapi::ApiNode_getPinValue1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue1Request, ::octaneapi::ApiNode_getPinValue1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue1Request* request, ::octaneapi::ApiNode_getPinValue1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue1Request, ::octaneapi::ApiNode_getPinValue1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue1Request* request, ::octaneapi::ApiNode_getPinValue1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue1Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue1Response, ::octaneapi::ApiNode_getPinValue1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue1Response>* ApiNodeService::Stub::AsyncgetPinValue1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue2Request& request, ::octaneapi::ApiNode_getPinValue2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue2Request, ::octaneapi::ApiNode_getPinValue2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue2_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue2Request* request, ::octaneapi::ApiNode_getPinValue2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue2Request, ::octaneapi::ApiNode_getPinValue2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue2_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue2Request* request, ::octaneapi::ApiNode_getPinValue2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue2Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue2Response, ::octaneapi::ApiNode_getPinValue2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue2Response>* ApiNodeService::Stub::AsyncgetPinValue2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue3Request& request, ::octaneapi::ApiNode_getPinValue3Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue3Request, ::octaneapi::ApiNode_getPinValue3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue3_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue3Request* request, ::octaneapi::ApiNode_getPinValue3Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue3Request, ::octaneapi::ApiNode_getPinValue3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue3_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue3Request* request, ::octaneapi::ApiNode_getPinValue3Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue3Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue3Response, ::octaneapi::ApiNode_getPinValue3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue3Response>* ApiNodeService::Stub::AsyncgetPinValue3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue4Request& request, ::octaneapi::ApiNode_getPinValue4Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue4Request, ::octaneapi::ApiNode_getPinValue4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue4_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue4Request* request, ::octaneapi::ApiNode_getPinValue4Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue4Request, ::octaneapi::ApiNode_getPinValue4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue4_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue4Request* request, ::octaneapi::ApiNode_getPinValue4Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue4_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue4Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue4Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue4Response, ::octaneapi::ApiNode_getPinValue4Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue4_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue4Response>* ApiNodeService::Stub::AsyncgetPinValue4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue4Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue4Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue5Request& request, ::octaneapi::ApiNode_getPinValue5Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue5Request, ::octaneapi::ApiNode_getPinValue5Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue5_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue5Request* request, ::octaneapi::ApiNode_getPinValue5Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue5Request, ::octaneapi::ApiNode_getPinValue5Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue5_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue5Request* request, ::octaneapi::ApiNode_getPinValue5Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue5_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue5Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue5Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue5Response, ::octaneapi::ApiNode_getPinValue5Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue5_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue5Response>* ApiNodeService::Stub::AsyncgetPinValue5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue5Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue5Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue6Request& request, ::octaneapi::ApiNode_getPinValue6Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue6Request, ::octaneapi::ApiNode_getPinValue6Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue6_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue6Request* request, ::octaneapi::ApiNode_getPinValue6Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue6Request, ::octaneapi::ApiNode_getPinValue6Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue6_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue6Request* request, ::octaneapi::ApiNode_getPinValue6Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue6_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue6Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue6Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue6Response, ::octaneapi::ApiNode_getPinValue6Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue6_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue6Response>* ApiNodeService::Stub::AsyncgetPinValue6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue6Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue6Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue7Request& request, ::octaneapi::ApiNode_getPinValue7Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue7Request, ::octaneapi::ApiNode_getPinValue7Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue7_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue7Request* request, ::octaneapi::ApiNode_getPinValue7Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue7Request, ::octaneapi::ApiNode_getPinValue7Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue7_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue7Request* request, ::octaneapi::ApiNode_getPinValue7Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue7_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue7Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue7Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue7Response, ::octaneapi::ApiNode_getPinValue7Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue7_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue7Response>* ApiNodeService::Stub::AsyncgetPinValue7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue7Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue7Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue8Request& request, ::octaneapi::ApiNode_getPinValue8Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue8Request, ::octaneapi::ApiNode_getPinValue8Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue8_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue8Request* request, ::octaneapi::ApiNode_getPinValue8Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue8Request, ::octaneapi::ApiNode_getPinValue8Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue8_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue8Request* request, ::octaneapi::ApiNode_getPinValue8Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue8_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue8Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue8Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue8Response, ::octaneapi::ApiNode_getPinValue8Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue8_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue8Response>* ApiNodeService::Stub::AsyncgetPinValue8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue8Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue8Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue9Request& request, ::octaneapi::ApiNode_getPinValue9Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue9Request, ::octaneapi::ApiNode_getPinValue9Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue9_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue9Request* request, ::octaneapi::ApiNode_getPinValue9Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue9Request, ::octaneapi::ApiNode_getPinValue9Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue9_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue9Request* request, ::octaneapi::ApiNode_getPinValue9Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue9_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue9Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue9Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue9Response, ::octaneapi::ApiNode_getPinValue9Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue9_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue9Response>* ApiNodeService::Stub::AsyncgetPinValue9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue9Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue9Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue10Request& request, ::octaneapi::ApiNode_getPinValue10Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue10Request, ::octaneapi::ApiNode_getPinValue10Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue10_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue10Request* request, ::octaneapi::ApiNode_getPinValue10Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue10Request, ::octaneapi::ApiNode_getPinValue10Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue10_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue10Request* request, ::octaneapi::ApiNode_getPinValue10Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue10_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue10Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue10Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue10Response, ::octaneapi::ApiNode_getPinValue10Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue10_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue10Response>* ApiNodeService::Stub::AsyncgetPinValue10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue10Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue10Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue11Request& request, ::octaneapi::ApiNode_getPinValue11Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue11Request, ::octaneapi::ApiNode_getPinValue11Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue11_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue11Request* request, ::octaneapi::ApiNode_getPinValue11Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue11Request, ::octaneapi::ApiNode_getPinValue11Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue11_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue11Request* request, ::octaneapi::ApiNode_getPinValue11Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue11_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue11Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue11Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue11Response, ::octaneapi::ApiNode_getPinValue11Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue11_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue11Response>* ApiNodeService::Stub::AsyncgetPinValue11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue11Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue11Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue12(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue12Request& request, ::octaneapi::ApiNode_getPinValue12Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue12Request, ::octaneapi::ApiNode_getPinValue12Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue12_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue12(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue12Request* request, ::octaneapi::ApiNode_getPinValue12Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue12Request, ::octaneapi::ApiNode_getPinValue12Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue12_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue12(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue12Request* request, ::octaneapi::ApiNode_getPinValue12Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue12_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue12Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue12Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue12Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue12Response, ::octaneapi::ApiNode_getPinValue12Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue12_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue12Response>* ApiNodeService::Stub::AsyncgetPinValue12Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue12Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue12Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue13(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue13Request& request, ::octaneapi::ApiNode_getPinValue13Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue13Request, ::octaneapi::ApiNode_getPinValue13Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue13_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue13(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue13Request* request, ::octaneapi::ApiNode_getPinValue13Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue13Request, ::octaneapi::ApiNode_getPinValue13Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue13_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue13(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue13Request* request, ::octaneapi::ApiNode_getPinValue13Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue13_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue13Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue13Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue13Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue13Response, ::octaneapi::ApiNode_getPinValue13Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue13_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue13Response>* ApiNodeService::Stub::AsyncgetPinValue13Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue13Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue13Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue14(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue14Request& request, ::octaneapi::ApiNode_getPinValue14Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue14Request, ::octaneapi::ApiNode_getPinValue14Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue14_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue14(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue14Request* request, ::octaneapi::ApiNode_getPinValue14Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue14Request, ::octaneapi::ApiNode_getPinValue14Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue14_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue14(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue14Request* request, ::octaneapi::ApiNode_getPinValue14Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue14_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue14Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue14Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue14Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue14Response, ::octaneapi::ApiNode_getPinValue14Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue14_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue14Response>* ApiNodeService::Stub::AsyncgetPinValue14Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue14Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue14Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue15(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue15Request& request, ::octaneapi::ApiNode_getPinValue15Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue15Request, ::octaneapi::ApiNode_getPinValue15Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue15_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue15(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue15Request* request, ::octaneapi::ApiNode_getPinValue15Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue15Request, ::octaneapi::ApiNode_getPinValue15Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue15_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue15(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue15Request* request, ::octaneapi::ApiNode_getPinValue15Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue15_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue15Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue15Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue15Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue15Response, ::octaneapi::ApiNode_getPinValue15Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue15_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue15Response>* ApiNodeService::Stub::AsyncgetPinValue15Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue15Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue15Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue16(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue16Request& request, ::octaneapi::ApiNode_getPinValue16Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue16Request, ::octaneapi::ApiNode_getPinValue16Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue16_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue16(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue16Request* request, ::octaneapi::ApiNode_getPinValue16Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue16Request, ::octaneapi::ApiNode_getPinValue16Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue16_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue16(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue16Request* request, ::octaneapi::ApiNode_getPinValue16Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue16_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue16Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue16Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue16Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue16Response, ::octaneapi::ApiNode_getPinValue16Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue16_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue16Response>* ApiNodeService::Stub::AsyncgetPinValue16Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue16Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue16Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue17(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue17Request& request, ::octaneapi::ApiNode_getPinValue17Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue17Request, ::octaneapi::ApiNode_getPinValue17Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue17_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue17(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue17Request* request, ::octaneapi::ApiNode_getPinValue17Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue17Request, ::octaneapi::ApiNode_getPinValue17Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue17_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue17(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue17Request* request, ::octaneapi::ApiNode_getPinValue17Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue17_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue17Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue17Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue17Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue17Response, ::octaneapi::ApiNode_getPinValue17Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue17_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue17Response>* ApiNodeService::Stub::AsyncgetPinValue17Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue17Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue17Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue18(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue18Request& request, ::octaneapi::ApiNode_getPinValue18Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue18Request, ::octaneapi::ApiNode_getPinValue18Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue18_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue18(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue18Request* request, ::octaneapi::ApiNode_getPinValue18Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue18Request, ::octaneapi::ApiNode_getPinValue18Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue18_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue18(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue18Request* request, ::octaneapi::ApiNode_getPinValue18Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue18_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue18Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue18Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue18Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue18Response, ::octaneapi::ApiNode_getPinValue18Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue18_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue18Response>* ApiNodeService::Stub::AsyncgetPinValue18Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue18Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue18Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue19(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue19Request& request, ::octaneapi::ApiNode_getPinValue19Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue19Request, ::octaneapi::ApiNode_getPinValue19Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue19_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue19(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue19Request* request, ::octaneapi::ApiNode_getPinValue19Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue19Request, ::octaneapi::ApiNode_getPinValue19Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue19_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue19(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue19Request* request, ::octaneapi::ApiNode_getPinValue19Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue19_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue19Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue19Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue19Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue19Response, ::octaneapi::ApiNode_getPinValue19Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue19_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue19Response>* ApiNodeService::Stub::AsyncgetPinValue19Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue19Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue19Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue20(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue20Request& request, ::octaneapi::ApiNode_getPinValue20Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue20Request, ::octaneapi::ApiNode_getPinValue20Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue20_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue20(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue20Request* request, ::octaneapi::ApiNode_getPinValue20Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue20Request, ::octaneapi::ApiNode_getPinValue20Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue20_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue20(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue20Request* request, ::octaneapi::ApiNode_getPinValue20Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue20_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue20Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue20Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue20Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue20Response, ::octaneapi::ApiNode_getPinValue20Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue20_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue20Response>* ApiNodeService::Stub::AsyncgetPinValue20Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue20Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue20Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue21Request& request, ::octaneapi::ApiNode_getPinValue21Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue21Request, ::octaneapi::ApiNode_getPinValue21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue21_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue21Request* request, ::octaneapi::ApiNode_getPinValue21Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue21Request, ::octaneapi::ApiNode_getPinValue21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue21_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue21Request* request, ::octaneapi::ApiNode_getPinValue21Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue21_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue21Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue21Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue21Response, ::octaneapi::ApiNode_getPinValue21Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue21_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue21Response>* ApiNodeService::Stub::AsyncgetPinValue21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue21Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue21Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue22(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue22Request& request, ::octaneapi::ApiNode_getPinValue22Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue22Request, ::octaneapi::ApiNode_getPinValue22Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue22_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue22(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue22Request* request, ::octaneapi::ApiNode_getPinValue22Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue22Request, ::octaneapi::ApiNode_getPinValue22Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue22_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue22(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue22Request* request, ::octaneapi::ApiNode_getPinValue22Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue22_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue22Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue22Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue22Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue22Response, ::octaneapi::ApiNode_getPinValue22Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue22_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue22Response>* ApiNodeService::Stub::AsyncgetPinValue22Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue22Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue22Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValue23(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue23Request& request, ::octaneapi::ApiNode_getPinValue23Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValue23Request, ::octaneapi::ApiNode_getPinValue23Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValue23_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValue23(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue23Request* request, ::octaneapi::ApiNode_getPinValue23Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValue23Request, ::octaneapi::ApiNode_getPinValue23Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue23_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValue23(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue23Request* request, ::octaneapi::ApiNode_getPinValue23Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValue23_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue23Response>* ApiNodeService::Stub::PrepareAsyncgetPinValue23Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue23Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValue23Response, ::octaneapi::ApiNode_getPinValue23Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValue23_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValue23Response>* ApiNodeService::Stub::AsyncgetPinValue23Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValue23Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValue23Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIxRequest& request, ::octaneapi::ApiNode_getPinValueIxResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIxRequest, ::octaneapi::ApiNode_getPinValueIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIxRequest* request, ::octaneapi::ApiNode_getPinValueIxResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIxRequest, ::octaneapi::ApiNode_getPinValueIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIxRequest* request, ::octaneapi::ApiNode_getPinValueIxResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIxResponse>* ApiNodeService::Stub::PrepareAsyncgetPinValueIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIxResponse, ::octaneapi::ApiNode_getPinValueIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIxResponse>* ApiNodeService::Stub::AsyncgetPinValueIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx1Request& request, ::octaneapi::ApiNode_getPinValueIx1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx1Request, ::octaneapi::ApiNode_getPinValueIx1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx1_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx1Request* request, ::octaneapi::ApiNode_getPinValueIx1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx1Request, ::octaneapi::ApiNode_getPinValueIx1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx1Request* request, ::octaneapi::ApiNode_getPinValueIx1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx1Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx1Response, ::octaneapi::ApiNode_getPinValueIx1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx1Response>* ApiNodeService::Stub::AsyncgetPinValueIx1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx2Request& request, ::octaneapi::ApiNode_getPinValueIx2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx2Request, ::octaneapi::ApiNode_getPinValueIx2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx2_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx2Request* request, ::octaneapi::ApiNode_getPinValueIx2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx2Request, ::octaneapi::ApiNode_getPinValueIx2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx2_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx2Request* request, ::octaneapi::ApiNode_getPinValueIx2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx2Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx2Response, ::octaneapi::ApiNode_getPinValueIx2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx2Response>* ApiNodeService::Stub::AsyncgetPinValueIx2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx3Request& request, ::octaneapi::ApiNode_getPinValueIx3Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx3Request, ::octaneapi::ApiNode_getPinValueIx3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx3_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx3Request* request, ::octaneapi::ApiNode_getPinValueIx3Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx3Request, ::octaneapi::ApiNode_getPinValueIx3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx3_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx3Request* request, ::octaneapi::ApiNode_getPinValueIx3Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx3Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx3Response, ::octaneapi::ApiNode_getPinValueIx3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx3Response>* ApiNodeService::Stub::AsyncgetPinValueIx3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx4Request& request, ::octaneapi::ApiNode_getPinValueIx4Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx4Request, ::octaneapi::ApiNode_getPinValueIx4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx4_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx4Request* request, ::octaneapi::ApiNode_getPinValueIx4Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx4Request, ::octaneapi::ApiNode_getPinValueIx4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx4_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx4Request* request, ::octaneapi::ApiNode_getPinValueIx4Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx4_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx4Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx4Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx4Response, ::octaneapi::ApiNode_getPinValueIx4Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx4_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx4Response>* ApiNodeService::Stub::AsyncgetPinValueIx4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx4Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx4Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx5Request& request, ::octaneapi::ApiNode_getPinValueIx5Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx5Request, ::octaneapi::ApiNode_getPinValueIx5Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx5_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx5Request* request, ::octaneapi::ApiNode_getPinValueIx5Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx5Request, ::octaneapi::ApiNode_getPinValueIx5Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx5_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx5Request* request, ::octaneapi::ApiNode_getPinValueIx5Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx5_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx5Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx5Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx5Response, ::octaneapi::ApiNode_getPinValueIx5Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx5_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx5Response>* ApiNodeService::Stub::AsyncgetPinValueIx5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx5Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx5Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx6Request& request, ::octaneapi::ApiNode_getPinValueIx6Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx6Request, ::octaneapi::ApiNode_getPinValueIx6Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx6_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx6Request* request, ::octaneapi::ApiNode_getPinValueIx6Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx6Request, ::octaneapi::ApiNode_getPinValueIx6Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx6_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx6Request* request, ::octaneapi::ApiNode_getPinValueIx6Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx6_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx6Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx6Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx6Response, ::octaneapi::ApiNode_getPinValueIx6Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx6_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx6Response>* ApiNodeService::Stub::AsyncgetPinValueIx6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx6Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx6Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx7Request& request, ::octaneapi::ApiNode_getPinValueIx7Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx7Request, ::octaneapi::ApiNode_getPinValueIx7Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx7_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx7Request* request, ::octaneapi::ApiNode_getPinValueIx7Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx7Request, ::octaneapi::ApiNode_getPinValueIx7Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx7_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx7Request* request, ::octaneapi::ApiNode_getPinValueIx7Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx7_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx7Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx7Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx7Response, ::octaneapi::ApiNode_getPinValueIx7Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx7_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx7Response>* ApiNodeService::Stub::AsyncgetPinValueIx7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx7Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx7Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx8Request& request, ::octaneapi::ApiNode_getPinValueIx8Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx8Request, ::octaneapi::ApiNode_getPinValueIx8Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx8_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx8Request* request, ::octaneapi::ApiNode_getPinValueIx8Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx8Request, ::octaneapi::ApiNode_getPinValueIx8Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx8_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx8Request* request, ::octaneapi::ApiNode_getPinValueIx8Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx8_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx8Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx8Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx8Response, ::octaneapi::ApiNode_getPinValueIx8Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx8_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx8Response>* ApiNodeService::Stub::AsyncgetPinValueIx8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx8Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx8Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx9Request& request, ::octaneapi::ApiNode_getPinValueIx9Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx9Request, ::octaneapi::ApiNode_getPinValueIx9Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx9_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx9Request* request, ::octaneapi::ApiNode_getPinValueIx9Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx9Request, ::octaneapi::ApiNode_getPinValueIx9Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx9_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx9Request* request, ::octaneapi::ApiNode_getPinValueIx9Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx9_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx9Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx9Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx9Response, ::octaneapi::ApiNode_getPinValueIx9Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx9_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx9Response>* ApiNodeService::Stub::AsyncgetPinValueIx9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx9Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx9Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx10Request& request, ::octaneapi::ApiNode_getPinValueIx10Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx10Request, ::octaneapi::ApiNode_getPinValueIx10Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx10_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx10Request* request, ::octaneapi::ApiNode_getPinValueIx10Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx10Request, ::octaneapi::ApiNode_getPinValueIx10Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx10_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx10Request* request, ::octaneapi::ApiNode_getPinValueIx10Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx10_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx10Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx10Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx10Response, ::octaneapi::ApiNode_getPinValueIx10Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx10_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx10Response>* ApiNodeService::Stub::AsyncgetPinValueIx10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx10Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx10Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::getPinValueIx11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx11Request& request, ::octaneapi::ApiNode_getPinValueIx11Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_getPinValueIx11Request, ::octaneapi::ApiNode_getPinValueIx11Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getPinValueIx11_, context, request, response);
}

void ApiNodeService::Stub::async::getPinValueIx11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx11Request* request, ::octaneapi::ApiNode_getPinValueIx11Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_getPinValueIx11Request, ::octaneapi::ApiNode_getPinValueIx11Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx11_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::getPinValueIx11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx11Request* request, ::octaneapi::ApiNode_getPinValueIx11Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getPinValueIx11_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx11Response>* ApiNodeService::Stub::PrepareAsyncgetPinValueIx11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx11Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_getPinValueIx11Response, ::octaneapi::ApiNode_getPinValueIx11Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getPinValueIx11_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_getPinValueIx11Response>* ApiNodeService::Stub::AsyncgetPinValueIx11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_getPinValueIx11Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetPinValueIx11Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue1Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue1_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue2Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue2_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue2_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue3Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue3Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue3_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue3Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue3Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue3_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue3Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue4Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue4Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue4_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue4Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue4Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue4_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue4Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue4_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue4Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue4Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue4_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue4Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue4Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue5Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue5Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue5_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue5Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue5Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue5_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue5Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue5_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue5Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue5Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue5_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue5Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue5Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue6Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue6Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue6_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue6Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue6Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue6_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue6Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue6_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue6Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue6Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue6_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue6Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue6Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue7Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue7Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue7_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue7Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue7Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue7_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue7Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue7_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue7Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue7Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue7_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue7Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue7Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue8Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue8Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue8_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue8Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue8Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue8_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue8Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue8_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue8Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue8Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue8_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue8Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue8Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue9Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue9Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue9_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue9Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue9Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue9_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue9Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue9_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue9Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue9Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue9_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue9Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue9Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue10Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue10Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue10_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue10Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue10Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue10_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue10Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue10_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue10Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue10Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue10_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue10Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue10Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue11Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue11Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue11_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue11Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue11Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue11_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue11Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue11_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue11Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue11Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue11_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue11Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue11Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue12(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue12Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue12Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue12_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue12(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue12Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue12Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue12_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue12(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue12Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue12_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue12Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue12Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue12Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue12_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue12Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue12Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue12Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue13(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue13Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue13Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue13_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue13(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue13Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue13Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue13_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue13(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue13Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue13_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue13Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue13Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue13Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue13_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue13Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue13Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue13Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue14(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue14Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue14Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue14_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue14(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue14Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue14Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue14_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue14(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue14Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue14_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue14Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue14Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue14Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue14_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue14Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue14Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue14Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue15(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue15Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue15Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue15_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue15(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue15Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue15Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue15_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue15(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue15Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue15_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue15Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue15Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue15Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue15_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue15Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue15Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue15Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue16(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue16Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue16Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue16_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue16(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue16Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue16Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue16_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue16(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue16Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue16_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue16Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue16Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue16Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue16_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue16Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue16Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue16Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue17(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue17Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue17Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue17_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue17(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue17Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue17Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue17_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue17(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue17Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue17_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue17Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue17Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue17Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue17_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue17Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue17Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue17Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue18(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue18Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue18Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue18_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue18(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue18Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue18Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue18_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue18(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue18Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue18_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue18Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue18Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue18Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue18_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue18Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue18Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue18Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue19(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue19Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue19Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue19_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue19(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue19Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue19Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue19_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue19(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue19Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue19_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue19Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue19Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue19Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue19_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue19Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue19Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue19Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue20(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue20Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue20Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue20_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue20(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue20Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue20Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue20_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue20(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue20Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue20_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue20Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue20Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue20Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue20_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue20Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue20Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue20Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue21Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue21Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue21_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue21Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue21Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue21_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue21(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue21Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue21_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue21Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue21Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue21_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue21Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue21Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue21Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue22(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue22Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue22Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue22_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue22(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue22Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue22Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue22_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue22(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue22Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue22_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue22Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue22Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue22Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue22_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue22Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue22Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue22Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValue23(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue23Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValue23Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValue23_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValue23(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue23Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValue23Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue23_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValue23(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue23Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValue23_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValue23Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue23Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValue23Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValue23_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValue23Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValue23Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValue23Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIxRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIxRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIxRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIxRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIxRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx1Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx1_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx1_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx1(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx2Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx2_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx2_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx2(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx3Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx3Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx3_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx3Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx3Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx3_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx3(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx3Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx3Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx4Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx4Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx4_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx4Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx4Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx4_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx4(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx4Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx4_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx4Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx4Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx4_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx4Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx4Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx4Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx5Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx5Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx5_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx5Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx5Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx5_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx5(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx5Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx5_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx5Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx5Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx5_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx5Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx5Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx5Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx6Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx6Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx6_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx6Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx6Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx6_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx6(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx6Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx6_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx6Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx6Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx6_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx6Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx6Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx6Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx7Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx7Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx7_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx7Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx7Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx7_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx7(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx7Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx7_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx7Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx7Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx7_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx7Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx7Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx7Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx8Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx8Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx8_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx8Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx8Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx8_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx8(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx8Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx8_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx8Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx8Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx8_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx8Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx8Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx8Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx9Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx9Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx9_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx9Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx9Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx9_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx9(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx9Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx9_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx9Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx9Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx9_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx9Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx9Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx9Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx10Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx10Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx10_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx10Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx10Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx10_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx10(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx10Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx10_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx10Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx10Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx10_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx10Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx10Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx10Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::setPinValueIx11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx11Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_setPinValueIx11Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setPinValueIx11_, context, request, response);
}

void ApiNodeService::Stub::async::setPinValueIx11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx11Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_setPinValueIx11Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx11_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::setPinValueIx11(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx11Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setPinValueIx11_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncsetPinValueIx11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx11Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_setPinValueIx11Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setPinValueIx11_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncsetPinValueIx11Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_setPinValueIx11Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetPinValueIx11Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::storeToDb(::grpc::ClientContext* context, const ::octaneapi::ApiNode_storeToDbRequest& request, ::octaneapi::ApiNode_storeToDbResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_storeToDbRequest, ::octaneapi::ApiNode_storeToDbResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_storeToDb_, context, request, response);
}

void ApiNodeService::Stub::async::storeToDb(::grpc::ClientContext* context, const ::octaneapi::ApiNode_storeToDbRequest* request, ::octaneapi::ApiNode_storeToDbResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_storeToDbRequest, ::octaneapi::ApiNode_storeToDbResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_storeToDb_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::storeToDb(::grpc::ClientContext* context, const ::octaneapi::ApiNode_storeToDbRequest* request, ::octaneapi::ApiNode_storeToDbResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_storeToDb_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_storeToDbResponse>* ApiNodeService::Stub::PrepareAsyncstoreToDbRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_storeToDbRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_storeToDbResponse, ::octaneapi::ApiNode_storeToDbRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_storeToDb_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_storeToDbResponse>* ApiNodeService::Stub::AsyncstoreToDbRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_storeToDbRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstoreToDbRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::showOslWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNode_showOslWindowRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_showOslWindowRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_showOslWindow_, context, request, response);
}

void ApiNodeService::Stub::async::showOslWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNode_showOslWindowRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_showOslWindowRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showOslWindow_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::showOslWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNode_showOslWindowRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_showOslWindow_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::PrepareAsyncshowOslWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_showOslWindowRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNode_showOslWindowRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_showOslWindow_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeService::Stub::AsyncshowOslWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_showOslWindowRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncshowOslWindowRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::closeOslWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNode_closeOslWindowRequest& request, ::octaneapi::ApiNode_closeOslWindowResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_closeOslWindowRequest, ::octaneapi::ApiNode_closeOslWindowResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_closeOslWindow_, context, request, response);
}

void ApiNodeService::Stub::async::closeOslWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNode_closeOslWindowRequest* request, ::octaneapi::ApiNode_closeOslWindowResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_closeOslWindowRequest, ::octaneapi::ApiNode_closeOslWindowResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_closeOslWindow_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::closeOslWindow(::grpc::ClientContext* context, const ::octaneapi::ApiNode_closeOslWindowRequest* request, ::octaneapi::ApiNode_closeOslWindowResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_closeOslWindow_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_closeOslWindowResponse>* ApiNodeService::Stub::PrepareAsynccloseOslWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_closeOslWindowRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_closeOslWindowResponse, ::octaneapi::ApiNode_closeOslWindowRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_closeOslWindow_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_closeOslWindowResponse>* ApiNodeService::Stub::AsynccloseOslWindowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_closeOslWindowRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccloseOslWindowRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeService::Stub::unpackFileData(::grpc::ClientContext* context, const ::octaneapi::ApiNode_unpackFileDataRequest& request, ::octaneapi::ApiNode_unpackFileDataResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNode_unpackFileDataRequest, ::octaneapi::ApiNode_unpackFileDataResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_unpackFileData_, context, request, response);
}

void ApiNodeService::Stub::async::unpackFileData(::grpc::ClientContext* context, const ::octaneapi::ApiNode_unpackFileDataRequest* request, ::octaneapi::ApiNode_unpackFileDataResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNode_unpackFileDataRequest, ::octaneapi::ApiNode_unpackFileDataResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_unpackFileData_, context, request, response, std::move(f));
}

void ApiNodeService::Stub::async::unpackFileData(::grpc::ClientContext* context, const ::octaneapi::ApiNode_unpackFileDataRequest* request, ::octaneapi::ApiNode_unpackFileDataResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_unpackFileData_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_unpackFileDataResponse>* ApiNodeService::Stub::PrepareAsyncunpackFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_unpackFileDataRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNode_unpackFileDataResponse, ::octaneapi::ApiNode_unpackFileDataRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_unpackFileData_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNode_unpackFileDataResponse>* ApiNodeService::Stub::AsyncunpackFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNode_unpackFileDataRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncunpackFileDataRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiNodeService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_createRequest, ::octaneapi::ApiNode_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_createRequest* req,
             ::octaneapi::ApiNode_createResponse* resp) {
               return service->create(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_addDynamicPinForLoadingRequest, ::octaneapi::ApiNode_addDynamicPinForLoadingResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_addDynamicPinForLoadingRequest* req,
             ::octaneapi::ApiNode_addDynamicPinForLoadingResponse* resp) {
               return service->addDynamicPinForLoading(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_infoRequest, ::octaneapi::ApiNode_infoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_infoRequest* req,
             ::octaneapi::ApiNode_infoResponse* resp) {
               return service->info(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_typeRequest, ::octaneapi::ApiNode_typeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_typeRequest* req,
             ::octaneapi::ApiNode_typeResponse* resp) {
               return service->type(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_outputTextureValueTypeRequest, ::octaneapi::ApiNode_outputTextureValueTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_outputTextureValueTypeRequest* req,
             ::octaneapi::ApiNode_outputTextureValueTypeResponse* resp) {
               return service->outputTextureValueType(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setTextureTypeConfigurationRequest, ::octaneapi::ApiNode_setTextureTypeConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setTextureTypeConfigurationRequest* req,
             ::octaneapi::ApiNode_setTextureTypeConfigurationResponse* resp) {
               return service->setTextureTypeConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_configureEmptyPinsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_configureEmptyPinsRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->configureEmptyPins(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinCountRequest, ::octaneapi::ApiNode_pinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinCountRequest* req,
             ::octaneapi::ApiNode_pinCountResponse* resp) {
               return service->pinCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_staticPinCountRequest, ::octaneapi::ApiNode_staticPinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_staticPinCountRequest* req,
             ::octaneapi::ApiNode_staticPinCountResponse* resp) {
               return service->staticPinCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_dynPinCountRequest, ::octaneapi::ApiNode_dynPinCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_dynPinCountRequest* req,
             ::octaneapi::ApiNode_dynPinCountResponse* resp) {
               return service->dynPinCount(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_hasPinRequest, ::octaneapi::ApiNode_hasPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_hasPinRequest* req,
             ::octaneapi::ApiNode_hasPinResponse* resp) {
               return service->hasPin(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_hasPin1Request, ::octaneapi::ApiNode_hasPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_hasPin1Request* req,
             ::octaneapi::ApiNode_hasPin1Response* resp) {
               return service->hasPin1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_hasPinIxRequest, ::octaneapi::ApiNode_hasPinIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_hasPinIxRequest* req,
             ::octaneapi::ApiNode_hasPinIxResponse* resp) {
               return service->hasPinIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_findPinRequest, ::octaneapi::ApiNode_findPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_findPinRequest* req,
             ::octaneapi::ApiNode_findPinResponse* resp) {
               return service->findPin(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_findPin1Request, ::octaneapi::ApiNode_findPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_findPin1Request* req,
             ::octaneapi::ApiNode_findPin1Response* resp) {
               return service->findPin1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinIdRequest, ::octaneapi::ApiNode_pinIdResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinIdRequest* req,
             ::octaneapi::ApiNode_pinIdResponse* resp) {
               return service->pinId(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinIdIxRequest, ::octaneapi::ApiNode_pinIdIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinIdIxRequest* req,
             ::octaneapi::ApiNode_pinIdIxResponse* resp) {
               return service->pinIdIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinNameRequest, ::octaneapi::ApiNode_pinNameResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinNameRequest* req,
             ::octaneapi::ApiNode_pinNameResponse* resp) {
               return service->pinName(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinNameIxRequest, ::octaneapi::ApiNode_pinNameIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinNameIxRequest* req,
             ::octaneapi::ApiNode_pinNameIxResponse* resp) {
               return service->pinNameIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinLabelRequest, ::octaneapi::ApiNode_pinLabelResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinLabelRequest* req,
             ::octaneapi::ApiNode_pinLabelResponse* resp) {
               return service->pinLabel(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinLabel1Request, ::octaneapi::ApiNode_pinLabel1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinLabel1Request* req,
             ::octaneapi::ApiNode_pinLabel1Response* resp) {
               return service->pinLabel1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinLabelIxRequest, ::octaneapi::ApiNode_pinLabelIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinLabelIxRequest* req,
             ::octaneapi::ApiNode_pinLabelIxResponse* resp) {
               return service->pinLabelIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinTypeRequest, ::octaneapi::ApiNode_pinTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinTypeRequest* req,
             ::octaneapi::ApiNode_pinTypeResponse* resp) {
               return service->pinType(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinType1Request, ::octaneapi::ApiNode_pinType1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinType1Request* req,
             ::octaneapi::ApiNode_pinType1Response* resp) {
               return service->pinType1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinTypeIxRequest, ::octaneapi::ApiNode_pinTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinTypeIxRequest* req,
             ::octaneapi::ApiNode_pinTypeIxResponse* resp) {
               return service->pinTypeIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinTextureValueTypeRequest, ::octaneapi::ApiNode_pinTextureValueTypeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinTextureValueTypeRequest* req,
             ::octaneapi::ApiNode_pinTextureValueTypeResponse* resp) {
               return service->pinTextureValueType(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[26],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinTextureValueTypeIxRequest, ::octaneapi::ApiNode_pinTextureValueTypeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinTextureValueTypeIxRequest* req,
             ::octaneapi::ApiNode_pinTextureValueTypeIxResponse* resp) {
               return service->pinTextureValueTypeIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[27],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinInfoRequest, ::octaneapi::ApiNode_pinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinInfoRequest* req,
             ::octaneapi::ApiNode_pinInfoResponse* resp) {
               return service->pinInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[28],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinInfo1Request, ::octaneapi::ApiNode_pinInfo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinInfo1Request* req,
             ::octaneapi::ApiNode_pinInfo1Response* resp) {
               return service->pinInfo1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[29],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinInfoIxRequest, ::octaneapi::ApiNode_pinInfoIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinInfoIxRequest* req,
             ::octaneapi::ApiNode_pinInfoIxResponse* resp) {
               return service->pinInfoIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[30],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_pinsAreDirtyRequest, ::octaneapi::ApiNode_pinsAreDirtyResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_pinsAreDirtyRequest* req,
             ::octaneapi::ApiNode_pinsAreDirtyResponse* resp) {
               return service->pinsAreDirty(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[31],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_isDirtyPinRequest, ::octaneapi::ApiNode_isDirtyPinResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_isDirtyPinRequest* req,
             ::octaneapi::ApiNode_isDirtyPinResponse* resp) {
               return service->isDirtyPin(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[32],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_isDirtyPin1Request, ::octaneapi::ApiNode_isDirtyPin1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_isDirtyPin1Request* req,
             ::octaneapi::ApiNode_isDirtyPin1Response* resp) {
               return service->isDirtyPin1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[33],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_isDirtyPinIxRequest, ::octaneapi::ApiNode_isDirtyPinIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_isDirtyPinIxRequest* req,
             ::octaneapi::ApiNode_isDirtyPinIxResponse* resp) {
               return service->isDirtyPinIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[34],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_canConnectToRequest, ::octaneapi::ApiNode_canConnectToResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_canConnectToRequest* req,
             ::octaneapi::ApiNode_canConnectToResponse* resp) {
               return service->canConnectTo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[35],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_canConnectTo1Request, ::octaneapi::ApiNode_canConnectTo1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_canConnectTo1Request* req,
             ::octaneapi::ApiNode_canConnectTo1Response* resp) {
               return service->canConnectTo1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[36],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_canConnectToIxRequest, ::octaneapi::ApiNode_canConnectToIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_canConnectToIxRequest* req,
             ::octaneapi::ApiNode_canConnectToIxResponse* resp) {
               return service->canConnectToIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[37],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_connectToRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_connectToRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->connectTo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[38],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_connectTo1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_connectTo1Request* req,
             ::google::protobuf::Empty* resp) {
               return service->connectTo1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[39],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_connectToIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_connectToIxRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->connectToIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[40],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_connectedNodeRequest, ::octaneapi::ApiNode_connectedNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_connectedNodeRequest* req,
             ::octaneapi::ApiNode_connectedNodeResponse* resp) {
               return service->connectedNode(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[41],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_connectedNode1Request, ::octaneapi::ApiNode_connectedNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_connectedNode1Request* req,
             ::octaneapi::ApiNode_connectedNode1Response* resp) {
               return service->connectedNode1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[42],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_connectedNodeIxRequest, ::octaneapi::ApiNode_connectedNodeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_connectedNodeIxRequest* req,
             ::octaneapi::ApiNode_connectedNodeIxResponse* resp) {
               return service->connectedNodeIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[43],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_inputNodeRequest, ::octaneapi::ApiNode_inputNodeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_inputNodeRequest* req,
             ::octaneapi::ApiNode_inputNodeResponse* resp) {
               return service->inputNode(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[44],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_inputNode1Request, ::octaneapi::ApiNode_inputNode1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_inputNode1Request* req,
             ::octaneapi::ApiNode_inputNode1Response* resp) {
               return service->inputNode1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[45],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_inputNodeIxRequest, ::octaneapi::ApiNode_inputNodeIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_inputNodeIxRequest* req,
             ::octaneapi::ApiNode_inputNodeIxResponse* resp) {
               return service->inputNodeIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[46],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_destinationNodesRequest, ::octaneapi::ApiNode_destinationNodesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_destinationNodesRequest* req,
             ::octaneapi::ApiNode_destinationNodesResponse* resp) {
               return service->destinationNodes(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[47],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest, ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest* req,
             ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse* resp) {
               return service->buildLinkerNodePinInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[48],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_buildDestinationPinInfoRequest, ::octaneapi::ApiNode_buildDestinationPinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_buildDestinationPinInfoRequest* req,
             ::octaneapi::ApiNode_buildDestinationPinInfoResponse* resp) {
               return service->buildDestinationPinInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[49],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_ownedItemRequest, ::octaneapi::ApiNode_ownedItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_ownedItemRequest* req,
             ::octaneapi::ApiNode_ownedItemResponse* resp) {
               return service->ownedItem(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[50],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_ownedItem1Request, ::octaneapi::ApiNode_ownedItem1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_ownedItem1Request* req,
             ::octaneapi::ApiNode_ownedItem1Response* resp) {
               return service->ownedItem1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[51],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_ownedItemIxRequest, ::octaneapi::ApiNode_ownedItemIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_ownedItemIxRequest* req,
             ::octaneapi::ApiNode_ownedItemIxResponse* resp) {
               return service->ownedItemIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[52],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_createInternalRequest, ::octaneapi::ApiNode_createInternalResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_createInternalRequest* req,
             ::octaneapi::ApiNode_createInternalResponse* resp) {
               return service->createInternal(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[53],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_createInternal1Request, ::octaneapi::ApiNode_createInternal1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_createInternal1Request* req,
             ::octaneapi::ApiNode_createInternal1Response* resp) {
               return service->createInternal1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[54],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_createInternalIxRequest, ::octaneapi::ApiNode_createInternalIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_createInternalIxRequest* req,
             ::octaneapi::ApiNode_createInternalIxResponse* resp) {
               return service->createInternalIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[55],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_createInternal2Request, ::octaneapi::ApiNode_createInternal2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_createInternal2Request* req,
             ::octaneapi::ApiNode_createInternal2Response* resp) {
               return service->createInternal2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[56],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_createInternal3Request, ::octaneapi::ApiNode_createInternal3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_createInternal3Request* req,
             ::octaneapi::ApiNode_createInternal3Response* resp) {
               return service->createInternal3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[57],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_createInternalIx1Request, ::octaneapi::ApiNode_createInternalIx1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_createInternalIx1Request* req,
             ::octaneapi::ApiNode_createInternalIx1Response* resp) {
               return service->createInternalIx1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[58],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_copyFromRequest, ::octaneapi::ApiNode_copyFromResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_copyFromRequest* req,
             ::octaneapi::ApiNode_copyFromResponse* resp) {
               return service->copyFrom(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[59],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_copyFrom1Request, ::octaneapi::ApiNode_copyFrom1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_copyFrom1Request* req,
             ::octaneapi::ApiNode_copyFrom1Response* resp) {
               return service->copyFrom1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[60],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_copyFromIxRequest, ::octaneapi::ApiNode_copyFromIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_copyFromIxRequest* req,
             ::octaneapi::ApiNode_copyFromIxResponse* resp) {
               return service->copyFromIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[61],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinBoolRequest, ::octaneapi::ApiNode_getPinBoolResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinBoolRequest* req,
             ::octaneapi::ApiNode_getPinBoolResponse* resp) {
               return service->getPinBool(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[62],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloatRequest, ::octaneapi::ApiNode_getPinFloatResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloatRequest* req,
             ::octaneapi::ApiNode_getPinFloatResponse* resp) {
               return service->getPinFloat(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[63],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat2Request, ::octaneapi::ApiNode_getPinFloat2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat2Request* req,
             ::octaneapi::ApiNode_getPinFloat2Response* resp) {
               return service->getPinFloat2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[64],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat3Request, ::octaneapi::ApiNode_getPinFloat3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat3Request* req,
             ::octaneapi::ApiNode_getPinFloat3Response* resp) {
               return service->getPinFloat3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[65],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat4Request, ::octaneapi::ApiNode_getPinFloat4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat4Request* req,
             ::octaneapi::ApiNode_getPinFloat4Response* resp) {
               return service->getPinFloat4(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[66],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinIntRequest, ::octaneapi::ApiNode_getPinIntResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinIntRequest* req,
             ::octaneapi::ApiNode_getPinIntResponse* resp) {
               return service->getPinInt(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[67],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt2Request, ::octaneapi::ApiNode_getPinInt2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt2Request* req,
             ::octaneapi::ApiNode_getPinInt2Response* resp) {
               return service->getPinInt2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[68],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt3Request, ::octaneapi::ApiNode_getPinInt3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt3Request* req,
             ::octaneapi::ApiNode_getPinInt3Response* resp) {
               return service->getPinInt3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[69],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt4Request, ::octaneapi::ApiNode_getPinInt4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt4Request* req,
             ::octaneapi::ApiNode_getPinInt4Response* resp) {
               return service->getPinInt4(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[70],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinMatrixRequest, ::octaneapi::ApiNode_getPinMatrixResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinMatrixRequest* req,
             ::octaneapi::ApiNode_getPinMatrixResponse* resp) {
               return service->getPinMatrix(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[71],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinStringRequest, ::octaneapi::ApiNode_getPinStringResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinStringRequest* req,
             ::octaneapi::ApiNode_getPinStringResponse* resp) {
               return service->getPinString(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[72],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFilePathRequest, ::octaneapi::ApiNode_getPinFilePathResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFilePathRequest* req,
             ::octaneapi::ApiNode_getPinFilePathResponse* resp) {
               return service->getPinFilePath(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[73],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinBool1Request, ::octaneapi::ApiNode_getPinBool1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinBool1Request* req,
             ::octaneapi::ApiNode_getPinBool1Response* resp) {
               return service->getPinBool1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[74],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat1Request, ::octaneapi::ApiNode_getPinFloat1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat1Request* req,
             ::octaneapi::ApiNode_getPinFloat1Response* resp) {
               return service->getPinFloat1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[75],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat21Request, ::octaneapi::ApiNode_getPinFloat21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat21Request* req,
             ::octaneapi::ApiNode_getPinFloat21Response* resp) {
               return service->getPinFloat21(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[76],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat31Request, ::octaneapi::ApiNode_getPinFloat31Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat31Request* req,
             ::octaneapi::ApiNode_getPinFloat31Response* resp) {
               return service->getPinFloat31(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[77],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat41Request, ::octaneapi::ApiNode_getPinFloat41Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat41Request* req,
             ::octaneapi::ApiNode_getPinFloat41Response* resp) {
               return service->getPinFloat41(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[78],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt1Request, ::octaneapi::ApiNode_getPinInt1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt1Request* req,
             ::octaneapi::ApiNode_getPinInt1Response* resp) {
               return service->getPinInt1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[79],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt21Request, ::octaneapi::ApiNode_getPinInt21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt21Request* req,
             ::octaneapi::ApiNode_getPinInt21Response* resp) {
               return service->getPinInt21(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[80],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt31Request, ::octaneapi::ApiNode_getPinInt31Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt31Request* req,
             ::octaneapi::ApiNode_getPinInt31Response* resp) {
               return service->getPinInt31(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[81],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt41Request, ::octaneapi::ApiNode_getPinInt41Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt41Request* req,
             ::octaneapi::ApiNode_getPinInt41Response* resp) {
               return service->getPinInt41(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[82],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinMatrix1Request, ::octaneapi::ApiNode_getPinMatrix1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinMatrix1Request* req,
             ::octaneapi::ApiNode_getPinMatrix1Response* resp) {
               return service->getPinMatrix1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[83],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinString1Request, ::octaneapi::ApiNode_getPinString1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinString1Request* req,
             ::octaneapi::ApiNode_getPinString1Response* resp) {
               return service->getPinString1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[84],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFilePath1Request, ::octaneapi::ApiNode_getPinFilePath1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFilePath1Request* req,
             ::octaneapi::ApiNode_getPinFilePath1Response* resp) {
               return service->getPinFilePath1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[85],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinBoolIxRequest, ::octaneapi::ApiNode_getPinBoolIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinBoolIxRequest* req,
             ::octaneapi::ApiNode_getPinBoolIxResponse* resp) {
               return service->getPinBoolIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[86],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloatIxRequest, ::octaneapi::ApiNode_getPinFloatIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloatIxRequest* req,
             ::octaneapi::ApiNode_getPinFloatIxResponse* resp) {
               return service->getPinFloatIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[87],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat2IxRequest, ::octaneapi::ApiNode_getPinFloat2IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat2IxRequest* req,
             ::octaneapi::ApiNode_getPinFloat2IxResponse* resp) {
               return service->getPinFloat2Ix(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[88],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat3IxRequest, ::octaneapi::ApiNode_getPinFloat3IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat3IxRequest* req,
             ::octaneapi::ApiNode_getPinFloat3IxResponse* resp) {
               return service->getPinFloat3Ix(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[89],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFloat4IxRequest, ::octaneapi::ApiNode_getPinFloat4IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFloat4IxRequest* req,
             ::octaneapi::ApiNode_getPinFloat4IxResponse* resp) {
               return service->getPinFloat4Ix(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[90],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinIntIxRequest, ::octaneapi::ApiNode_getPinIntIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinIntIxRequest* req,
             ::octaneapi::ApiNode_getPinIntIxResponse* resp) {
               return service->getPinIntIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[91],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt2IxRequest, ::octaneapi::ApiNode_getPinInt2IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt2IxRequest* req,
             ::octaneapi::ApiNode_getPinInt2IxResponse* resp) {
               return service->getPinInt2Ix(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[92],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt3IxRequest, ::octaneapi::ApiNode_getPinInt3IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt3IxRequest* req,
             ::octaneapi::ApiNode_getPinInt3IxResponse* resp) {
               return service->getPinInt3Ix(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[93],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinInt4IxRequest, ::octaneapi::ApiNode_getPinInt4IxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinInt4IxRequest* req,
             ::octaneapi::ApiNode_getPinInt4IxResponse* resp) {
               return service->getPinInt4Ix(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[94],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinMatrixIxRequest, ::octaneapi::ApiNode_getPinMatrixIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinMatrixIxRequest* req,
             ::octaneapi::ApiNode_getPinMatrixIxResponse* resp) {
               return service->getPinMatrixIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[95],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinStringIxRequest, ::octaneapi::ApiNode_getPinStringIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinStringIxRequest* req,
             ::octaneapi::ApiNode_getPinStringIxResponse* resp) {
               return service->getPinStringIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[96],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinFilePathIxRequest, ::octaneapi::ApiNode_getPinFilePathIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinFilePathIxRequest* req,
             ::octaneapi::ApiNode_getPinFilePathIxResponse* resp) {
               return service->getPinFilePathIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[97],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueRequest, ::octaneapi::ApiNode_getPinValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueRequest* req,
             ::octaneapi::ApiNode_getPinValueResponse* resp) {
               return service->getPinValue(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[98],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue1Request, ::octaneapi::ApiNode_getPinValue1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue1Request* req,
             ::octaneapi::ApiNode_getPinValue1Response* resp) {
               return service->getPinValue1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[99],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue2Request, ::octaneapi::ApiNode_getPinValue2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue2Request* req,
             ::octaneapi::ApiNode_getPinValue2Response* resp) {
               return service->getPinValue2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[100],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue3Request, ::octaneapi::ApiNode_getPinValue3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue3Request* req,
             ::octaneapi::ApiNode_getPinValue3Response* resp) {
               return service->getPinValue3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[101],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue4Request, ::octaneapi::ApiNode_getPinValue4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue4Request* req,
             ::octaneapi::ApiNode_getPinValue4Response* resp) {
               return service->getPinValue4(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[102],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue5Request, ::octaneapi::ApiNode_getPinValue5Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue5Request* req,
             ::octaneapi::ApiNode_getPinValue5Response* resp) {
               return service->getPinValue5(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[103],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue6Request, ::octaneapi::ApiNode_getPinValue6Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue6Request* req,
             ::octaneapi::ApiNode_getPinValue6Response* resp) {
               return service->getPinValue6(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[104],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue7Request, ::octaneapi::ApiNode_getPinValue7Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue7Request* req,
             ::octaneapi::ApiNode_getPinValue7Response* resp) {
               return service->getPinValue7(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[105],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue8Request, ::octaneapi::ApiNode_getPinValue8Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue8Request* req,
             ::octaneapi::ApiNode_getPinValue8Response* resp) {
               return service->getPinValue8(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[106],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue9Request, ::octaneapi::ApiNode_getPinValue9Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue9Request* req,
             ::octaneapi::ApiNode_getPinValue9Response* resp) {
               return service->getPinValue9(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[107],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue10Request, ::octaneapi::ApiNode_getPinValue10Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue10Request* req,
             ::octaneapi::ApiNode_getPinValue10Response* resp) {
               return service->getPinValue10(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[108],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue11Request, ::octaneapi::ApiNode_getPinValue11Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue11Request* req,
             ::octaneapi::ApiNode_getPinValue11Response* resp) {
               return service->getPinValue11(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[109],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue12Request, ::octaneapi::ApiNode_getPinValue12Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue12Request* req,
             ::octaneapi::ApiNode_getPinValue12Response* resp) {
               return service->getPinValue12(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[110],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue13Request, ::octaneapi::ApiNode_getPinValue13Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue13Request* req,
             ::octaneapi::ApiNode_getPinValue13Response* resp) {
               return service->getPinValue13(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[111],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue14Request, ::octaneapi::ApiNode_getPinValue14Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue14Request* req,
             ::octaneapi::ApiNode_getPinValue14Response* resp) {
               return service->getPinValue14(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[112],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue15Request, ::octaneapi::ApiNode_getPinValue15Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue15Request* req,
             ::octaneapi::ApiNode_getPinValue15Response* resp) {
               return service->getPinValue15(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[113],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue16Request, ::octaneapi::ApiNode_getPinValue16Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue16Request* req,
             ::octaneapi::ApiNode_getPinValue16Response* resp) {
               return service->getPinValue16(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[114],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue17Request, ::octaneapi::ApiNode_getPinValue17Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue17Request* req,
             ::octaneapi::ApiNode_getPinValue17Response* resp) {
               return service->getPinValue17(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[115],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue18Request, ::octaneapi::ApiNode_getPinValue18Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue18Request* req,
             ::octaneapi::ApiNode_getPinValue18Response* resp) {
               return service->getPinValue18(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[116],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue19Request, ::octaneapi::ApiNode_getPinValue19Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue19Request* req,
             ::octaneapi::ApiNode_getPinValue19Response* resp) {
               return service->getPinValue19(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[117],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue20Request, ::octaneapi::ApiNode_getPinValue20Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue20Request* req,
             ::octaneapi::ApiNode_getPinValue20Response* resp) {
               return service->getPinValue20(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[118],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue21Request, ::octaneapi::ApiNode_getPinValue21Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue21Request* req,
             ::octaneapi::ApiNode_getPinValue21Response* resp) {
               return service->getPinValue21(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[119],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue22Request, ::octaneapi::ApiNode_getPinValue22Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue22Request* req,
             ::octaneapi::ApiNode_getPinValue22Response* resp) {
               return service->getPinValue22(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[120],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValue23Request, ::octaneapi::ApiNode_getPinValue23Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValue23Request* req,
             ::octaneapi::ApiNode_getPinValue23Response* resp) {
               return service->getPinValue23(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[121],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIxRequest, ::octaneapi::ApiNode_getPinValueIxResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIxRequest* req,
             ::octaneapi::ApiNode_getPinValueIxResponse* resp) {
               return service->getPinValueIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[122],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx1Request, ::octaneapi::ApiNode_getPinValueIx1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx1Request* req,
             ::octaneapi::ApiNode_getPinValueIx1Response* resp) {
               return service->getPinValueIx1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[123],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx2Request, ::octaneapi::ApiNode_getPinValueIx2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx2Request* req,
             ::octaneapi::ApiNode_getPinValueIx2Response* resp) {
               return service->getPinValueIx2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[124],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx3Request, ::octaneapi::ApiNode_getPinValueIx3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx3Request* req,
             ::octaneapi::ApiNode_getPinValueIx3Response* resp) {
               return service->getPinValueIx3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[125],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx4Request, ::octaneapi::ApiNode_getPinValueIx4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx4Request* req,
             ::octaneapi::ApiNode_getPinValueIx4Response* resp) {
               return service->getPinValueIx4(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[126],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx5Request, ::octaneapi::ApiNode_getPinValueIx5Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx5Request* req,
             ::octaneapi::ApiNode_getPinValueIx5Response* resp) {
               return service->getPinValueIx5(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[127],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx6Request, ::octaneapi::ApiNode_getPinValueIx6Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx6Request* req,
             ::octaneapi::ApiNode_getPinValueIx6Response* resp) {
               return service->getPinValueIx6(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[128],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx7Request, ::octaneapi::ApiNode_getPinValueIx7Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx7Request* req,
             ::octaneapi::ApiNode_getPinValueIx7Response* resp) {
               return service->getPinValueIx7(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[129],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx8Request, ::octaneapi::ApiNode_getPinValueIx8Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx8Request* req,
             ::octaneapi::ApiNode_getPinValueIx8Response* resp) {
               return service->getPinValueIx8(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[130],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx9Request, ::octaneapi::ApiNode_getPinValueIx9Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx9Request* req,
             ::octaneapi::ApiNode_getPinValueIx9Response* resp) {
               return service->getPinValueIx9(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[131],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx10Request, ::octaneapi::ApiNode_getPinValueIx10Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx10Request* req,
             ::octaneapi::ApiNode_getPinValueIx10Response* resp) {
               return service->getPinValueIx10(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[132],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_getPinValueIx11Request, ::octaneapi::ApiNode_getPinValueIx11Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_getPinValueIx11Request* req,
             ::octaneapi::ApiNode_getPinValueIx11Response* resp) {
               return service->getPinValueIx11(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[133],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[134],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue1Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[135],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue2Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[136],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue3Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue3Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[137],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue4Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue4Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue4(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[138],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue5Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue5Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue5(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[139],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue6Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue6Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue6(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[140],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue7Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue7Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue7(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[141],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue8Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue8Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue8(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[142],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue9Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue9Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue9(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[143],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue10Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue10Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue10(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[144],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue11Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue11Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue11(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[145],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue12Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue12Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue12(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[146],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue13Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue13Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue13(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[147],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue14Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue14Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue14(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[148],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue15Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue15Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue15(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[149],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue16Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue16Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue16(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[150],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue17Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue17Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue17(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[151],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue18Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue18Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue18(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[152],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue19Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue19Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue19(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[153],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue20Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue20Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue20(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[154],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue21Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue21Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue21(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[155],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue22Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue22Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue22(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[156],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValue23Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValue23Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValue23(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[157],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIxRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIxRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[158],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx1Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[159],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx2Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[160],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx3Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx3Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[161],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx4Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx4Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx4(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[162],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx5Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx5Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx5(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[163],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx6Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx6Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx6(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[164],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx7Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx7Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx7(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[165],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx8Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx8Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx8(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[166],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx9Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx9Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx9(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[167],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx10Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx10Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx10(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[168],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_setPinValueIx11Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_setPinValueIx11Request* req,
             ::google::protobuf::Empty* resp) {
               return service->setPinValueIx11(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[169],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_storeToDbRequest, ::octaneapi::ApiNode_storeToDbResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_storeToDbRequest* req,
             ::octaneapi::ApiNode_storeToDbResponse* resp) {
               return service->storeToDb(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[170],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_showOslWindowRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_showOslWindowRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->showOslWindow(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[171],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_closeOslWindowRequest, ::octaneapi::ApiNode_closeOslWindowResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_closeOslWindowRequest* req,
             ::octaneapi::ApiNode_closeOslWindowResponse* resp) {
               return service->closeOslWindow(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeService_method_names[172],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeService::Service, ::octaneapi::ApiNode_unpackFileDataRequest, ::octaneapi::ApiNode_unpackFileDataResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNode_unpackFileDataRequest* req,
             ::octaneapi::ApiNode_unpackFileDataResponse* resp) {
               return service->unpackFileData(ctx, req, resp);
             }, this)));
}

ApiNodeService::Service::~Service() {
}

::grpc::Status ApiNodeService::Service::create(::grpc::ServerContext* context, const ::octaneapi::ApiNode_createRequest* request, ::octaneapi::ApiNode_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::addDynamicPinForLoading(::grpc::ServerContext* context, const ::octaneapi::ApiNode_addDynamicPinForLoadingRequest* request, ::octaneapi::ApiNode_addDynamicPinForLoadingResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::info(::grpc::ServerContext* context, const ::octaneapi::ApiNode_infoRequest* request, ::octaneapi::ApiNode_infoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::type(::grpc::ServerContext* context, const ::octaneapi::ApiNode_typeRequest* request, ::octaneapi::ApiNode_typeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::outputTextureValueType(::grpc::ServerContext* context, const ::octaneapi::ApiNode_outputTextureValueTypeRequest* request, ::octaneapi::ApiNode_outputTextureValueTypeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setTextureTypeConfiguration(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setTextureTypeConfigurationRequest* request, ::octaneapi::ApiNode_setTextureTypeConfigurationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::configureEmptyPins(::grpc::ServerContext* context, const ::octaneapi::ApiNode_configureEmptyPinsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinCount(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinCountRequest* request, ::octaneapi::ApiNode_pinCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::staticPinCount(::grpc::ServerContext* context, const ::octaneapi::ApiNode_staticPinCountRequest* request, ::octaneapi::ApiNode_staticPinCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::dynPinCount(::grpc::ServerContext* context, const ::octaneapi::ApiNode_dynPinCountRequest* request, ::octaneapi::ApiNode_dynPinCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::hasPin(::grpc::ServerContext* context, const ::octaneapi::ApiNode_hasPinRequest* request, ::octaneapi::ApiNode_hasPinResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::hasPin1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_hasPin1Request* request, ::octaneapi::ApiNode_hasPin1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::hasPinIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_hasPinIxRequest* request, ::octaneapi::ApiNode_hasPinIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::findPin(::grpc::ServerContext* context, const ::octaneapi::ApiNode_findPinRequest* request, ::octaneapi::ApiNode_findPinResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::findPin1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_findPin1Request* request, ::octaneapi::ApiNode_findPin1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinId(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinIdRequest* request, ::octaneapi::ApiNode_pinIdResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinIdIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinIdIxRequest* request, ::octaneapi::ApiNode_pinIdIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinName(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinNameRequest* request, ::octaneapi::ApiNode_pinNameResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinNameIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinNameIxRequest* request, ::octaneapi::ApiNode_pinNameIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinLabel(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinLabelRequest* request, ::octaneapi::ApiNode_pinLabelResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinLabel1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinLabel1Request* request, ::octaneapi::ApiNode_pinLabel1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinLabelIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinLabelIxRequest* request, ::octaneapi::ApiNode_pinLabelIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinType(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinTypeRequest* request, ::octaneapi::ApiNode_pinTypeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinType1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinType1Request* request, ::octaneapi::ApiNode_pinType1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinTypeIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinTypeIxRequest* request, ::octaneapi::ApiNode_pinTypeIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinTextureValueType(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeRequest* request, ::octaneapi::ApiNode_pinTextureValueTypeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinTextureValueTypeIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinTextureValueTypeIxRequest* request, ::octaneapi::ApiNode_pinTextureValueTypeIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinInfoRequest* request, ::octaneapi::ApiNode_pinInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinInfo1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinInfo1Request* request, ::octaneapi::ApiNode_pinInfo1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinInfoIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinInfoIxRequest* request, ::octaneapi::ApiNode_pinInfoIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::pinsAreDirty(::grpc::ServerContext* context, const ::octaneapi::ApiNode_pinsAreDirtyRequest* request, ::octaneapi::ApiNode_pinsAreDirtyResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::isDirtyPin(::grpc::ServerContext* context, const ::octaneapi::ApiNode_isDirtyPinRequest* request, ::octaneapi::ApiNode_isDirtyPinResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::isDirtyPin1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_isDirtyPin1Request* request, ::octaneapi::ApiNode_isDirtyPin1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::isDirtyPinIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_isDirtyPinIxRequest* request, ::octaneapi::ApiNode_isDirtyPinIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::canConnectTo(::grpc::ServerContext* context, const ::octaneapi::ApiNode_canConnectToRequest* request, ::octaneapi::ApiNode_canConnectToResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::canConnectTo1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_canConnectTo1Request* request, ::octaneapi::ApiNode_canConnectTo1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::canConnectToIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_canConnectToIxRequest* request, ::octaneapi::ApiNode_canConnectToIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::connectTo(::grpc::ServerContext* context, const ::octaneapi::ApiNode_connectToRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::connectTo1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_connectTo1Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::connectToIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_connectToIxRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::connectedNode(::grpc::ServerContext* context, const ::octaneapi::ApiNode_connectedNodeRequest* request, ::octaneapi::ApiNode_connectedNodeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::connectedNode1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_connectedNode1Request* request, ::octaneapi::ApiNode_connectedNode1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::connectedNodeIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_connectedNodeIxRequest* request, ::octaneapi::ApiNode_connectedNodeIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::inputNode(::grpc::ServerContext* context, const ::octaneapi::ApiNode_inputNodeRequest* request, ::octaneapi::ApiNode_inputNodeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::inputNode1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_inputNode1Request* request, ::octaneapi::ApiNode_inputNode1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::inputNodeIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_inputNodeIxRequest* request, ::octaneapi::ApiNode_inputNodeIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::destinationNodes(::grpc::ServerContext* context, const ::octaneapi::ApiNode_destinationNodesRequest* request, ::octaneapi::ApiNode_destinationNodesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::buildLinkerNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNode_buildLinkerNodePinInfoRequest* request, ::octaneapi::ApiNode_buildLinkerNodePinInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::buildDestinationPinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNode_buildDestinationPinInfoRequest* request, ::octaneapi::ApiNode_buildDestinationPinInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::ownedItem(::grpc::ServerContext* context, const ::octaneapi::ApiNode_ownedItemRequest* request, ::octaneapi::ApiNode_ownedItemResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::ownedItem1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_ownedItem1Request* request, ::octaneapi::ApiNode_ownedItem1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::ownedItemIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_ownedItemIxRequest* request, ::octaneapi::ApiNode_ownedItemIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::createInternal(::grpc::ServerContext* context, const ::octaneapi::ApiNode_createInternalRequest* request, ::octaneapi::ApiNode_createInternalResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::createInternal1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_createInternal1Request* request, ::octaneapi::ApiNode_createInternal1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::createInternalIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_createInternalIxRequest* request, ::octaneapi::ApiNode_createInternalIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::createInternal2(::grpc::ServerContext* context, const ::octaneapi::ApiNode_createInternal2Request* request, ::octaneapi::ApiNode_createInternal2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::createInternal3(::grpc::ServerContext* context, const ::octaneapi::ApiNode_createInternal3Request* request, ::octaneapi::ApiNode_createInternal3Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::createInternalIx1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_createInternalIx1Request* request, ::octaneapi::ApiNode_createInternalIx1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::copyFrom(::grpc::ServerContext* context, const ::octaneapi::ApiNode_copyFromRequest* request, ::octaneapi::ApiNode_copyFromResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::copyFrom1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_copyFrom1Request* request, ::octaneapi::ApiNode_copyFrom1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::copyFromIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_copyFromIxRequest* request, ::octaneapi::ApiNode_copyFromIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinBool(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinBoolRequest* request, ::octaneapi::ApiNode_getPinBoolResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloatRequest* request, ::octaneapi::ApiNode_getPinFloatResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat2(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat2Request* request, ::octaneapi::ApiNode_getPinFloat2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat3(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat3Request* request, ::octaneapi::ApiNode_getPinFloat3Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat4(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat4Request* request, ::octaneapi::ApiNode_getPinFloat4Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinIntRequest* request, ::octaneapi::ApiNode_getPinIntResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt2(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt2Request* request, ::octaneapi::ApiNode_getPinInt2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt3(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt3Request* request, ::octaneapi::ApiNode_getPinInt3Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt4(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt4Request* request, ::octaneapi::ApiNode_getPinInt4Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinMatrix(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinMatrixRequest* request, ::octaneapi::ApiNode_getPinMatrixResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinString(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinStringRequest* request, ::octaneapi::ApiNode_getPinStringResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFilePath(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFilePathRequest* request, ::octaneapi::ApiNode_getPinFilePathResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinBool1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinBool1Request* request, ::octaneapi::ApiNode_getPinBool1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat1Request* request, ::octaneapi::ApiNode_getPinFloat1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat21(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat21Request* request, ::octaneapi::ApiNode_getPinFloat21Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat31(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat31Request* request, ::octaneapi::ApiNode_getPinFloat31Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat41(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat41Request* request, ::octaneapi::ApiNode_getPinFloat41Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt1Request* request, ::octaneapi::ApiNode_getPinInt1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt21(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt21Request* request, ::octaneapi::ApiNode_getPinInt21Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt31(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt31Request* request, ::octaneapi::ApiNode_getPinInt31Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt41(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt41Request* request, ::octaneapi::ApiNode_getPinInt41Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinMatrix1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinMatrix1Request* request, ::octaneapi::ApiNode_getPinMatrix1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinString1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinString1Request* request, ::octaneapi::ApiNode_getPinString1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFilePath1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFilePath1Request* request, ::octaneapi::ApiNode_getPinFilePath1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinBoolIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinBoolIxRequest* request, ::octaneapi::ApiNode_getPinBoolIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloatIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloatIxRequest* request, ::octaneapi::ApiNode_getPinFloatIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat2Ix(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat2IxRequest* request, ::octaneapi::ApiNode_getPinFloat2IxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat3Ix(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat3IxRequest* request, ::octaneapi::ApiNode_getPinFloat3IxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFloat4Ix(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFloat4IxRequest* request, ::octaneapi::ApiNode_getPinFloat4IxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinIntIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinIntIxRequest* request, ::octaneapi::ApiNode_getPinIntIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt2Ix(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt2IxRequest* request, ::octaneapi::ApiNode_getPinInt2IxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt3Ix(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt3IxRequest* request, ::octaneapi::ApiNode_getPinInt3IxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinInt4Ix(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinInt4IxRequest* request, ::octaneapi::ApiNode_getPinInt4IxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinMatrixIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinMatrixIxRequest* request, ::octaneapi::ApiNode_getPinMatrixIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinStringIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinStringIxRequest* request, ::octaneapi::ApiNode_getPinStringIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinFilePathIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinFilePathIxRequest* request, ::octaneapi::ApiNode_getPinFilePathIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueRequest* request, ::octaneapi::ApiNode_getPinValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue1Request* request, ::octaneapi::ApiNode_getPinValue1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue2(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue2Request* request, ::octaneapi::ApiNode_getPinValue2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue3(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue3Request* request, ::octaneapi::ApiNode_getPinValue3Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue4(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue4Request* request, ::octaneapi::ApiNode_getPinValue4Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue5(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue5Request* request, ::octaneapi::ApiNode_getPinValue5Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue6(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue6Request* request, ::octaneapi::ApiNode_getPinValue6Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue7(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue7Request* request, ::octaneapi::ApiNode_getPinValue7Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue8(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue8Request* request, ::octaneapi::ApiNode_getPinValue8Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue9(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue9Request* request, ::octaneapi::ApiNode_getPinValue9Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue10(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue10Request* request, ::octaneapi::ApiNode_getPinValue10Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue11(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue11Request* request, ::octaneapi::ApiNode_getPinValue11Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue12(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue12Request* request, ::octaneapi::ApiNode_getPinValue12Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue13(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue13Request* request, ::octaneapi::ApiNode_getPinValue13Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue14(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue14Request* request, ::octaneapi::ApiNode_getPinValue14Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue15(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue15Request* request, ::octaneapi::ApiNode_getPinValue15Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue16(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue16Request* request, ::octaneapi::ApiNode_getPinValue16Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue17(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue17Request* request, ::octaneapi::ApiNode_getPinValue17Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue18(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue18Request* request, ::octaneapi::ApiNode_getPinValue18Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue19(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue19Request* request, ::octaneapi::ApiNode_getPinValue19Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue20(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue20Request* request, ::octaneapi::ApiNode_getPinValue20Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue21(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue21Request* request, ::octaneapi::ApiNode_getPinValue21Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue22(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue22Request* request, ::octaneapi::ApiNode_getPinValue22Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValue23(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValue23Request* request, ::octaneapi::ApiNode_getPinValue23Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIxRequest* request, ::octaneapi::ApiNode_getPinValueIxResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx1Request* request, ::octaneapi::ApiNode_getPinValueIx1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx2(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx2Request* request, ::octaneapi::ApiNode_getPinValueIx2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx3(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx3Request* request, ::octaneapi::ApiNode_getPinValueIx3Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx4(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx4Request* request, ::octaneapi::ApiNode_getPinValueIx4Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx5(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx5Request* request, ::octaneapi::ApiNode_getPinValueIx5Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx6(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx6Request* request, ::octaneapi::ApiNode_getPinValueIx6Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx7(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx7Request* request, ::octaneapi::ApiNode_getPinValueIx7Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx8(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx8Request* request, ::octaneapi::ApiNode_getPinValueIx8Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx9(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx9Request* request, ::octaneapi::ApiNode_getPinValueIx9Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx10(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx10Request* request, ::octaneapi::ApiNode_getPinValueIx10Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::getPinValueIx11(::grpc::ServerContext* context, const ::octaneapi::ApiNode_getPinValueIx11Request* request, ::octaneapi::ApiNode_getPinValueIx11Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue1Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue2(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue2Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue3(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue3Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue4(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue4Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue5(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue5Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue6(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue6Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue7(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue7Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue8(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue8Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue9(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue9Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue10(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue10Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue11(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue11Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue12(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue12Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue13(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue13Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue14(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue14Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue15(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue15Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue16(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue16Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue17(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue17Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue18(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue18Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue19(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue19Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue20(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue20Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue21(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue21Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue22(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue22Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValue23(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValue23Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIxRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx1(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx1Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx2(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx2Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx3(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx3Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx4(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx4Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx5(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx5Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx6(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx6Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx7(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx7Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx8(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx8Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx9(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx9Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx10(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx10Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::setPinValueIx11(::grpc::ServerContext* context, const ::octaneapi::ApiNode_setPinValueIx11Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::storeToDb(::grpc::ServerContext* context, const ::octaneapi::ApiNode_storeToDbRequest* request, ::octaneapi::ApiNode_storeToDbResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::showOslWindow(::grpc::ServerContext* context, const ::octaneapi::ApiNode_showOslWindowRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::closeOslWindow(::grpc::ServerContext* context, const ::octaneapi::ApiNode_closeOslWindowRequest* request, ::octaneapi::ApiNode_closeOslWindowResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeService::Service::unpackFileData(::grpc::ServerContext* context, const ::octaneapi::ApiNode_unpackFileDataRequest* request, ::octaneapi::ApiNode_unpackFileDataResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

