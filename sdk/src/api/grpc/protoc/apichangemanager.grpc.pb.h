// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apichangemanager.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_apichangemanager_2eproto__INCLUDED
#define GRPC_apichangemanager_2eproto__INCLUDED

#include "apichangemanager.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiChangeManager' from 'apichangemanager.h'
class ApiChangeManagerService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiChangeManagerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Registers a callback for receiving change events for the item
    virtual ::grpc::Status observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_observeApiItemResponse>> AsyncobserveApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_observeApiItemResponse>>(AsyncobserveApiItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_observeApiItemResponse>> PrepareAsyncobserveApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_observeApiItemResponse>>(PrepareAsyncobserveApiItemRaw(context, request, cq));
    }
    // / Removes an observer from the item
    virtual ::grpc::Status stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncstopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncstopObservingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncstopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncstopObservingRaw(context, request, cq));
    }
    // / Removes a callback from all the items it's hooked up to
    virtual ::grpc::Status stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncstopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncstopObserving1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncstopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncstopObserving1Raw(context, request, cq));
    }
    // / Removes all the observers
    virtual ::grpc::Status stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncstopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncstopObserving2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncstopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncstopObserving2Raw(context, request, cq));
    }
    // / Sends an update event to Octane which will then update all its sub-systems, which currently
    // / is mainly the render engine
    virtual ::grpc::Status update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncupdate(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncupdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncupdate(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncupdateRaw(context, request, cq));
    }
    // / Adds a time observer to the observer list
    virtual ::grpc::Status addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_addTimeObserverResponse>> AsyncaddTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_addTimeObserverResponse>>(AsyncaddTimeObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_addTimeObserverResponse>> PrepareAsyncaddTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_addTimeObserverResponse>>(PrepareAsyncaddTimeObserverRaw(context, request, cq));
    }
    // / Removes a time observer from the observer list
    virtual ::grpc::Status removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncremoveTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncremoveTimeObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncremoveTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncremoveTimeObserverRaw(context, request, cq));
    }
    // / Removes all the time observers
    virtual ::grpc::Status stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncstopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncstopObservingTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncstopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncstopObservingTimeRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Registers a callback for receiving change events for the item
      virtual void observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes an observer from the item
      virtual void stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes a callback from all the items it's hooked up to
      virtual void stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes all the observers
      virtual void stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sends an update event to Octane which will then update all its sub-systems, which currently
      // / is mainly the render engine
      virtual void update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Adds a time observer to the observer list
      virtual void addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes a time observer from the observer list
      virtual void removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes all the time observers
      virtual void stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_observeApiItemResponse>* AsyncobserveApiItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_observeApiItemResponse>* PrepareAsyncobserveApiItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncstopObservingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncstopObservingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncstopObserving1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncstopObserving1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncstopObserving2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncstopObserving2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncupdateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncupdateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_addTimeObserverResponse>* AsyncaddTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiChangeManager_addTimeObserverResponse>* PrepareAsyncaddTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncremoveTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncremoveTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncstopObservingTimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncstopObservingTimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>> AsyncobserveApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>>(AsyncobserveApiItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>> PrepareAsyncobserveApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>>(PrepareAsyncobserveApiItemRaw(context, request, cq));
    }
    ::grpc::Status stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncstopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncstopObservingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncstopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncstopObservingRaw(context, request, cq));
    }
    ::grpc::Status stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncstopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncstopObserving1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncstopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncstopObserving1Raw(context, request, cq));
    }
    ::grpc::Status stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncstopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncstopObserving2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncstopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncstopObserving2Raw(context, request, cq));
    }
    ::grpc::Status update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncupdate(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncupdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncupdate(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncupdateRaw(context, request, cq));
    }
    ::grpc::Status addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>> AsyncaddTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>>(AsyncaddTimeObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>> PrepareAsyncaddTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>>(PrepareAsyncaddTimeObserverRaw(context, request, cq));
    }
    ::grpc::Status removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncremoveTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncremoveTimeObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncremoveTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncremoveTimeObserverRaw(context, request, cq));
    }
    ::grpc::Status stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncstopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncstopObservingTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncstopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncstopObservingTimeRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response, std::function<void(::grpc::Status)>) override;
      void observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response, std::function<void(::grpc::Status)>) override;
      void addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>* AsyncobserveApiItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>* PrepareAsyncobserveApiItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncstopObservingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncstopObservingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncstopObserving1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncstopObserving1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncstopObserving2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncstopObserving2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncupdateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncupdateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>* AsyncaddTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>* PrepareAsyncaddTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncremoveTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncremoveTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncstopObservingTimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncstopObservingTimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_observeApiItem_;
    const ::grpc::internal::RpcMethod rpcmethod_stopObserving_;
    const ::grpc::internal::RpcMethod rpcmethod_stopObserving1_;
    const ::grpc::internal::RpcMethod rpcmethod_stopObserving2_;
    const ::grpc::internal::RpcMethod rpcmethod_update_;
    const ::grpc::internal::RpcMethod rpcmethod_addTimeObserver_;
    const ::grpc::internal::RpcMethod rpcmethod_removeTimeObserver_;
    const ::grpc::internal::RpcMethod rpcmethod_stopObservingTime_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Registers a callback for receiving change events for the item
    virtual ::grpc::Status observeApiItem(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response);
    // / Removes an observer from the item
    virtual ::grpc::Status stopObserving(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response);
    // / Removes a callback from all the items it's hooked up to
    virtual ::grpc::Status stopObserving1(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response);
    // / Removes all the observers
    virtual ::grpc::Status stopObserving2(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response);
    // / Sends an update event to Octane which will then update all its sub-systems, which currently
    // / is mainly the render engine
    virtual ::grpc::Status update(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response);
    // / Adds a time observer to the observer list
    virtual ::grpc::Status addTimeObserver(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response);
    // / Removes a time observer from the observer list
    virtual ::grpc::Status removeTimeObserver(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response);
    // / Removes all the time observers
    virtual ::grpc::Status stopObservingTime(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_observeApiItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_observeApiItem() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_observeApiItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status observeApiItem(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_observeApiItemRequest* /*request*/, ::octaneapi::ApiChangeManager_observeApiItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestobserveApiItem(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiChangeManager_observeApiItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_stopObserving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_stopObserving() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_stopObserving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObserving(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_stopObserving1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_stopObserving1() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_stopObserving1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObserving1(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_stopObserving2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_stopObserving2() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_stopObserving2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObserving2(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_update() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_updateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_updateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_addTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_addTimeObserver() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_addTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* /*request*/, ::octaneapi::ApiChangeManager_addTimeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddTimeObserver(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiChangeManager_addTimeObserverResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_removeTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_removeTimeObserver() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_removeTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestremoveTimeObserver(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_stopObservingTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_stopObservingTime() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_stopObservingTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObservingTime(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObservingTime(::grpc::ServerContext* context, ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_observeApiItem<WithAsyncMethod_stopObserving<WithAsyncMethod_stopObserving1<WithAsyncMethod_stopObserving2<WithAsyncMethod_update<WithAsyncMethod_addTimeObserver<WithAsyncMethod_removeTimeObserver<WithAsyncMethod_stopObservingTime<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_observeApiItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_observeApiItem() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response) { return this->observeApiItem(context, request, response); }));}
    void SetMessageAllocatorFor_observeApiItem(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_observeApiItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status observeApiItem(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_observeApiItemRequest* /*request*/, ::octaneapi::ApiChangeManager_observeApiItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* observeApiItem(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_observeApiItemRequest* /*request*/, ::octaneapi::ApiChangeManager_observeApiItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_stopObserving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_stopObserving() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response) { return this->stopObserving(context, request, response); }));}
    void SetMessageAllocatorFor_stopObserving(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_stopObserving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObserving(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_stopObserving1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_stopObserving1() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response) { return this->stopObserving1(context, request, response); }));}
    void SetMessageAllocatorFor_stopObserving1(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_stopObserving1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObserving1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving1Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_stopObserving2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_stopObserving2() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response) { return this->stopObserving2(context, request, response); }));}
    void SetMessageAllocatorFor_stopObserving2(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_stopObserving2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObserving2(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving2Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_update() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response) { return this->update(context, request, response); }));}
    void SetMessageAllocatorFor_update(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_updateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* update(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_updateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_addTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_addTimeObserver() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response) { return this->addTimeObserver(context, request, response); }));}
    void SetMessageAllocatorFor_addTimeObserver(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_addTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* /*request*/, ::octaneapi::ApiChangeManager_addTimeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addTimeObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* /*request*/, ::octaneapi::ApiChangeManager_addTimeObserverResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_removeTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_removeTimeObserver() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response) { return this->removeTimeObserver(context, request, response); }));}
    void SetMessageAllocatorFor_removeTimeObserver(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_removeTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* removeTimeObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_stopObservingTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_stopObservingTime() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response) { return this->stopObservingTime(context, request, response); }));}
    void SetMessageAllocatorFor_stopObservingTime(
        ::grpc::MessageAllocator< ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_stopObservingTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObservingTime(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObservingTime(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_observeApiItem<WithCallbackMethod_stopObserving<WithCallbackMethod_stopObserving1<WithCallbackMethod_stopObserving2<WithCallbackMethod_update<WithCallbackMethod_addTimeObserver<WithCallbackMethod_removeTimeObserver<WithCallbackMethod_stopObservingTime<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_observeApiItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_observeApiItem() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_observeApiItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status observeApiItem(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_observeApiItemRequest* /*request*/, ::octaneapi::ApiChangeManager_observeApiItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_stopObserving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_stopObserving() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_stopObserving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_stopObserving1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_stopObserving1() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_stopObserving1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_stopObserving2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_stopObserving2() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_stopObserving2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_update() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_updateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_addTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_addTimeObserver() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_addTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* /*request*/, ::octaneapi::ApiChangeManager_addTimeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_removeTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_removeTimeObserver() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_removeTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_stopObservingTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_stopObservingTime() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_stopObservingTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObservingTime(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_observeApiItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_observeApiItem() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_observeApiItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status observeApiItem(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_observeApiItemRequest* /*request*/, ::octaneapi::ApiChangeManager_observeApiItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestobserveApiItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_stopObserving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_stopObserving() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_stopObserving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObserving(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_stopObserving1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_stopObserving1() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_stopObserving1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObserving1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_stopObserving2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_stopObserving2() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_stopObserving2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObserving2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_update() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_updateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestupdate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_addTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_addTimeObserver() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_addTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* /*request*/, ::octaneapi::ApiChangeManager_addTimeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddTimeObserver(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_removeTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_removeTimeObserver() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_removeTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestremoveTimeObserver(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_stopObservingTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_stopObservingTime() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_stopObservingTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObservingTime(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequeststopObservingTime(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_observeApiItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_observeApiItem() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->observeApiItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_observeApiItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status observeApiItem(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_observeApiItemRequest* /*request*/, ::octaneapi::ApiChangeManager_observeApiItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* observeApiItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_stopObserving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_stopObserving() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->stopObserving(context, request, response); }));
    }
    ~WithRawCallbackMethod_stopObserving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObserving(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_stopObserving1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_stopObserving1() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->stopObserving1(context, request, response); }));
    }
    ~WithRawCallbackMethod_stopObserving1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObserving1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_stopObserving2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_stopObserving2() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->stopObserving2(context, request, response); }));
    }
    ~WithRawCallbackMethod_stopObserving2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObserving2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObserving2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_update() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->update(context, request, response); }));
    }
    ~WithRawCallbackMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_updateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* update(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_addTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_addTimeObserver() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->addTimeObserver(context, request, response); }));
    }
    ~WithRawCallbackMethod_addTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* /*request*/, ::octaneapi::ApiChangeManager_addTimeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addTimeObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_removeTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_removeTimeObserver() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->removeTimeObserver(context, request, response); }));
    }
    ~WithRawCallbackMethod_removeTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* removeTimeObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_stopObservingTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_stopObservingTime() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->stopObservingTime(context, request, response); }));
    }
    ~WithRawCallbackMethod_stopObservingTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status stopObservingTime(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* stopObservingTime(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_observeApiItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_observeApiItem() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse>* streamer) {
                       return this->StreamedobserveApiItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_observeApiItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status observeApiItem(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_observeApiItemRequest* /*request*/, ::octaneapi::ApiChangeManager_observeApiItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedobserveApiItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_observeApiItemRequest,::octaneapi::ApiChangeManager_observeApiItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_stopObserving : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_stopObserving() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedstopObserving(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_stopObserving() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status stopObserving(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedstopObserving(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_stopObservingRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_stopObserving1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_stopObserving1() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedstopObserving1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_stopObserving1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status stopObserving1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedstopObserving1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_stopObserving1Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_stopObserving2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_stopObserving2() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedstopObserving2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_stopObserving2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status stopObserving2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObserving2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedstopObserving2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_stopObserving2Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_update : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_update() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedupdate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_update() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status update(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_updateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedupdate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_updateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_addTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_addTimeObserver() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse>* streamer) {
                       return this->StreamedaddTimeObserver(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_addTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status addTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* /*request*/, ::octaneapi::ApiChangeManager_addTimeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedaddTimeObserver(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_addTimeObserverRequest,::octaneapi::ApiChangeManager_addTimeObserverResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_removeTimeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_removeTimeObserver() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedremoveTimeObserver(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_removeTimeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status removeTimeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedremoveTimeObserver(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_removeTimeObserverRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_stopObservingTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_stopObservingTime() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedstopObservingTime(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_stopObservingTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status stopObservingTime(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedstopObservingTime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiChangeManager_stopObservingTimeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_observeApiItem<WithStreamedUnaryMethod_stopObserving<WithStreamedUnaryMethod_stopObserving1<WithStreamedUnaryMethod_stopObserving2<WithStreamedUnaryMethod_update<WithStreamedUnaryMethod_addTimeObserver<WithStreamedUnaryMethod_removeTimeObserver<WithStreamedUnaryMethod_stopObservingTime<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_observeApiItem<WithStreamedUnaryMethod_stopObserving<WithStreamedUnaryMethod_stopObserving1<WithStreamedUnaryMethod_stopObserving2<WithStreamedUnaryMethod_update<WithStreamedUnaryMethod_addTimeObserver<WithStreamedUnaryMethod_removeTimeObserver<WithStreamedUnaryMethod_stopObservingTime<Service > > > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apichangemanager_2eproto__INCLUDED
