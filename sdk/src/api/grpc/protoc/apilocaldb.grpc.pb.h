// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apilocaldb.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_apilocaldb_2eproto__INCLUDED
#define GRPC_apilocaldb_2eproto__INCLUDED

#include "apilocaldb.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiLocalDB' from 'apilocaldb.h'
class ApiLocalDBService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiLocalDBService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Tells whether 
    virtual ::grpc::Status isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::octaneapi::ApiLocalDB_isSupportedResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_isSupportedResponse>> AsyncisSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_isSupportedResponse>>(AsyncisSupportedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_isSupportedResponse>> PrepareAsyncisSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_isSupportedResponse>>(PrepareAsyncisSupportedRaw(context, request, cq));
    }
    // / Returns the root category of the local DB
    // /
    // / 
    virtual ::grpc::Status root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::octaneapi::ApiLocalDB_rootResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_rootResponse>> Asyncroot(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_rootResponse>>(AsyncrootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_rootResponse>> PrepareAsyncroot(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_rootResponse>>(PrepareAsyncrootRaw(context, request, cq));
    }
    // / Moves the localDb folder to a new location
    virtual ::grpc::Status setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>> AsyncsetRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>>(AsyncsetRootDirectoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>> PrepareAsyncsetRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>>(PrepareAsyncsetRootDirectoryRaw(context, request, cq));
    }
    // / Add an observer to receive change notifications for localDB updates
    virtual ::grpc::Status addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::octaneapi::ApiLocalDB_addObserverResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_addObserverResponse>> AsyncaddObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_addObserverResponse>>(AsyncaddObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_addObserverResponse>> PrepareAsyncaddObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_addObserverResponse>>(PrepareAsyncaddObserverRaw(context, request, cq));
    }
    // / Remove an observer to receive change notifications for localDB updates
    virtual ::grpc::Status removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::octaneapi::ApiLocalDB_removeObserverResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_removeObserverResponse>> AsyncremoveObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_removeObserverResponse>>(AsyncremoveObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_removeObserverResponse>> PrepareAsyncremoveObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_removeObserverResponse>>(PrepareAsyncremoveObserverRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Tells whether 
      virtual void isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the root category of the local DB
      // /
      // / 
      virtual void root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Moves the localDb folder to a new location
      virtual void setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Add an observer to receive change notifications for localDB updates
      virtual void addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Remove an observer to receive change notifications for localDB updates
      virtual void removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_isSupportedResponse>* AsyncisSupportedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_isSupportedResponse>* PrepareAsyncisSupportedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_rootResponse>* AsyncrootRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_rootResponse>* PrepareAsyncrootRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* AsyncsetRootDirectoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* PrepareAsyncsetRootDirectoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_addObserverResponse>* AsyncaddObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_addObserverResponse>* PrepareAsyncaddObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_removeObserverResponse>* AsyncremoveObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_removeObserverResponse>* PrepareAsyncremoveObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::octaneapi::ApiLocalDB_isSupportedResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>> AsyncisSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>>(AsyncisSupportedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>> PrepareAsyncisSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>>(PrepareAsyncisSupportedRaw(context, request, cq));
    }
    ::grpc::Status root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::octaneapi::ApiLocalDB_rootResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>> Asyncroot(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>>(AsyncrootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>> PrepareAsyncroot(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>>(PrepareAsyncrootRaw(context, request, cq));
    }
    ::grpc::Status setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>> AsyncsetRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>>(AsyncsetRootDirectoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>> PrepareAsyncsetRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>>(PrepareAsyncsetRootDirectoryRaw(context, request, cq));
    }
    ::grpc::Status addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::octaneapi::ApiLocalDB_addObserverResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>> AsyncaddObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>>(AsyncaddObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>> PrepareAsyncaddObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>>(PrepareAsyncaddObserverRaw(context, request, cq));
    }
    ::grpc::Status removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::octaneapi::ApiLocalDB_removeObserverResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>> AsyncremoveObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>>(AsyncremoveObserverRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>> PrepareAsyncremoveObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>>(PrepareAsyncremoveObserverRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response, std::function<void(::grpc::Status)>) override;
      void isSupported(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response, std::function<void(::grpc::Status)>) override;
      void root(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response, std::function<void(::grpc::Status)>) override;
      void setRootDirectory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response, std::function<void(::grpc::Status)>) override;
      void addObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response, std::function<void(::grpc::Status)>) override;
      void removeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>* AsyncisSupportedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_isSupportedResponse>* PrepareAsyncisSupportedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>* AsyncrootRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_rootResponse>* PrepareAsyncrootRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_rootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* AsyncsetRootDirectoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* PrepareAsyncsetRootDirectoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>* AsyncaddObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_addObserverResponse>* PrepareAsyncaddObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>* AsyncremoveObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_removeObserverResponse>* PrepareAsyncremoveObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_isSupported_;
    const ::grpc::internal::RpcMethod rpcmethod_root_;
    const ::grpc::internal::RpcMethod rpcmethod_setRootDirectory_;
    const ::grpc::internal::RpcMethod rpcmethod_addObserver_;
    const ::grpc::internal::RpcMethod rpcmethod_removeObserver_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Tells whether 
    virtual ::grpc::Status isSupported(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response);
    // / Returns the root category of the local DB
    // /
    // / 
    virtual ::grpc::Status root(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response);
    // / Moves the localDb folder to a new location
    virtual ::grpc::Status setRootDirectory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response);
    // / Add an observer to receive change notifications for localDB updates
    virtual ::grpc::Status addObserver(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response);
    // / Remove an observer to receive change notifications for localDB updates
    virtual ::grpc::Status removeObserver(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_isSupported : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isSupported() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_isSupported() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSupported(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_isSupportedRequest* /*request*/, ::octaneapi::ApiLocalDB_isSupportedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisSupported(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_isSupportedResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_root : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_root() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_root() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status root(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_rootRequest* /*request*/, ::octaneapi::ApiLocalDB_rootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestroot(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_rootRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_rootResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setRootDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setRootDirectory() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_setRootDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRootDirectory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* /*request*/, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetRootDirectory(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_addObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_addObserver() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_addObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_addObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_addObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddObserver(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_addObserverRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_addObserverResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_removeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_removeObserver() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_removeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_removeObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_removeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestremoveObserver(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_removeObserverResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_isSupported<WithAsyncMethod_root<WithAsyncMethod_setRootDirectory<WithAsyncMethod_addObserver<WithAsyncMethod_removeObserver<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_isSupported : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isSupported() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_isSupportedRequest* request, ::octaneapi::ApiLocalDB_isSupportedResponse* response) { return this->isSupported(context, request, response); }));}
    void SetMessageAllocatorFor_isSupported(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isSupported() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSupported(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_isSupportedRequest* /*request*/, ::octaneapi::ApiLocalDB_isSupportedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isSupported(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_isSupportedRequest* /*request*/, ::octaneapi::ApiLocalDB_isSupportedResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_root : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_root() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_rootRequest* request, ::octaneapi::ApiLocalDB_rootResponse* response) { return this->root(context, request, response); }));}
    void SetMessageAllocatorFor_root(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_root() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status root(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_rootRequest* /*request*/, ::octaneapi::ApiLocalDB_rootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* root(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_rootRequest* /*request*/, ::octaneapi::ApiLocalDB_rootResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setRootDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setRootDirectory() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* request, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* response) { return this->setRootDirectory(context, request, response); }));}
    void SetMessageAllocatorFor_setRootDirectory(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setRootDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRootDirectory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* /*request*/, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setRootDirectory(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* /*request*/, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_addObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_addObserver() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_addObserverRequest* request, ::octaneapi::ApiLocalDB_addObserverResponse* response) { return this->addObserver(context, request, response); }));}
    void SetMessageAllocatorFor_addObserver(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_addObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_addObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_addObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_addObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_addObserverResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_removeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_removeObserver() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_removeObserverRequest* request, ::octaneapi::ApiLocalDB_removeObserverResponse* response) { return this->removeObserver(context, request, response); }));}
    void SetMessageAllocatorFor_removeObserver(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_removeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_removeObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_removeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* removeObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_removeObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_removeObserverResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_isSupported<WithCallbackMethod_root<WithCallbackMethod_setRootDirectory<WithCallbackMethod_addObserver<WithCallbackMethod_removeObserver<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_isSupported : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isSupported() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_isSupported() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSupported(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_isSupportedRequest* /*request*/, ::octaneapi::ApiLocalDB_isSupportedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_root : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_root() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_root() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status root(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_rootRequest* /*request*/, ::octaneapi::ApiLocalDB_rootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setRootDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setRootDirectory() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_setRootDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRootDirectory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* /*request*/, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_addObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_addObserver() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_addObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_addObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_addObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_removeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_removeObserver() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_removeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_removeObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_removeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_isSupported : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isSupported() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_isSupported() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSupported(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_isSupportedRequest* /*request*/, ::octaneapi::ApiLocalDB_isSupportedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisSupported(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_root : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_root() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_root() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status root(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_rootRequest* /*request*/, ::octaneapi::ApiLocalDB_rootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestroot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setRootDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setRootDirectory() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_setRootDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRootDirectory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* /*request*/, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetRootDirectory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_addObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_addObserver() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_addObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_addObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_addObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddObserver(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_removeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_removeObserver() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_removeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_removeObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_removeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestremoveObserver(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isSupported : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isSupported() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isSupported(context, request, response); }));
    }
    ~WithRawCallbackMethod_isSupported() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSupported(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_isSupportedRequest* /*request*/, ::octaneapi::ApiLocalDB_isSupportedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isSupported(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_root : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_root() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->root(context, request, response); }));
    }
    ~WithRawCallbackMethod_root() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status root(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_rootRequest* /*request*/, ::octaneapi::ApiLocalDB_rootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* root(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setRootDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setRootDirectory() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setRootDirectory(context, request, response); }));
    }
    ~WithRawCallbackMethod_setRootDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setRootDirectory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* /*request*/, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setRootDirectory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_addObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_addObserver() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->addObserver(context, request, response); }));
    }
    ~WithRawCallbackMethod_addObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_addObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_addObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_removeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_removeObserver() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->removeObserver(context, request, response); }));
    }
    ~WithRawCallbackMethod_removeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_removeObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_removeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* removeObserver(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isSupported : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isSupported() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_isSupportedRequest, ::octaneapi::ApiLocalDB_isSupportedResponse>* streamer) {
                       return this->StreamedisSupported(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isSupported() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isSupported(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_isSupportedRequest* /*request*/, ::octaneapi::ApiLocalDB_isSupportedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisSupported(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_isSupportedRequest,::octaneapi::ApiLocalDB_isSupportedResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_root : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_root() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_rootRequest, ::octaneapi::ApiLocalDB_rootResponse>* streamer) {
                       return this->Streamedroot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_root() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status root(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_rootRequest* /*request*/, ::octaneapi::ApiLocalDB_rootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedroot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_rootRequest,::octaneapi::ApiLocalDB_rootResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setRootDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setRootDirectory() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_setRootDirectoryRequest, ::octaneapi::ApiLocalDB_setRootDirectoryResponse>* streamer) {
                       return this->StreamedsetRootDirectory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setRootDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setRootDirectory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_setRootDirectoryRequest* /*request*/, ::octaneapi::ApiLocalDB_setRootDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetRootDirectory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_setRootDirectoryRequest,::octaneapi::ApiLocalDB_setRootDirectoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_addObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_addObserver() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_addObserverRequest, ::octaneapi::ApiLocalDB_addObserverResponse>* streamer) {
                       return this->StreamedaddObserver(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_addObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status addObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_addObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_addObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedaddObserver(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_addObserverRequest,::octaneapi::ApiLocalDB_addObserverResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_removeObserver : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_removeObserver() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_removeObserverRequest, ::octaneapi::ApiLocalDB_removeObserverResponse>* streamer) {
                       return this->StreamedremoveObserver(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_removeObserver() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status removeObserver(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_removeObserverRequest* /*request*/, ::octaneapi::ApiLocalDB_removeObserverResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedremoveObserver(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_removeObserverRequest,::octaneapi::ApiLocalDB_removeObserverResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_isSupported<WithStreamedUnaryMethod_root<WithStreamedUnaryMethod_setRootDirectory<WithStreamedUnaryMethod_addObserver<WithStreamedUnaryMethod_removeObserver<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_isSupported<WithStreamedUnaryMethod_root<WithStreamedUnaryMethod_setRootDirectory<WithStreamedUnaryMethod_addObserver<WithStreamedUnaryMethod_removeObserver<Service > > > > > StreamedService;
};

// GRPC interface definition for class 'ApiLocalDB_Category' from 'apilocaldb.h'
class ApiLocalDB_CategoryService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiLocalDB_CategoryService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Get the name for this category
    virtual ::grpc::Status name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>> Asyncname(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>>(AsyncnameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>> PrepareAsyncname(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>>(PrepareAsyncnameRaw(context, request, cq));
    }
    // / Returns the directory where the files in this category are
    virtual ::grpc::Status fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>> AsyncfileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>>(AsyncfileNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>> PrepareAsyncfileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>>(PrepareAsyncfileNameRaw(context, request, cq));
    }
    // / Returns the number of subcategories in this category
    virtual ::grpc::Status subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>> AsyncsubCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>>(AsyncsubCategoryCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>> PrepareAsyncsubCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>>(PrepareAsyncsubCategoryCountRaw(context, request, cq));
    }
    // / returns the name of one of the subcategories in this category
    virtual ::grpc::Status subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>> AsyncsubCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>>(AsyncsubCategoryNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>> PrepareAsyncsubCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>>(PrepareAsyncsubCategoryNameRaw(context, request, cq));
    }
    // / returns one of the subcategories in this category
    virtual ::grpc::Status subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>> AsyncsubCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>>(AsyncsubCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>> PrepareAsyncsubCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>>(PrepareAsyncsubCategoryRaw(context, request, cq));
    }
    // / Returns the number of packages in this category
    virtual ::grpc::Status packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>> AsyncpackageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>>(AsyncpackageCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>> PrepareAsyncpackageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>>(PrepareAsyncpackageCountRaw(context, request, cq));
    }
    // / Returns one of the packages in this category
    virtual ::grpc::Status package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>> Asyncpackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>>(AsyncpackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>> PrepareAsyncpackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>>(PrepareAsyncpackageRaw(context, request, cq));
    }
    // / Get a package
    virtual ::grpc::Status categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>> AsynccategoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>>(AsynccategoryByPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>> PrepareAsynccategoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>>(PrepareAsynccategoryByPathRaw(context, request, cq));
    }
    // / Get a package
    virtual ::grpc::Status packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>> AsyncpackageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>>(AsyncpackageByPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>> PrepareAsyncpackageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>>(PrepareAsyncpackageByPathRaw(context, request, cq));
    }
    // / Creates a new category
    virtual ::grpc::Status createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>> AsynccreateCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>>(AsynccreateCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>> PrepareAsynccreateCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>>(PrepareAsynccreateCategoryRaw(context, request, cq));
    }
    // / Delete a child category of this category, including all subcategories and packages
    // / inside it
    virtual ::grpc::Status deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>> AsyncdeleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>>(AsyncdeleteCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>> PrepareAsyncdeleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>>(PrepareAsyncdeleteCategoryRaw(context, request, cq));
    }
    // / Save a package in the localDB under this category
    // / 
    virtual ::grpc::Status savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>> AsyncsavePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>>(AsyncsavePackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>> PrepareAsyncsavePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>>(PrepareAsyncsavePackageRaw(context, request, cq));
    }
    // / Delete a package in this category
    virtual ::grpc::Status deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>> AsyncdeletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>>(AsyncdeletePackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>> PrepareAsyncdeletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>>(PrepareAsyncdeletePackageRaw(context, request, cq));
    }
    // / Releases any memory allocated for this category
    virtual ::grpc::Status free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncfree(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncfreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncfree(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncfreeRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Get the name for this category
      virtual void name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the directory where the files in this category are
      virtual void fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the number of subcategories in this category
      virtual void subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / returns the name of one of the subcategories in this category
      virtual void subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / returns one of the subcategories in this category
      virtual void subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the number of packages in this category
      virtual void packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns one of the packages in this category
      virtual void package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Get a package
      virtual void categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Get a package
      virtual void packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates a new category
      virtual void createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Delete a child category of this category, including all subcategories and packages
      // / inside it
      virtual void deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Save a package in the localDB under this category
      // / 
      virtual void savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Delete a package in this category
      virtual void deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Releases any memory allocated for this category
      virtual void free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* AsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* PrepareAsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* AsyncfileNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* PrepareAsyncfileNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* AsyncsubCategoryCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* PrepareAsyncsubCategoryCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* AsyncsubCategoryNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* PrepareAsyncsubCategoryNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* AsyncsubCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* PrepareAsyncsubCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* AsyncpackageCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* PrepareAsyncpackageCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* AsyncpackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* PrepareAsyncpackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* AsynccategoryByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* PrepareAsynccategoryByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* AsyncpackageByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* PrepareAsyncpackageByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* AsynccreateCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* PrepareAsynccreateCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* AsyncdeleteCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* PrepareAsyncdeleteCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* AsyncsavePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* PrepareAsyncsavePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* AsyncdeletePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* PrepareAsyncdeletePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>> Asyncname(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>>(AsyncnameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>> PrepareAsyncname(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>>(PrepareAsyncnameRaw(context, request, cq));
    }
    ::grpc::Status fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>> AsyncfileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>>(AsyncfileNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>> PrepareAsyncfileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>>(PrepareAsyncfileNameRaw(context, request, cq));
    }
    ::grpc::Status subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>> AsyncsubCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>>(AsyncsubCategoryCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>> PrepareAsyncsubCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>>(PrepareAsyncsubCategoryCountRaw(context, request, cq));
    }
    ::grpc::Status subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>> AsyncsubCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>>(AsyncsubCategoryNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>> PrepareAsyncsubCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>>(PrepareAsyncsubCategoryNameRaw(context, request, cq));
    }
    ::grpc::Status subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>> AsyncsubCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>>(AsyncsubCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>> PrepareAsyncsubCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>>(PrepareAsyncsubCategoryRaw(context, request, cq));
    }
    ::grpc::Status packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>> AsyncpackageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>>(AsyncpackageCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>> PrepareAsyncpackageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>>(PrepareAsyncpackageCountRaw(context, request, cq));
    }
    ::grpc::Status package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>> Asyncpackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>>(AsyncpackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>> PrepareAsyncpackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>>(PrepareAsyncpackageRaw(context, request, cq));
    }
    ::grpc::Status categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>> AsynccategoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>>(AsynccategoryByPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>> PrepareAsynccategoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>>(PrepareAsynccategoryByPathRaw(context, request, cq));
    }
    ::grpc::Status packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>> AsyncpackageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>>(AsyncpackageByPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>> PrepareAsyncpackageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>>(PrepareAsyncpackageByPathRaw(context, request, cq));
    }
    ::grpc::Status createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>> AsynccreateCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>>(AsynccreateCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>> PrepareAsynccreateCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>>(PrepareAsynccreateCategoryRaw(context, request, cq));
    }
    ::grpc::Status deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>> AsyncdeleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>>(AsyncdeleteCategoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>> PrepareAsyncdeleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>>(PrepareAsyncdeleteCategoryRaw(context, request, cq));
    }
    ::grpc::Status savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>> AsyncsavePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>>(AsyncsavePackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>> PrepareAsyncsavePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>>(PrepareAsyncsavePackageRaw(context, request, cq));
    }
    ::grpc::Status deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>> AsyncdeletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>>(AsyncdeletePackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>> PrepareAsyncdeletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>>(PrepareAsyncdeletePackageRaw(context, request, cq));
    }
    ::grpc::Status free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncfree(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncfreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncfree(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncfreeRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response, std::function<void(::grpc::Status)>) override;
      void name(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response, std::function<void(::grpc::Status)>) override;
      void fileName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response, std::function<void(::grpc::Status)>) override;
      void subCategoryCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response, std::function<void(::grpc::Status)>) override;
      void subCategoryName(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response, std::function<void(::grpc::Status)>) override;
      void subCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response, std::function<void(::grpc::Status)>) override;
      void packageCount(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response, std::function<void(::grpc::Status)>) override;
      void package(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response, std::function<void(::grpc::Status)>) override;
      void categoryByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response, std::function<void(::grpc::Status)>) override;
      void packageByPath(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response, std::function<void(::grpc::Status)>) override;
      void createCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response, std::function<void(::grpc::Status)>) override;
      void deleteCategory(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response, std::function<void(::grpc::Status)>) override;
      void savePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response, std::function<void(::grpc::Status)>) override;
      void deletePackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void free(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* AsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* PrepareAsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* AsyncfileNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* PrepareAsyncfileNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* AsyncsubCategoryCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* PrepareAsyncsubCategoryCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* AsyncsubCategoryNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* PrepareAsyncsubCategoryNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* AsyncsubCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* PrepareAsyncsubCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* AsyncpackageCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* PrepareAsyncpackageCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* AsyncpackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* PrepareAsyncpackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* AsynccategoryByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* PrepareAsynccategoryByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* AsyncpackageByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* PrepareAsyncpackageByPathRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* AsynccreateCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* PrepareAsynccreateCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* AsyncdeleteCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* PrepareAsyncdeleteCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* AsyncsavePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* PrepareAsyncsavePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* AsyncdeletePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* PrepareAsyncdeletePackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_name_;
    const ::grpc::internal::RpcMethod rpcmethod_fileName_;
    const ::grpc::internal::RpcMethod rpcmethod_subCategoryCount_;
    const ::grpc::internal::RpcMethod rpcmethod_subCategoryName_;
    const ::grpc::internal::RpcMethod rpcmethod_subCategory_;
    const ::grpc::internal::RpcMethod rpcmethod_packageCount_;
    const ::grpc::internal::RpcMethod rpcmethod_package_;
    const ::grpc::internal::RpcMethod rpcmethod_categoryByPath_;
    const ::grpc::internal::RpcMethod rpcmethod_packageByPath_;
    const ::grpc::internal::RpcMethod rpcmethod_createCategory_;
    const ::grpc::internal::RpcMethod rpcmethod_deleteCategory_;
    const ::grpc::internal::RpcMethod rpcmethod_savePackage_;
    const ::grpc::internal::RpcMethod rpcmethod_deletePackage_;
    const ::grpc::internal::RpcMethod rpcmethod_free_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Get the name for this category
    virtual ::grpc::Status name(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response);
    // / Returns the directory where the files in this category are
    virtual ::grpc::Status fileName(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response);
    // / Returns the number of subcategories in this category
    virtual ::grpc::Status subCategoryCount(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response);
    // / returns the name of one of the subcategories in this category
    virtual ::grpc::Status subCategoryName(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response);
    // / returns one of the subcategories in this category
    virtual ::grpc::Status subCategory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response);
    // / Returns the number of packages in this category
    virtual ::grpc::Status packageCount(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response);
    // / Returns one of the packages in this category
    virtual ::grpc::Status package(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response);
    // / Get a package
    virtual ::grpc::Status categoryByPath(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response);
    // / Get a package
    virtual ::grpc::Status packageByPath(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response);
    // / Creates a new category
    virtual ::grpc::Status createCategory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response);
    // / Delete a child category of this category, including all subcategories and packages
    // / inside it
    virtual ::grpc::Status deleteCategory(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response);
    // / Save a package in the localDB under this category
    // / 
    virtual ::grpc::Status savePackage(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response);
    // / Delete a package in this category
    virtual ::grpc::Status deletePackage(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response);
    // / Releases any memory allocated for this category
    virtual ::grpc::Status free(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_name() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestname(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_fileName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_fileName() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_fileName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfileName(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_subCategoryCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_subCategoryCount() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_subCategoryCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsubCategoryCount(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_subCategoryName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_subCategoryName() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_subCategoryName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsubCategoryName(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_subCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_subCategory() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_subCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsubCategory(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_packageCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_packageCount() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_packageCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpackageCount(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_package : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_package() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_package() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status package(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpackage(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_categoryByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_categoryByPath() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_categoryByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status categoryByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcategoryByPath(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_packageByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_packageByPath() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_packageByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpackageByPath(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_createCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_createCategory() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_createCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateCategory(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_deleteCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_deleteCategory() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_deleteCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteCategory(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_savePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_savePackage() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_savePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status savePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsavePackage(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_deletePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_deletePackage() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_deletePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deletePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeletePackage(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_free : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_free() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_free() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfree(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_name<WithAsyncMethod_fileName<WithAsyncMethod_subCategoryCount<WithAsyncMethod_subCategoryName<WithAsyncMethod_subCategory<WithAsyncMethod_packageCount<WithAsyncMethod_package<WithAsyncMethod_categoryByPath<WithAsyncMethod_packageByPath<WithAsyncMethod_createCategory<WithAsyncMethod_deleteCategory<WithAsyncMethod_savePackage<WithAsyncMethod_deletePackage<WithAsyncMethod_free<Service > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_name() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* response) { return this->name(context, request, response); }));}
    void SetMessageAllocatorFor_name(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* name(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_fileName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_fileName() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* response) { return this->fileName(context, request, response); }));}
    void SetMessageAllocatorFor_fileName(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_fileName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* fileName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_subCategoryCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_subCategoryCount() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* response) { return this->subCategoryCount(context, request, response); }));}
    void SetMessageAllocatorFor_subCategoryCount(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_subCategoryCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* subCategoryCount(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_subCategoryName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_subCategoryName() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* response) { return this->subCategoryName(context, request, response); }));}
    void SetMessageAllocatorFor_subCategoryName(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_subCategoryName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* subCategoryName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_subCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_subCategory() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* response) { return this->subCategory(context, request, response); }));}
    void SetMessageAllocatorFor_subCategory(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_subCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* subCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_packageCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_packageCount() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* response) { return this->packageCount(context, request, response); }));}
    void SetMessageAllocatorFor_packageCount(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_packageCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* packageCount(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_package : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_package() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* response) { return this->package(context, request, response); }));}
    void SetMessageAllocatorFor_package(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_package() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status package(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* package(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_categoryByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_categoryByPath() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* response) { return this->categoryByPath(context, request, response); }));}
    void SetMessageAllocatorFor_categoryByPath(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_categoryByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status categoryByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* categoryByPath(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_packageByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_packageByPath() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* response) { return this->packageByPath(context, request, response); }));}
    void SetMessageAllocatorFor_packageByPath(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_packageByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* packageByPath(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_createCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_createCategory() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* response) { return this->createCategory(context, request, response); }));}
    void SetMessageAllocatorFor_createCategory(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_createCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_deleteCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_deleteCategory() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* response) { return this->deleteCategory(context, request, response); }));}
    void SetMessageAllocatorFor_deleteCategory(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_deleteCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deleteCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_savePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_savePackage() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* response) { return this->savePackage(context, request, response); }));}
    void SetMessageAllocatorFor_savePackage(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_savePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status savePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* savePackage(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_deletePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_deletePackage() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* response) { return this->deletePackage(context, request, response); }));}
    void SetMessageAllocatorFor_deletePackage(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_deletePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deletePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deletePackage(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_free : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_free() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* request, ::google::protobuf::Empty* response) { return this->free(context, request, response); }));}
    void SetMessageAllocatorFor_free(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_free() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* free(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_name<WithCallbackMethod_fileName<WithCallbackMethod_subCategoryCount<WithCallbackMethod_subCategoryName<WithCallbackMethod_subCategory<WithCallbackMethod_packageCount<WithCallbackMethod_package<WithCallbackMethod_categoryByPath<WithCallbackMethod_packageByPath<WithCallbackMethod_createCategory<WithCallbackMethod_deleteCategory<WithCallbackMethod_savePackage<WithCallbackMethod_deletePackage<WithCallbackMethod_free<Service > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_name() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_fileName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_fileName() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_fileName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_subCategoryCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_subCategoryCount() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_subCategoryCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_subCategoryName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_subCategoryName() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_subCategoryName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_subCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_subCategory() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_subCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_packageCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_packageCount() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_packageCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_package : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_package() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_package() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status package(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_categoryByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_categoryByPath() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_categoryByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status categoryByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_packageByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_packageByPath() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_packageByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_createCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_createCategory() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_createCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_deleteCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_deleteCategory() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_deleteCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_savePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_savePackage() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_savePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status savePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_deletePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_deletePackage() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_deletePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deletePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_free : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_free() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_free() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_name() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestname(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_fileName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_fileName() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_fileName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfileName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_subCategoryCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_subCategoryCount() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_subCategoryCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsubCategoryCount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_subCategoryName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_subCategoryName() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_subCategoryName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsubCategoryName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_subCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_subCategory() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_subCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsubCategory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_packageCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_packageCount() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_packageCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpackageCount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_package : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_package() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_package() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status package(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestpackage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_categoryByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_categoryByPath() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_categoryByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status categoryByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcategoryByPath(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_packageByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_packageByPath() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_packageByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpackageByPath(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_createCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_createCategory() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_createCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateCategory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_deleteCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_deleteCategory() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_deleteCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteCategory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_savePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_savePackage() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_savePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status savePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsavePackage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_deletePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_deletePackage() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_deletePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deletePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeletePackage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_free : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_free() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_free() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfree(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_name() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->name(context, request, response); }));
    }
    ~WithRawCallbackMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* name(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_fileName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_fileName() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->fileName(context, request, response); }));
    }
    ~WithRawCallbackMethod_fileName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* fileName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_subCategoryCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_subCategoryCount() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->subCategoryCount(context, request, response); }));
    }
    ~WithRawCallbackMethod_subCategoryCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* subCategoryCount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_subCategoryName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_subCategoryName() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->subCategoryName(context, request, response); }));
    }
    ~WithRawCallbackMethod_subCategoryName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategoryName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* subCategoryName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_subCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_subCategory() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->subCategory(context, request, response); }));
    }
    ~WithRawCallbackMethod_subCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status subCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* subCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_packageCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_packageCount() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->packageCount(context, request, response); }));
    }
    ~WithRawCallbackMethod_packageCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* packageCount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_package : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_package() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->package(context, request, response); }));
    }
    ~WithRawCallbackMethod_package() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status package(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* package(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_categoryByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_categoryByPath() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->categoryByPath(context, request, response); }));
    }
    ~WithRawCallbackMethod_categoryByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status categoryByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* categoryByPath(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_packageByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_packageByPath() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->packageByPath(context, request, response); }));
    }
    ~WithRawCallbackMethod_packageByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status packageByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* packageByPath(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_createCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_createCategory() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->createCategory(context, request, response); }));
    }
    ~WithRawCallbackMethod_createCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_deleteCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_deleteCategory() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->deleteCategory(context, request, response); }));
    }
    ~WithRawCallbackMethod_deleteCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deleteCategory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_savePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_savePackage() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->savePackage(context, request, response); }));
    }
    ~WithRawCallbackMethod_savePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status savePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* savePackage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_deletePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_deletePackage() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->deletePackage(context, request, response); }));
    }
    ~WithRawCallbackMethod_deletePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deletePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deletePackage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_free : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_free() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->free(context, request, response); }));
    }
    ~WithRawCallbackMethod_free() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* free(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_name() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* streamer) {
                       return this->Streamedname(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedname(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_nameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_fileName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_fileName() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* streamer) {
                       return this->StreamedfileName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_fileName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status fileName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfileName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_fileNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_subCategoryCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_subCategoryCount() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* streamer) {
                       return this->StreamedsubCategoryCount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_subCategoryCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status subCategoryCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsubCategoryCount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryCountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_subCategoryName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_subCategoryName() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* streamer) {
                       return this->StreamedsubCategoryName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_subCategoryName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status subCategoryName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsubCategoryName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_subCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_subCategory() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* streamer) {
                       return this->StreamedsubCategory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_subCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status subCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsubCategory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_subCategoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_packageCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_packageCount() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* streamer) {
                       return this->StreamedpackageCount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_packageCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status packageCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedpackageCount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageCountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_package : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_package() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* streamer) {
                       return this->Streamedpackage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_package() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status package(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedpackage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_categoryByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_categoryByPath() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* streamer) {
                       return this->StreamedcategoryByPath(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_categoryByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status categoryByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcategoryByPath(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_categoryByPathResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_packageByPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_packageByPath() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* streamer) {
                       return this->StreamedpackageByPath(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_packageByPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status packageByPath(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedpackageByPath(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_packageByPathResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_createCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_createCategory() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* streamer) {
                       return this->StreamedcreateCategory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_createCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status createCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcreateCategory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_createCategoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_deleteCategory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_deleteCategory() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* streamer) {
                       return this->StreameddeleteCategory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_deleteCategory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status deleteCategory(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddeleteCategory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_deleteCategoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_savePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_savePackage() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* streamer) {
                       return this->StreamedsavePackage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_savePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status savePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsavePackage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_savePackageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_deletePackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_deletePackage() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* streamer) {
                       return this->StreameddeletePackage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_deletePackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status deletePackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddeletePackage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Category_deletePackageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_free : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_free() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedfree(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_free() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status free(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedfree(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Category_freeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_name<WithStreamedUnaryMethod_fileName<WithStreamedUnaryMethod_subCategoryCount<WithStreamedUnaryMethod_subCategoryName<WithStreamedUnaryMethod_subCategory<WithStreamedUnaryMethod_packageCount<WithStreamedUnaryMethod_package<WithStreamedUnaryMethod_categoryByPath<WithStreamedUnaryMethod_packageByPath<WithStreamedUnaryMethod_createCategory<WithStreamedUnaryMethod_deleteCategory<WithStreamedUnaryMethod_savePackage<WithStreamedUnaryMethod_deletePackage<WithStreamedUnaryMethod_free<Service > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_name<WithStreamedUnaryMethod_fileName<WithStreamedUnaryMethod_subCategoryCount<WithStreamedUnaryMethod_subCategoryName<WithStreamedUnaryMethod_subCategory<WithStreamedUnaryMethod_packageCount<WithStreamedUnaryMethod_package<WithStreamedUnaryMethod_categoryByPath<WithStreamedUnaryMethod_packageByPath<WithStreamedUnaryMethod_createCategory<WithStreamedUnaryMethod_deleteCategory<WithStreamedUnaryMethod_savePackage<WithStreamedUnaryMethod_deletePackage<WithStreamedUnaryMethod_free<Service > > > > > > > > > > > > > > StreamedService;
};

// GRPC interface definition for class 'ApiLocalDB_Package' from 'apilocaldb.h'
class ApiLocalDB_PackageService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiLocalDB_PackageService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Get the name for this package
    // / The returned pointer will remain valid until this package object is freed
    virtual ::grpc::Status name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>> Asyncname1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>>(Asyncname1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>> PrepareAsyncname1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>>(PrepareAsyncname1Raw(context, request, cq));
    }
    // / Get the file name for this package
    // / The returned pointer will remain valid until this package object is freed
    // /
    // / Note: it is recommended to use Category::savePackage() and category::deletePackage()
    // / to add and remove packages, this will raise the corresponding events
    virtual ::grpc::Status fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>> AsyncfileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>>(AsyncfileName1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>> PrepareAsyncfileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>>(PrepareAsyncfileName1Raw(context, request, cq));
    }
    // / Check if a preview image embedded into this package
    virtual ::grpc::Status hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>> AsynchasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>>(AsynchasThumbnailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>> PrepareAsynchasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>>(PrepareAsynchasThumbnailRaw(context, request, cq));
    }
    // / Get the preview image embedded into this package
    virtual ::grpc::Status getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>> AsyncgetThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>>(AsyncgetThumbnailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>> PrepareAsyncgetThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>>(PrepareAsyncgetThumbnailRaw(context, request, cq));
    }
    // / Loads this package into a root node graph
    virtual ::grpc::Status loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>> AsyncloadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>>(AsyncloadPackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>> PrepareAsyncloadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>>(PrepareAsyncloadPackageRaw(context, request, cq));
    }
    // / Releases any memory allocated for this package
    virtual ::grpc::Status free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncfree1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(Asyncfree1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncfree1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncfree1Raw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Get the name for this package
      // / The returned pointer will remain valid until this package object is freed
      virtual void name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Get the file name for this package
      // / The returned pointer will remain valid until this package object is freed
      // /
      // / Note: it is recommended to use Category::savePackage() and category::deletePackage()
      // / to add and remove packages, this will raise the corresponding events
      virtual void fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Check if a preview image embedded into this package
      virtual void hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Get the preview image embedded into this package
      virtual void getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Loads this package into a root node graph
      virtual void loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Releases any memory allocated for this package
      virtual void free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* Asyncname1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* PrepareAsyncname1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* AsyncfileName1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* PrepareAsyncfileName1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* AsynchasThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* PrepareAsynchasThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* AsyncgetThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* PrepareAsyncgetThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* AsyncloadPackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* PrepareAsyncloadPackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* Asyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>> Asyncname1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>>(Asyncname1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>> PrepareAsyncname1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>>(PrepareAsyncname1Raw(context, request, cq));
    }
    ::grpc::Status fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>> AsyncfileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>>(AsyncfileName1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>> PrepareAsyncfileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>>(PrepareAsyncfileName1Raw(context, request, cq));
    }
    ::grpc::Status hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>> AsynchasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>>(AsynchasThumbnailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>> PrepareAsynchasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>>(PrepareAsynchasThumbnailRaw(context, request, cq));
    }
    ::grpc::Status getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>> AsyncgetThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>>(AsyncgetThumbnailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>> PrepareAsyncgetThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>>(PrepareAsyncgetThumbnailRaw(context, request, cq));
    }
    ::grpc::Status loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>> AsyncloadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>>(AsyncloadPackageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>> PrepareAsyncloadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>>(PrepareAsyncloadPackageRaw(context, request, cq));
    }
    ::grpc::Status free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncfree1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(Asyncfree1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncfree1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncfree1Raw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response, std::function<void(::grpc::Status)>) override;
      void name1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response, std::function<void(::grpc::Status)>) override;
      void fileName1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response, std::function<void(::grpc::Status)>) override;
      void hasThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response, std::function<void(::grpc::Status)>) override;
      void getThumbnail(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response, std::function<void(::grpc::Status)>) override;
      void loadPackage(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void free1(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* Asyncname1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* PrepareAsyncname1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* AsyncfileName1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* PrepareAsyncfileName1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* AsynchasThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* PrepareAsynchasThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* AsyncgetThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* PrepareAsyncgetThumbnailRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* AsyncloadPackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* PrepareAsyncloadPackageRaw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Asyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_name1_;
    const ::grpc::internal::RpcMethod rpcmethod_fileName1_;
    const ::grpc::internal::RpcMethod rpcmethod_hasThumbnail_;
    const ::grpc::internal::RpcMethod rpcmethod_getThumbnail_;
    const ::grpc::internal::RpcMethod rpcmethod_loadPackage_;
    const ::grpc::internal::RpcMethod rpcmethod_free1_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Get the name for this package
    // / The returned pointer will remain valid until this package object is freed
    virtual ::grpc::Status name1(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response);
    // / Get the file name for this package
    // / The returned pointer will remain valid until this package object is freed
    // /
    // / Note: it is recommended to use Category::savePackage() and category::deletePackage()
    // / to add and remove packages, this will raise the corresponding events
    virtual ::grpc::Status fileName1(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response);
    // / Check if a preview image embedded into this package
    virtual ::grpc::Status hasThumbnail(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response);
    // / Get the preview image embedded into this package
    virtual ::grpc::Status getThumbnail(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response);
    // / Loads this package into a root node graph
    virtual ::grpc::Status loadPackage(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response);
    // / Releases any memory allocated for this package
    virtual ::grpc::Status free1(::grpc::ServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_name1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_name1() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_name1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestname1(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_fileName1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_fileName1() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_fileName1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfileName1(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_hasThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_hasThumbnail() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_hasThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasThumbnail(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getThumbnail() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_getThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetThumbnail(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_loadPackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_loadPackage() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_loadPackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadPackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestloadPackage(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_free1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_free1() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_free1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfree1(::grpc::ServerContext* context, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_name1<WithAsyncMethod_fileName1<WithAsyncMethod_hasThumbnail<WithAsyncMethod_getThumbnail<WithAsyncMethod_loadPackage<WithAsyncMethod_free1<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_name1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_name1() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* response) { return this->name1(context, request, response); }));}
    void SetMessageAllocatorFor_name1(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_name1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* name1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_fileName1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_fileName1() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* response) { return this->fileName1(context, request, response); }));}
    void SetMessageAllocatorFor_fileName1(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_fileName1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* fileName1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_hasThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_hasThumbnail() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* response) { return this->hasThumbnail(context, request, response); }));}
    void SetMessageAllocatorFor_hasThumbnail(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_hasThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasThumbnail(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getThumbnail() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* response) { return this->getThumbnail(context, request, response); }));}
    void SetMessageAllocatorFor_getThumbnail(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getThumbnail(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_loadPackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_loadPackage() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* request, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* response) { return this->loadPackage(context, request, response); }));}
    void SetMessageAllocatorFor_loadPackage(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_loadPackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadPackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* loadPackage(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_free1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_free1() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* request, ::google::protobuf::Empty* response) { return this->free1(context, request, response); }));}
    void SetMessageAllocatorFor_free1(
        ::grpc::MessageAllocator< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_free1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* free1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_name1<WithCallbackMethod_fileName1<WithCallbackMethod_hasThumbnail<WithCallbackMethod_getThumbnail<WithCallbackMethod_loadPackage<WithCallbackMethod_free1<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_name1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_name1() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_name1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_fileName1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_fileName1() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_fileName1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_hasThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_hasThumbnail() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_hasThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getThumbnail() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_getThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_loadPackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_loadPackage() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_loadPackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadPackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_free1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_free1() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_free1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_name1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_name1() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_name1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestname1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_fileName1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_fileName1() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_fileName1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfileName1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_hasThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_hasThumbnail() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_hasThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasThumbnail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getThumbnail() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_getThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetThumbnail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_loadPackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_loadPackage() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_loadPackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadPackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestloadPackage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_free1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_free1() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_free1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestfree1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_name1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_name1() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->name1(context, request, response); }));
    }
    ~WithRawCallbackMethod_name1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* name1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_fileName1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_fileName1() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->fileName1(context, request, response); }));
    }
    ~WithRawCallbackMethod_fileName1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fileName1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* fileName1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_hasThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_hasThumbnail() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->hasThumbnail(context, request, response); }));
    }
    ~WithRawCallbackMethod_hasThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasThumbnail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getThumbnail() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getThumbnail(context, request, response); }));
    }
    ~WithRawCallbackMethod_getThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getThumbnail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_loadPackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_loadPackage() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->loadPackage(context, request, response); }));
    }
    ~WithRawCallbackMethod_loadPackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status loadPackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* loadPackage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_free1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_free1() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->free1(context, request, response); }));
    }
    ~WithRawCallbackMethod_free1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status free1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* free1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_name1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_name1() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* streamer) {
                       return this->Streamedname1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_name1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status name1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedname1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Package_nameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_fileName1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_fileName1() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* streamer) {
                       return this->StreamedfileName1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_fileName1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status fileName1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfileName1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Package_fileNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_hasThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_hasThumbnail() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* streamer) {
                       return this->StreamedhasThumbnail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_hasThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status hasThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedhasThumbnail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Package_hasThumbnailResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getThumbnail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getThumbnail() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* streamer) {
                       return this->StreamedgetThumbnail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getThumbnail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getThumbnail(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetThumbnail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Package_getThumbnailResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_loadPackage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_loadPackage() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* streamer) {
                       return this->StreamedloadPackage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_loadPackage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status loadPackage(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest* /*request*/, ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedloadPackage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageRequest,::octaneapi::ApiLocalDB_ApiLocalDB_Package_loadPackageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_free1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_free1() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedfree1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_free1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status free1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedfree1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiLocalDB_ApiLocalDB_Package_freeRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_name1<WithStreamedUnaryMethod_fileName1<WithStreamedUnaryMethod_hasThumbnail<WithStreamedUnaryMethod_getThumbnail<WithStreamedUnaryMethod_loadPackage<WithStreamedUnaryMethod_free1<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_name1<WithStreamedUnaryMethod_fileName1<WithStreamedUnaryMethod_hasThumbnail<WithStreamedUnaryMethod_getThumbnail<WithStreamedUnaryMethod_loadPackage<WithStreamedUnaryMethod_free1<Service > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apilocaldb_2eproto__INCLUDED
