// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinumericbox.proto

#include "apinumericbox.pb.h"
#include "apinumericbox.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiNumericBoxService_method_names[] = {
  "/octaneapi.ApiNumericBoxService/create",
  "/octaneapi.ApiNumericBoxService/destroy",
  "/octaneapi.ApiNumericBoxService/value",
  "/octaneapi.ApiNumericBoxService/setValue",
  "/octaneapi.ApiNumericBoxService/setLimits",
};

std::unique_ptr< ApiNumericBoxService::Stub> ApiNumericBoxService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiNumericBoxService::Stub> stub(new ApiNumericBoxService::Stub(channel, options));
  return stub;
}

ApiNumericBoxService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_create_(ApiNumericBoxService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destroy_(ApiNumericBoxService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_value_(ApiNumericBoxService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setValue_(ApiNumericBoxService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setLimits_(ApiNumericBoxService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiNumericBoxService::Stub::create(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_createRequest& request, ::octaneapi::ApiNumericBox_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNumericBox_createRequest, ::octaneapi::ApiNumericBox_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create_, context, request, response);
}

void ApiNumericBoxService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_createRequest* request, ::octaneapi::ApiNumericBox_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNumericBox_createRequest, ::octaneapi::ApiNumericBox_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, std::move(f));
}

void ApiNumericBoxService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_createRequest* request, ::octaneapi::ApiNumericBox_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNumericBox_createResponse>* ApiNumericBoxService::Stub::PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNumericBox_createResponse, ::octaneapi::ApiNumericBox_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNumericBox_createResponse>* ApiNumericBoxService::Stub::AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNumericBoxService::Stub::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNumericBox_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy_, context, request, response);
}

void ApiNumericBoxService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNumericBox_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, std::move(f));
}

void ApiNumericBoxService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNumericBoxService::Stub::PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNumericBox_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNumericBoxService::Stub::AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNumericBoxService::Stub::value(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_valueRequest& request, ::octaneapi::ApiNumericBox_valueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNumericBox_valueRequest, ::octaneapi::ApiNumericBox_valueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_value_, context, request, response);
}

void ApiNumericBoxService::Stub::async::value(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_valueRequest* request, ::octaneapi::ApiNumericBox_valueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNumericBox_valueRequest, ::octaneapi::ApiNumericBox_valueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_value_, context, request, response, std::move(f));
}

void ApiNumericBoxService::Stub::async::value(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_valueRequest* request, ::octaneapi::ApiNumericBox_valueResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_value_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNumericBox_valueResponse>* ApiNumericBoxService::Stub::PrepareAsyncvalueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_valueRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNumericBox_valueResponse, ::octaneapi::ApiNumericBox_valueRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_value_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNumericBox_valueResponse>* ApiNumericBoxService::Stub::AsyncvalueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_valueRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncvalueRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNumericBoxService::Stub::setValue(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setValueRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNumericBox_setValueRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setValue_, context, request, response);
}

void ApiNumericBoxService::Stub::async::setValue(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setValueRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNumericBox_setValueRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setValue_, context, request, response, std::move(f));
}

void ApiNumericBoxService::Stub::async::setValue(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setValueRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setValue_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNumericBoxService::Stub::PrepareAsyncsetValueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setValueRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNumericBox_setValueRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setValue_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNumericBoxService::Stub::AsyncsetValueRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setValueRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetValueRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNumericBoxService::Stub::setLimits(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setLimitsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNumericBox_setLimitsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setLimits_, context, request, response);
}

void ApiNumericBoxService::Stub::async::setLimits(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setLimitsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNumericBox_setLimitsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setLimits_, context, request, response, std::move(f));
}

void ApiNumericBoxService::Stub::async::setLimits(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setLimitsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setLimits_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNumericBoxService::Stub::PrepareAsyncsetLimitsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setLimitsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNumericBox_setLimitsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setLimits_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNumericBoxService::Stub::AsyncsetLimitsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNumericBox_setLimitsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetLimitsRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiNumericBoxService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNumericBoxService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNumericBoxService::Service, ::octaneapi::ApiNumericBox_createRequest, ::octaneapi::ApiNumericBox_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNumericBoxService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNumericBox_createRequest* req,
             ::octaneapi::ApiNumericBox_createResponse* resp) {
               return service->create(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNumericBoxService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNumericBoxService::Service, ::octaneapi::ApiNumericBox_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNumericBoxService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNumericBox_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNumericBoxService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNumericBoxService::Service, ::octaneapi::ApiNumericBox_valueRequest, ::octaneapi::ApiNumericBox_valueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNumericBoxService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNumericBox_valueRequest* req,
             ::octaneapi::ApiNumericBox_valueResponse* resp) {
               return service->value(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNumericBoxService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNumericBoxService::Service, ::octaneapi::ApiNumericBox_setValueRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNumericBoxService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNumericBox_setValueRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setValue(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNumericBoxService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNumericBoxService::Service, ::octaneapi::ApiNumericBox_setLimitsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNumericBoxService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNumericBox_setLimitsRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setLimits(ctx, req, resp);
             }, this)));
}

ApiNumericBoxService::Service::~Service() {
}

::grpc::Status ApiNumericBoxService::Service::create(::grpc::ServerContext* context, const ::octaneapi::ApiNumericBox_createRequest* request, ::octaneapi::ApiNumericBox_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNumericBoxService::Service::destroy(::grpc::ServerContext* context, const ::octaneapi::ApiNumericBox_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNumericBoxService::Service::value(::grpc::ServerContext* context, const ::octaneapi::ApiNumericBox_valueRequest* request, ::octaneapi::ApiNumericBox_valueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNumericBoxService::Service::setValue(::grpc::ServerContext* context, const ::octaneapi::ApiNumericBox_setValueRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNumericBoxService::Service::setLimits(::grpc::ServerContext* context, const ::octaneapi::ApiNumericBox_setLimitsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

