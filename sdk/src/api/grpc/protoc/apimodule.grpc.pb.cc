// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apimodule.proto

#include "apimodule.pb.h"
#include "apimodule.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiCommandModuleInfoService_method_names[] = {
  "/octaneapi.ApiCommandModuleInfoService/create",
  "/octaneapi.ApiCommandModuleInfoService/destroy",
  "/octaneapi.ApiCommandModuleInfoService/setRunFunction",
  "/octaneapi.ApiCommandModuleInfoService/setIcon",
  "/octaneapi.ApiCommandModuleInfoService/assignShortcutKey",
};

std::unique_ptr< ApiCommandModuleInfoService::Stub> ApiCommandModuleInfoService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiCommandModuleInfoService::Stub> stub(new ApiCommandModuleInfoService::Stub(channel, options));
  return stub;
}

ApiCommandModuleInfoService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_create_(ApiCommandModuleInfoService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destroy_(ApiCommandModuleInfoService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setRunFunction_(ApiCommandModuleInfoService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setIcon_(ApiCommandModuleInfoService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_assignShortcutKey_(ApiCommandModuleInfoService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiCommandModuleInfoService::Stub::create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::octaneapi::ApiCommandModuleInfo_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create_, context, request, response);
}

void ApiCommandModuleInfoService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, std::move(f));
}

void ApiCommandModuleInfoService::Stub::async::create(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>* ApiCommandModuleInfoService::Stub::PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiCommandModuleInfo_createResponse, ::octaneapi::ApiCommandModuleInfo_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_createResponse>* ApiCommandModuleInfoService::Stub::AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCommandModuleInfoService::Stub::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy_, context, request, response);
}

void ApiCommandModuleInfoService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, std::move(f));
}

void ApiCommandModuleInfoService::Stub::async::destroy(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCommandModuleInfoService::Stub::PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCommandModuleInfoService::Stub::AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCommandModuleInfoService::Stub::setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setRunFunction_, context, request, response);
}

void ApiCommandModuleInfoService::Stub::async::setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setRunFunction_, context, request, response, std::move(f));
}

void ApiCommandModuleInfoService::Stub::async::setRunFunction(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setRunFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* ApiCommandModuleInfoService::Stub::PrepareAsyncsetRunFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse, ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setRunFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse>* ApiCommandModuleInfoService::Stub::AsyncsetRunFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetRunFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCommandModuleInfoService::Stub::setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setIcon_, context, request, response);
}

void ApiCommandModuleInfoService::Stub::async::setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setIcon_, context, request, response, std::move(f));
}

void ApiCommandModuleInfoService::Stub::async::setIcon(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setIcon_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCommandModuleInfoService::Stub::PrepareAsyncsetIconRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setIcon_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCommandModuleInfoService::Stub::AsyncsetIconRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetIconRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiCommandModuleInfoService::Stub::assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_assignShortcutKey_, context, request, response);
}

void ApiCommandModuleInfoService::Stub::async::assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_assignShortcutKey_, context, request, response, std::move(f));
}

void ApiCommandModuleInfoService::Stub::async::assignShortcutKey(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_assignShortcutKey_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCommandModuleInfoService::Stub::PrepareAsyncassignShortcutKeyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_assignShortcutKey_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiCommandModuleInfoService::Stub::AsyncassignShortcutKeyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncassignShortcutKeyRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiCommandModuleInfoService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCommandModuleInfoService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCommandModuleInfoService::Service, ::octaneapi::ApiCommandModuleInfo_createRequest, ::octaneapi::ApiCommandModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCommandModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCommandModuleInfo_createRequest* req,
             ::octaneapi::ApiCommandModuleInfo_createResponse* resp) {
               return service->create(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCommandModuleInfoService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCommandModuleInfoService::Service, ::octaneapi::ApiCommandModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCommandModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCommandModuleInfo_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCommandModuleInfoService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCommandModuleInfoService::Service, ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCommandModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* req,
             ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* resp) {
               return service->setRunFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCommandModuleInfoService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCommandModuleInfoService::Service, ::octaneapi::ApiCommandModuleInfo_setIconRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCommandModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCommandModuleInfo_setIconRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setIcon(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiCommandModuleInfoService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiCommandModuleInfoService::Service, ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiCommandModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->assignShortcutKey(ctx, req, resp);
             }, this)));
}

ApiCommandModuleInfoService::Service::~Service() {
}

::grpc::Status ApiCommandModuleInfoService::Service::create(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_createRequest* request, ::octaneapi::ApiCommandModuleInfo_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCommandModuleInfoService::Service::destroy(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCommandModuleInfoService::Service::setRunFunction(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_setRunFunctionRequest* request, ::octaneapi::ApiCommandModuleInfo_setRunFunctionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCommandModuleInfoService::Service::setIcon(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_setIconRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiCommandModuleInfoService::Service::assignShortcutKey(::grpc::ServerContext* context, const ::octaneapi::ApiCommandModuleInfo_assignShortcutKeyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiModuleGlobalService_method_names[] = {
  "/octaneapi.ApiModuleGlobalService/registerCommandModule",
  "/octaneapi.ApiModuleGlobalService/registerWorkPaneModule",
  "/octaneapi.ApiModuleGlobalService/registerNodeGraphModule",
  "/octaneapi.ApiModuleGlobalService/registerStaticCommandModule",
  "/octaneapi.ApiModuleGlobalService/registerStaticWorkPaneModule",
  "/octaneapi.ApiModuleGlobalService/registerStaticNodeGraphModule",
};

std::unique_ptr< ApiModuleGlobalService::Stub> ApiModuleGlobalService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiModuleGlobalService::Stub> stub(new ApiModuleGlobalService::Stub(channel, options));
  return stub;
}

ApiModuleGlobalService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_registerCommandModule_(ApiModuleGlobalService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_registerWorkPaneModule_(ApiModuleGlobalService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_registerNodeGraphModule_(ApiModuleGlobalService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_registerStaticCommandModule_(ApiModuleGlobalService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_registerStaticWorkPaneModule_(ApiModuleGlobalService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_registerStaticNodeGraphModule_(ApiModuleGlobalService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiModuleGlobalService::Stub::registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_registerCommandModule_, context, request, response);
}

void ApiModuleGlobalService::Stub::async::registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerCommandModule_, context, request, response, std::move(f));
}

void ApiModuleGlobalService::Stub::async::registerCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerCommandModule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* ApiModuleGlobalService::Stub::PrepareAsyncregisterCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse, ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_registerCommandModule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse>* ApiModuleGlobalService::Stub::AsyncregisterCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncregisterCommandModuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModuleGlobalService::Stub::registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_registerWorkPaneModule_, context, request, response);
}

void ApiModuleGlobalService::Stub::async::registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerWorkPaneModule_, context, request, response, std::move(f));
}

void ApiModuleGlobalService::Stub::async::registerWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerWorkPaneModule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* ApiModuleGlobalService::Stub::PrepareAsyncregisterWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_registerWorkPaneModule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse>* ApiModuleGlobalService::Stub::AsyncregisterWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncregisterWorkPaneModuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModuleGlobalService::Stub::registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_registerNodeGraphModule_, context, request, response);
}

void ApiModuleGlobalService::Stub::async::registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerNodeGraphModule_, context, request, response, std::move(f));
}

void ApiModuleGlobalService::Stub::async::registerNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerNodeGraphModule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* ApiModuleGlobalService::Stub::PrepareAsyncregisterNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_registerNodeGraphModule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse>* ApiModuleGlobalService::Stub::AsyncregisterNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncregisterNodeGraphModuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModuleGlobalService::Stub::registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_registerStaticCommandModule_, context, request, response);
}

void ApiModuleGlobalService::Stub::async::registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerStaticCommandModule_, context, request, response, std::move(f));
}

void ApiModuleGlobalService::Stub::async::registerStaticCommandModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerStaticCommandModule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* ApiModuleGlobalService::Stub::PrepareAsyncregisterStaticCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_registerStaticCommandModule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse>* ApiModuleGlobalService::Stub::AsyncregisterStaticCommandModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncregisterStaticCommandModuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModuleGlobalService::Stub::registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_registerStaticWorkPaneModule_, context, request, response);
}

void ApiModuleGlobalService::Stub::async::registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerStaticWorkPaneModule_, context, request, response, std::move(f));
}

void ApiModuleGlobalService::Stub::async::registerStaticWorkPaneModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerStaticWorkPaneModule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* ApiModuleGlobalService::Stub::PrepareAsyncregisterStaticWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_registerStaticWorkPaneModule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse>* ApiModuleGlobalService::Stub::AsyncregisterStaticWorkPaneModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncregisterStaticWorkPaneModuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiModuleGlobalService::Stub::registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_registerStaticNodeGraphModule_, context, request, response);
}

void ApiModuleGlobalService::Stub::async::registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerStaticNodeGraphModule_, context, request, response, std::move(f));
}

void ApiModuleGlobalService::Stub::async::registerStaticNodeGraphModule(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_registerStaticNodeGraphModule_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* ApiModuleGlobalService::Stub::PrepareAsyncregisterStaticNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_registerStaticNodeGraphModule_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse>* ApiModuleGlobalService::Stub::AsyncregisterStaticNodeGraphModuleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncregisterStaticNodeGraphModuleRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiModuleGlobalService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModuleGlobalService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModuleGlobalService::Service, ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModuleGlobalService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* req,
             ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* resp) {
               return service->registerCommandModule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModuleGlobalService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModuleGlobalService::Service, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModuleGlobalService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* req,
             ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* resp) {
               return service->registerWorkPaneModule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModuleGlobalService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModuleGlobalService::Service, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModuleGlobalService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* req,
             ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* resp) {
               return service->registerNodeGraphModule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModuleGlobalService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModuleGlobalService::Service, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModuleGlobalService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* req,
             ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* resp) {
               return service->registerStaticCommandModule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModuleGlobalService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModuleGlobalService::Service, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModuleGlobalService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* req,
             ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* resp) {
               return service->registerStaticWorkPaneModule(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiModuleGlobalService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiModuleGlobalService::Service, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiModuleGlobalService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* req,
             ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* resp) {
               return service->registerStaticNodeGraphModule(ctx, req, resp);
             }, this)));
}

ApiModuleGlobalService::Service::~Service() {
}

::grpc::Status ApiModuleGlobalService::Service::registerCommandModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerCommandModuleResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModuleGlobalService::Service::registerWorkPaneModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerWorkPaneModuleResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModuleGlobalService::Service::registerNodeGraphModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerNodeGraphModuleResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModuleGlobalService::Service::registerStaticCommandModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticCommandModuleResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModuleGlobalService::Service::registerStaticWorkPaneModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticWorkPaneModuleResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiModuleGlobalService::Service::registerStaticNodeGraphModule(::grpc::ServerContext* context, const ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleRequest* request, ::octaneapi::ApiModuleGlobal_registerStaticNodeGraphModuleResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiNodeGraphModuleInfoService_method_names[] = {
  "/octaneapi.ApiNodeGraphModuleInfoService/create1",
  "/octaneapi.ApiNodeGraphModuleInfoService/destroy1",
  "/octaneapi.ApiNodeGraphModuleInfoService/setCreateFunction",
  "/octaneapi.ApiNodeGraphModuleInfoService/setDestroyFunction",
  "/octaneapi.ApiNodeGraphModuleInfoService/setOnEvaluateFunction",
  "/octaneapi.ApiNodeGraphModuleInfoService/setOnTriggerFunction",
  "/octaneapi.ApiNodeGraphModuleInfoService/setOutType",
};

std::unique_ptr< ApiNodeGraphModuleInfoService::Stub> ApiNodeGraphModuleInfoService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiNodeGraphModuleInfoService::Stub> stub(new ApiNodeGraphModuleInfoService::Stub(channel, options));
  return stub;
}

ApiNodeGraphModuleInfoService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_create1_(ApiNodeGraphModuleInfoService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destroy1_(ApiNodeGraphModuleInfoService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setCreateFunction_(ApiNodeGraphModuleInfoService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setDestroyFunction_(ApiNodeGraphModuleInfoService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setOnEvaluateFunction_(ApiNodeGraphModuleInfoService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setOnTriggerFunction_(ApiNodeGraphModuleInfoService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setOutType_(ApiNodeGraphModuleInfoService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiNodeGraphModuleInfoService::Stub::create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create1_, context, request, response);
}

void ApiNodeGraphModuleInfoService::Stub::async::create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create1_, context, request, response, std::move(f));
}

void ApiNodeGraphModuleInfoService::Stub::async::create1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* ApiNodeGraphModuleInfoService::Stub::PrepareAsynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodeGraphModuleInfo_createResponse, ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_createResponse>* ApiNodeGraphModuleInfoService::Stub::Asynccreate1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreate1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeGraphModuleInfoService::Stub::destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy1_, context, request, response);
}

void ApiNodeGraphModuleInfoService::Stub::async::destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy1_, context, request, response, std::move(f));
}

void ApiNodeGraphModuleInfoService::Stub::async::destroy1(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeGraphModuleInfoService::Stub::PrepareAsyncdestroy1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeGraphModuleInfoService::Stub::Asyncdestroy1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroy1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeGraphModuleInfoService::Stub::setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setCreateFunction_, context, request, response);
}

void ApiNodeGraphModuleInfoService::Stub::async::setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCreateFunction_, context, request, response, std::move(f));
}

void ApiNodeGraphModuleInfoService::Stub::async::setCreateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCreateFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::PrepareAsyncsetCreateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setCreateFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::AsyncsetCreateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetCreateFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeGraphModuleInfoService::Stub::setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setDestroyFunction_, context, request, response);
}

void ApiNodeGraphModuleInfoService::Stub::async::setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setDestroyFunction_, context, request, response, std::move(f));
}

void ApiNodeGraphModuleInfoService::Stub::async::setDestroyFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setDestroyFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::PrepareAsyncsetDestroyFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setDestroyFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::AsyncsetDestroyFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetDestroyFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeGraphModuleInfoService::Stub::setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setOnEvaluateFunction_, context, request, response);
}

void ApiNodeGraphModuleInfoService::Stub::async::setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setOnEvaluateFunction_, context, request, response, std::move(f));
}

void ApiNodeGraphModuleInfoService::Stub::async::setOnEvaluateFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setOnEvaluateFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::PrepareAsyncsetOnEvaluateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setOnEvaluateFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::AsyncsetOnEvaluateFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetOnEvaluateFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeGraphModuleInfoService::Stub::setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setOnTriggerFunction_, context, request, response);
}

void ApiNodeGraphModuleInfoService::Stub::async::setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setOnTriggerFunction_, context, request, response, std::move(f));
}

void ApiNodeGraphModuleInfoService::Stub::async::setOnTriggerFunction(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setOnTriggerFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::PrepareAsyncsetOnTriggerFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setOnTriggerFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse>* ApiNodeGraphModuleInfoService::Stub::AsyncsetOnTriggerFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetOnTriggerFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodeGraphModuleInfoService::Stub::setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setOutType_, context, request, response);
}

void ApiNodeGraphModuleInfoService::Stub::async::setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setOutType_, context, request, response, std::move(f));
}

void ApiNodeGraphModuleInfoService::Stub::async::setOutType(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setOutType_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeGraphModuleInfoService::Stub::PrepareAsyncsetOutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setOutType_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiNodeGraphModuleInfoService::Stub::AsyncsetOutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetOutTypeRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiNodeGraphModuleInfoService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeGraphModuleInfoService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeGraphModuleInfoService::Service, ::octaneapi::ApiNodeGraphModuleInfo_createRequest, ::octaneapi::ApiNodeGraphModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeGraphModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* req,
             ::octaneapi::ApiNodeGraphModuleInfo_createResponse* resp) {
               return service->create1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeGraphModuleInfoService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeGraphModuleInfoService::Service, ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeGraphModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeGraphModuleInfoService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeGraphModuleInfoService::Service, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeGraphModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* req,
             ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* resp) {
               return service->setCreateFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeGraphModuleInfoService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeGraphModuleInfoService::Service, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeGraphModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* req,
             ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* resp) {
               return service->setDestroyFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeGraphModuleInfoService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeGraphModuleInfoService::Service, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeGraphModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* req,
             ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* resp) {
               return service->setOnEvaluateFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeGraphModuleInfoService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeGraphModuleInfoService::Service, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeGraphModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* req,
             ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* resp) {
               return service->setOnTriggerFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodeGraphModuleInfoService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodeGraphModuleInfoService::Service, ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodeGraphModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setOutType(ctx, req, resp);
             }, this)));
}

ApiNodeGraphModuleInfoService::Service::~Service() {
}

::grpc::Status ApiNodeGraphModuleInfoService::Service::create1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_createRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeGraphModuleInfoService::Service::destroy1(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeGraphModuleInfoService::Service::setCreateFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setCreateFunctionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeGraphModuleInfoService::Service::setDestroyFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setDestroyFunctionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeGraphModuleInfoService::Service::setOnEvaluateFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnEvaluateFunctionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeGraphModuleInfoService::Service::setOnTriggerFunction(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionRequest* request, ::octaneapi::ApiNodeGraphModuleInfo_setOnTriggerFunctionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodeGraphModuleInfoService::Service::setOutType(::grpc::ServerContext* context, const ::octaneapi::ApiNodeGraphModuleInfo_setOutTypeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiWorkPaneModuleInfoService_method_names[] = {
  "/octaneapi.ApiWorkPaneModuleInfoService/create2",
  "/octaneapi.ApiWorkPaneModuleInfoService/destroy2",
  "/octaneapi.ApiWorkPaneModuleInfoService/setInitFunction",
  "/octaneapi.ApiWorkPaneModuleInfoService/setCleanupFunction",
  "/octaneapi.ApiWorkPaneModuleInfoService/setWorkPaneToolbarIds",
};

std::unique_ptr< ApiWorkPaneModuleInfoService::Stub> ApiWorkPaneModuleInfoService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiWorkPaneModuleInfoService::Stub> stub(new ApiWorkPaneModuleInfoService::Stub(channel, options));
  return stub;
}

ApiWorkPaneModuleInfoService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_create2_(ApiWorkPaneModuleInfoService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_destroy2_(ApiWorkPaneModuleInfoService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setInitFunction_(ApiWorkPaneModuleInfoService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setCleanupFunction_(ApiWorkPaneModuleInfoService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setWorkPaneToolbarIds_(ApiWorkPaneModuleInfoService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiWorkPaneModuleInfoService::Stub::create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_create2_, context, request, response);
}

void ApiWorkPaneModuleInfoService::Stub::async::create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create2_, context, request, response, std::move(f));
}

void ApiWorkPaneModuleInfoService::Stub::async::create2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_create2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* ApiWorkPaneModuleInfoService::Stub::PrepareAsynccreate2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiWorkPaneModuleInfo_createResponse, ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_create2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_createResponse>* ApiWorkPaneModuleInfoService::Stub::Asynccreate2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreate2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiWorkPaneModuleInfoService::Stub::destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_destroy2_, context, request, response);
}

void ApiWorkPaneModuleInfoService::Stub::async::destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy2_, context, request, response, std::move(f));
}

void ApiWorkPaneModuleInfoService::Stub::async::destroy2(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_destroy2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiWorkPaneModuleInfoService::Stub::PrepareAsyncdestroy2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_destroy2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiWorkPaneModuleInfoService::Stub::Asyncdestroy2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdestroy2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiWorkPaneModuleInfoService::Stub::setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setInitFunction_, context, request, response);
}

void ApiWorkPaneModuleInfoService::Stub::async::setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setInitFunction_, context, request, response, std::move(f));
}

void ApiWorkPaneModuleInfoService::Stub::async::setInitFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setInitFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* ApiWorkPaneModuleInfoService::Stub::PrepareAsyncsetInitFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setInitFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse>* ApiWorkPaneModuleInfoService::Stub::AsyncsetInitFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetInitFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiWorkPaneModuleInfoService::Stub::setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setCleanupFunction_, context, request, response);
}

void ApiWorkPaneModuleInfoService::Stub::async::setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCleanupFunction_, context, request, response, std::move(f));
}

void ApiWorkPaneModuleInfoService::Stub::async::setCleanupFunction(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCleanupFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* ApiWorkPaneModuleInfoService::Stub::PrepareAsyncsetCleanupFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setCleanupFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse>* ApiWorkPaneModuleInfoService::Stub::AsyncsetCleanupFunctionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetCleanupFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiWorkPaneModuleInfoService::Stub::setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setWorkPaneToolbarIds_, context, request, response);
}

void ApiWorkPaneModuleInfoService::Stub::async::setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setWorkPaneToolbarIds_, context, request, response, std::move(f));
}

void ApiWorkPaneModuleInfoService::Stub::async::setWorkPaneToolbarIds(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setWorkPaneToolbarIds_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiWorkPaneModuleInfoService::Stub::PrepareAsyncsetWorkPaneToolbarIdsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setWorkPaneToolbarIds_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiWorkPaneModuleInfoService::Stub::AsyncsetWorkPaneToolbarIdsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetWorkPaneToolbarIdsRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiWorkPaneModuleInfoService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiWorkPaneModuleInfoService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiWorkPaneModuleInfoService::Service, ::octaneapi::ApiWorkPaneModuleInfo_createRequest, ::octaneapi::ApiWorkPaneModuleInfo_createResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiWorkPaneModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* req,
             ::octaneapi::ApiWorkPaneModuleInfo_createResponse* resp) {
               return service->create2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiWorkPaneModuleInfoService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiWorkPaneModuleInfoService::Service, ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiWorkPaneModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->destroy2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiWorkPaneModuleInfoService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiWorkPaneModuleInfoService::Service, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiWorkPaneModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* req,
             ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* resp) {
               return service->setInitFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiWorkPaneModuleInfoService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiWorkPaneModuleInfoService::Service, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiWorkPaneModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* req,
             ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* resp) {
               return service->setCleanupFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiWorkPaneModuleInfoService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiWorkPaneModuleInfoService::Service, ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiWorkPaneModuleInfoService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->setWorkPaneToolbarIds(ctx, req, resp);
             }, this)));
}

ApiWorkPaneModuleInfoService::Service::~Service() {
}

::grpc::Status ApiWorkPaneModuleInfoService::Service::create2(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_createRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_createResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiWorkPaneModuleInfoService::Service::destroy2(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_destroyRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiWorkPaneModuleInfoService::Service::setInitFunction(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setInitFunctionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiWorkPaneModuleInfoService::Service::setCleanupFunction(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionRequest* request, ::octaneapi::ApiWorkPaneModuleInfo_setCleanupFunctionResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiWorkPaneModuleInfoService::Service::setWorkPaneToolbarIds(::grpc::ServerContext* context, const ::octaneapi::ApiWorkPaneModuleInfo_setWorkPaneToolbarIdsRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

