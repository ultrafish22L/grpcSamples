// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apiociocontextmanager.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_apiociocontextmanager_2eproto__INCLUDED
#define GRPC_apiociocontextmanager_2eproto__INCLUDED

#include "apiociocontextmanager.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiOcioContextManager' from 'apiociocontextmanager.h'
class ApiOcioContextManagerService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiOcioContextManagerService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Guesses the best values to use for the intermediate color space based on the names of color
    // / spaces in the OCIO config
    virtual ::grpc::Status guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>> AsyncguessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>>(AsyncguessIntermediateColorSpaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>> PrepareAsyncguessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>>(PrepareAsyncguessIntermediateColorSpaceRaw(context, request, cq));
    }
    // / 
    virtual ::grpc::Status create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::octaneapi::ApiOcioContextManager_createResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createResponse>> Asynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createResponse>>(AsynccreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createResponse>> PrepareAsynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createResponse>>(PrepareAsynccreateRaw(context, request, cq));
    }
    // / Must not be called from a callback function
    virtual ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    // / Registers a callback to be called when the current OCIO context changes
    virtual ::grpc::Status addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_addCallbackResponse>> AsyncaddCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_addCallbackResponse>>(AsyncaddCallbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_addCallbackResponse>> PrepareAsyncaddCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_addCallbackResponse>>(PrepareAsyncaddCallbackRaw(context, request, cq));
    }
    // / Deregisters a callback that was registered with addCallback
    virtual ::grpc::Status removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>> AsyncremoveCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>>(AsyncremoveCallbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>> PrepareAsyncremoveCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>>(PrepareAsyncremoveCallbackRaw(context, request, cq));
    }
    // / Gets the filename of the default config to use if it is not overridden by local preferences
    virtual ::grpc::Status getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>> AsyncgetDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>>(AsyncgetDefaultConfigFilenameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>> PrepareAsyncgetDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>>(PrepareAsyncgetDefaultConfigFilenameRaw(context, request, cq));
    }
    // / Gets the most recent config filename that we tried to load
    virtual ::grpc::Status getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>> AsyncgetLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>>(AsyncgetLastConfigLoadFilenameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>> PrepareAsyncgetLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>>(PrepareAsyncgetLastConfigLoadFilenameRaw(context, request, cq));
    }
    // / Gets the config of the current context, if there is a config loaded
    virtual ::grpc::Status createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createConfigResponse>> AsynccreateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createConfigResponse>>(AsynccreateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createConfigResponse>> PrepareAsynccreateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createConfigResponse>>(PrepareAsynccreateConfigRaw(context, request, cq));
    }
    // / Gets whether the current context is suitable for use by the renderer for color conversions
    virtual ::grpc::Status getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>> AsyncgetContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>>(AsyncgetContextUsableForConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>> PrepareAsyncgetContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>>(PrepareAsyncgetContextUsableForConversionRaw(context, request, cq));
    }
    // / Sets the current config
    virtual ::grpc::Status donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdonateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdonateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdonateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdonateConfigRaw(context, request, cq));
    }
    // / This should be called after calling donateConfig and changing local preferences, to handle
    // / the case where the local preferences technically didn't change (because filenames etc
    virtual ::grpc::Status handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsynchandlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynchandlePendingConfigDonationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynchandlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynchandlePendingConfigDonationRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Guesses the best values to use for the intermediate color space based on the names of color
      // / spaces in the OCIO config
      virtual void guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / 
      virtual void create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Must not be called from a callback function
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Registers a callback to be called when the current OCIO context changes
      virtual void addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Deregisters a callback that was registered with addCallback
      virtual void removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Gets the filename of the default config to use if it is not overridden by local preferences
      virtual void getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Gets the most recent config filename that we tried to load
      virtual void getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Gets the config of the current context, if there is a config loaded
      virtual void createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Gets whether the current context is suitable for use by the renderer for color conversions
      virtual void getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the current config
      virtual void donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / This should be called after calling donateConfig and changing local preferences, to handle
      // / the case where the local preferences technically didn't change (because filenames etc
      virtual void handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* AsyncguessIntermediateColorSpaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* PrepareAsyncguessIntermediateColorSpaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createResponse>* AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createResponse>* PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_addCallbackResponse>* AsyncaddCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_addCallbackResponse>* PrepareAsyncaddCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* AsyncremoveCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* PrepareAsyncremoveCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* AsyncgetDefaultConfigFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* PrepareAsyncgetDefaultConfigFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* AsyncgetLastConfigLoadFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* PrepareAsyncgetLastConfigLoadFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createConfigResponse>* AsynccreateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_createConfigResponse>* PrepareAsynccreateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* AsyncgetContextUsableForConversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* PrepareAsyncgetContextUsableForConversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdonateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdonateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynchandlePendingConfigDonationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynchandlePendingConfigDonationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>> AsyncguessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>>(AsyncguessIntermediateColorSpaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>> PrepareAsyncguessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>>(PrepareAsyncguessIntermediateColorSpaceRaw(context, request, cq));
    }
    ::grpc::Status create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::octaneapi::ApiOcioContextManager_createResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>> Asynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>>(AsynccreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>> PrepareAsynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>>(PrepareAsynccreateRaw(context, request, cq));
    }
    ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    ::grpc::Status addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>> AsyncaddCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>>(AsyncaddCallbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>> PrepareAsyncaddCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>>(PrepareAsyncaddCallbackRaw(context, request, cq));
    }
    ::grpc::Status removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>> AsyncremoveCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>>(AsyncremoveCallbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>> PrepareAsyncremoveCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>>(PrepareAsyncremoveCallbackRaw(context, request, cq));
    }
    ::grpc::Status getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>> AsyncgetDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>>(AsyncgetDefaultConfigFilenameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>> PrepareAsyncgetDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>>(PrepareAsyncgetDefaultConfigFilenameRaw(context, request, cq));
    }
    ::grpc::Status getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>> AsyncgetLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>>(AsyncgetLastConfigLoadFilenameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>> PrepareAsyncgetLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>>(PrepareAsyncgetLastConfigLoadFilenameRaw(context, request, cq));
    }
    ::grpc::Status createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>> AsynccreateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>>(AsynccreateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>> PrepareAsynccreateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>>(PrepareAsynccreateConfigRaw(context, request, cq));
    }
    ::grpc::Status getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>> AsyncgetContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>>(AsyncgetContextUsableForConversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>> PrepareAsyncgetContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>>(PrepareAsyncgetContextUsableForConversionRaw(context, request, cq));
    }
    ::grpc::Status donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdonateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdonateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdonateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdonateConfigRaw(context, request, cq));
    }
    ::grpc::Status handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsynchandlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynchandlePendingConfigDonationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynchandlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynchandlePendingConfigDonationRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response, std::function<void(::grpc::Status)>) override;
      void guessIntermediateColorSpace(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response, std::function<void(::grpc::Status)>) override;
      void create(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response, std::function<void(::grpc::Status)>) override;
      void addCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response, std::function<void(::grpc::Status)>) override;
      void removeCallback(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response, std::function<void(::grpc::Status)>) override;
      void getDefaultConfigFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response, std::function<void(::grpc::Status)>) override;
      void getLastConfigLoadFilename(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void createConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response, std::function<void(::grpc::Status)>) override;
      void getContextUsableForConversion(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void donateConfig(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void handlePendingConfigDonation(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* AsyncguessIntermediateColorSpaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* PrepareAsyncguessIntermediateColorSpaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>* AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createResponse>* PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>* AsyncaddCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_addCallbackResponse>* PrepareAsyncaddCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* AsyncremoveCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* PrepareAsyncremoveCallbackRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* AsyncgetDefaultConfigFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* PrepareAsyncgetDefaultConfigFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* AsyncgetLastConfigLoadFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* PrepareAsyncgetLastConfigLoadFilenameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>* AsynccreateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_createConfigResponse>* PrepareAsynccreateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* AsyncgetContextUsableForConversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* PrepareAsyncgetContextUsableForConversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdonateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdonateConfigRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynchandlePendingConfigDonationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynchandlePendingConfigDonationRaw(::grpc::ClientContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_guessIntermediateColorSpace_;
    const ::grpc::internal::RpcMethod rpcmethod_create_;
    const ::grpc::internal::RpcMethod rpcmethod_destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_addCallback_;
    const ::grpc::internal::RpcMethod rpcmethod_removeCallback_;
    const ::grpc::internal::RpcMethod rpcmethod_getDefaultConfigFilename_;
    const ::grpc::internal::RpcMethod rpcmethod_getLastConfigLoadFilename_;
    const ::grpc::internal::RpcMethod rpcmethod_createConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_getContextUsableForConversion_;
    const ::grpc::internal::RpcMethod rpcmethod_donateConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_handlePendingConfigDonation_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Guesses the best values to use for the intermediate color space based on the names of color
    // / spaces in the OCIO config
    virtual ::grpc::Status guessIntermediateColorSpace(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response);
    // / 
    virtual ::grpc::Status create(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response);
    // / Must not be called from a callback function
    virtual ::grpc::Status destroy(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response);
    // / Registers a callback to be called when the current OCIO context changes
    virtual ::grpc::Status addCallback(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response);
    // / Deregisters a callback that was registered with addCallback
    virtual ::grpc::Status removeCallback(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response);
    // / Gets the filename of the default config to use if it is not overridden by local preferences
    virtual ::grpc::Status getDefaultConfigFilename(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response);
    // / Gets the most recent config filename that we tried to load
    virtual ::grpc::Status getLastConfigLoadFilename(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response);
    // / Gets the config of the current context, if there is a config loaded
    virtual ::grpc::Status createConfig(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response);
    // / Gets whether the current context is suitable for use by the renderer for color conversions
    virtual ::grpc::Status getContextUsableForConversion(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response);
    // / Sets the current config
    virtual ::grpc::Status donateConfig(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response);
    // / This should be called after calling donateConfig and changing local preferences, to handle
    // / the case where the local preferences technically didn't change (because filenames etc
    virtual ::grpc::Status handlePendingConfigDonation(::grpc::ServerContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_guessIntermediateColorSpace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_guessIntermediateColorSpace() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_guessIntermediateColorSpace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status guessIntermediateColorSpace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* /*request*/, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestguessIntermediateColorSpace(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_createRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_createResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_destroy() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_addCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_addCallback() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_addCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_addCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddCallback(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_addCallbackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_removeCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_removeCallback() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_removeCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestremoveCallback(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getDefaultConfigFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getDefaultConfigFilename() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_getDefaultConfigFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDefaultConfigFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetDefaultConfigFilename(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getLastConfigLoadFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getLastConfigLoadFilename() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_getLastConfigLoadFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getLastConfigLoadFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetLastConfigLoadFilename(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_createConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_createConfig() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_createConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createConfigRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateConfig(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_createConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getContextUsableForConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getContextUsableForConversion() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_getContextUsableForConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getContextUsableForConversion(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetContextUsableForConversion(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_donateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_donateConfig() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_donateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status donateConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdonateConfig(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_handlePendingConfigDonation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_handlePendingConfigDonation() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_handlePendingConfigDonation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status handlePendingConfigDonation(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthandlePendingConfigDonation(::grpc::ServerContext* context, ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_guessIntermediateColorSpace<WithAsyncMethod_create<WithAsyncMethod_destroy<WithAsyncMethod_addCallback<WithAsyncMethod_removeCallback<WithAsyncMethod_getDefaultConfigFilename<WithAsyncMethod_getLastConfigLoadFilename<WithAsyncMethod_createConfig<WithAsyncMethod_getContextUsableForConversion<WithAsyncMethod_donateConfig<WithAsyncMethod_handlePendingConfigDonation<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_guessIntermediateColorSpace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_guessIntermediateColorSpace() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* request, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* response) { return this->guessIntermediateColorSpace(context, request, response); }));}
    void SetMessageAllocatorFor_guessIntermediateColorSpace(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_guessIntermediateColorSpace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status guessIntermediateColorSpace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* /*request*/, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* guessIntermediateColorSpace(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* /*request*/, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_createRequest* request, ::octaneapi::ApiOcioContextManager_createResponse* response) { return this->create(context, request, response); }));}
    void SetMessageAllocatorFor_create(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_destroyRequest* request, ::google::protobuf::Empty* response) { return this->destroy(context, request, response); }));}
    void SetMessageAllocatorFor_destroy(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_addCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_addCallback() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* request, ::octaneapi::ApiOcioContextManager_addCallbackResponse* response) { return this->addCallback(context, request, response); }));}
    void SetMessageAllocatorFor_addCallback(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_addCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_addCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addCallback(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_addCallbackResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_removeCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_removeCallback() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* request, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* response) { return this->removeCallback(context, request, response); }));}
    void SetMessageAllocatorFor_removeCallback(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_removeCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* removeCallback(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getDefaultConfigFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getDefaultConfigFilename() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* response) { return this->getDefaultConfigFilename(context, request, response); }));}
    void SetMessageAllocatorFor_getDefaultConfigFilename(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getDefaultConfigFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDefaultConfigFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getDefaultConfigFilename(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getLastConfigLoadFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getLastConfigLoadFilename() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* request, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* response) { return this->getLastConfigLoadFilename(context, request, response); }));}
    void SetMessageAllocatorFor_getLastConfigLoadFilename(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getLastConfigLoadFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getLastConfigLoadFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getLastConfigLoadFilename(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_createConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_createConfig() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_createConfigRequest* request, ::octaneapi::ApiOcioContextManager_createConfigResponse* response) { return this->createConfig(context, request, response); }));}
    void SetMessageAllocatorFor_createConfig(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_createConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createConfigRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createConfigRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getContextUsableForConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getContextUsableForConversion() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* request, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* response) { return this->getContextUsableForConversion(context, request, response); }));}
    void SetMessageAllocatorFor_getContextUsableForConversion(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getContextUsableForConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getContextUsableForConversion(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getContextUsableForConversion(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_donateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_donateConfig() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* request, ::google::protobuf::Empty* response) { return this->donateConfig(context, request, response); }));}
    void SetMessageAllocatorFor_donateConfig(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_donateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status donateConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* donateConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_handlePendingConfigDonation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_handlePendingConfigDonation() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* request, ::google::protobuf::Empty* response) { return this->handlePendingConfigDonation(context, request, response); }));}
    void SetMessageAllocatorFor_handlePendingConfigDonation(
        ::grpc::MessageAllocator< ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_handlePendingConfigDonation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status handlePendingConfigDonation(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* handlePendingConfigDonation(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_guessIntermediateColorSpace<WithCallbackMethod_create<WithCallbackMethod_destroy<WithCallbackMethod_addCallback<WithCallbackMethod_removeCallback<WithCallbackMethod_getDefaultConfigFilename<WithCallbackMethod_getLastConfigLoadFilename<WithCallbackMethod_createConfig<WithCallbackMethod_getContextUsableForConversion<WithCallbackMethod_donateConfig<WithCallbackMethod_handlePendingConfigDonation<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_guessIntermediateColorSpace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_guessIntermediateColorSpace() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_guessIntermediateColorSpace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status guessIntermediateColorSpace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* /*request*/, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_destroy() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_addCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_addCallback() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_addCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_addCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_removeCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_removeCallback() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_removeCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getDefaultConfigFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getDefaultConfigFilename() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_getDefaultConfigFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDefaultConfigFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getLastConfigLoadFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getLastConfigLoadFilename() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_getLastConfigLoadFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getLastConfigLoadFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_createConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_createConfig() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_createConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createConfigRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getContextUsableForConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getContextUsableForConversion() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_getContextUsableForConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getContextUsableForConversion(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_donateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_donateConfig() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_donateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status donateConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_handlePendingConfigDonation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_handlePendingConfigDonation() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_handlePendingConfigDonation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status handlePendingConfigDonation(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_guessIntermediateColorSpace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_guessIntermediateColorSpace() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_guessIntermediateColorSpace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status guessIntermediateColorSpace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* /*request*/, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestguessIntermediateColorSpace(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_destroy() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_addCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_addCallback() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_addCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_addCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddCallback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_removeCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_removeCallback() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_removeCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestremoveCallback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getDefaultConfigFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getDefaultConfigFilename() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_getDefaultConfigFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDefaultConfigFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetDefaultConfigFilename(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getLastConfigLoadFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getLastConfigLoadFilename() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_getLastConfigLoadFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getLastConfigLoadFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetLastConfigLoadFilename(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_createConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_createConfig() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_createConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createConfigRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcreateConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getContextUsableForConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getContextUsableForConversion() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_getContextUsableForConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getContextUsableForConversion(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetContextUsableForConversion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_donateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_donateConfig() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_donateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status donateConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdonateConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_handlePendingConfigDonation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_handlePendingConfigDonation() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_handlePendingConfigDonation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status handlePendingConfigDonation(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthandlePendingConfigDonation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_guessIntermediateColorSpace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_guessIntermediateColorSpace() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->guessIntermediateColorSpace(context, request, response); }));
    }
    ~WithRawCallbackMethod_guessIntermediateColorSpace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status guessIntermediateColorSpace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* /*request*/, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* guessIntermediateColorSpace(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->create(context, request, response); }));
    }
    ~WithRawCallbackMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_addCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_addCallback() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->addCallback(context, request, response); }));
    }
    ~WithRawCallbackMethod_addCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_addCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addCallback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_removeCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_removeCallback() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->removeCallback(context, request, response); }));
    }
    ~WithRawCallbackMethod_removeCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status removeCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* removeCallback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getDefaultConfigFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getDefaultConfigFilename() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getDefaultConfigFilename(context, request, response); }));
    }
    ~WithRawCallbackMethod_getDefaultConfigFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getDefaultConfigFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getDefaultConfigFilename(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getLastConfigLoadFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getLastConfigLoadFilename() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getLastConfigLoadFilename(context, request, response); }));
    }
    ~WithRawCallbackMethod_getLastConfigLoadFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getLastConfigLoadFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getLastConfigLoadFilename(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_createConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_createConfig() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->createConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_createConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status createConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createConfigRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* createConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getContextUsableForConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getContextUsableForConversion() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getContextUsableForConversion(context, request, response); }));
    }
    ~WithRawCallbackMethod_getContextUsableForConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getContextUsableForConversion(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getContextUsableForConversion(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_donateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_donateConfig() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->donateConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_donateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status donateConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* donateConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_handlePendingConfigDonation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_handlePendingConfigDonation() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->handlePendingConfigDonation(context, request, response); }));
    }
    ~WithRawCallbackMethod_handlePendingConfigDonation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status handlePendingConfigDonation(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* handlePendingConfigDonation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_guessIntermediateColorSpace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_guessIntermediateColorSpace() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* streamer) {
                       return this->StreamedguessIntermediateColorSpace(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_guessIntermediateColorSpace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status guessIntermediateColorSpace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest* /*request*/, ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedguessIntermediateColorSpace(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceRequest,::octaneapi::ApiOcioContextManager_guessIntermediateColorSpaceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_create() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_createRequest, ::octaneapi::ApiOcioContextManager_createResponse>* streamer) {
                       return this->Streamedcreate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcreate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_createRequest,::octaneapi::ApiOcioContextManager_createResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_destroy() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_destroyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streameddestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_destroyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_addCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_addCallback() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_addCallbackRequest, ::octaneapi::ApiOcioContextManager_addCallbackResponse>* streamer) {
                       return this->StreamedaddCallback(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_addCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status addCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_addCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_addCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedaddCallback(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_addCallbackRequest,::octaneapi::ApiOcioContextManager_addCallbackResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_removeCallback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_removeCallback() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_removeCallbackRequest, ::octaneapi::ApiOcioContextManager_removeCallbackResponse>* streamer) {
                       return this->StreamedremoveCallback(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_removeCallback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status removeCallback(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_removeCallbackRequest* /*request*/, ::octaneapi::ApiOcioContextManager_removeCallbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedremoveCallback(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_removeCallbackRequest,::octaneapi::ApiOcioContextManager_removeCallbackResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getDefaultConfigFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getDefaultConfigFilename() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* streamer) {
                       return this->StreamedgetDefaultConfigFilename(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getDefaultConfigFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getDefaultConfigFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetDefaultConfigFilename(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameRequest,::octaneapi::ApiOcioContextManager_getDefaultConfigFilenameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getLastConfigLoadFilename : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getLastConfigLoadFilename() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* streamer) {
                       return this->StreamedgetLastConfigLoadFilename(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getLastConfigLoadFilename() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getLastConfigLoadFilename(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetLastConfigLoadFilename(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameRequest,::octaneapi::ApiOcioContextManager_getLastConfigLoadFilenameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_createConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_createConfig() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_createConfigRequest, ::octaneapi::ApiOcioContextManager_createConfigResponse>* streamer) {
                       return this->StreamedcreateConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_createConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status createConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_createConfigRequest* /*request*/, ::octaneapi::ApiOcioContextManager_createConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcreateConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_createConfigRequest,::octaneapi::ApiOcioContextManager_createConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getContextUsableForConversion : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getContextUsableForConversion() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* streamer) {
                       return this->StreamedgetContextUsableForConversion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getContextUsableForConversion() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getContextUsableForConversion(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest* /*request*/, ::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetContextUsableForConversion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_getContextUsableForConversionRequest,::octaneapi::ApiOcioContextManager_getContextUsableForConversionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_donateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_donateConfig() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_donateConfigRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddonateConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_donateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status donateConfig(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_donateConfigRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddonateConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_donateConfigRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_handlePendingConfigDonation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_handlePendingConfigDonation() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedhandlePendingConfigDonation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_handlePendingConfigDonation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status handlePendingConfigDonation(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedhandlePendingConfigDonation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiOcioContextManager_handlePendingConfigDonationRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_guessIntermediateColorSpace<WithStreamedUnaryMethod_create<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_addCallback<WithStreamedUnaryMethod_removeCallback<WithStreamedUnaryMethod_getDefaultConfigFilename<WithStreamedUnaryMethod_getLastConfigLoadFilename<WithStreamedUnaryMethod_createConfig<WithStreamedUnaryMethod_getContextUsableForConversion<WithStreamedUnaryMethod_donateConfig<WithStreamedUnaryMethod_handlePendingConfigDonation<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_guessIntermediateColorSpace<WithStreamedUnaryMethod_create<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_addCallback<WithStreamedUnaryMethod_removeCallback<WithStreamedUnaryMethod_getDefaultConfigFilename<WithStreamedUnaryMethod_getLastConfigLoadFilename<WithStreamedUnaryMethod_createConfig<WithStreamedUnaryMethod_getContextUsableForConversion<WithStreamedUnaryMethod_donateConfig<WithStreamedUnaryMethod_handlePendingConfigDonation<Service > > > > > > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apiociocontextmanager_2eproto__INCLUDED
