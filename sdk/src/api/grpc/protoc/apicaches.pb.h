// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: apicaches.proto
// Protobuf C++ Version: 6.31.1

#ifndef apicaches_2eproto_2epb_2eh
#define apicaches_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
#include "google/protobuf/empty.pb.h"
#include "octaneenums.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_apicaches_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_apicaches_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_apicaches_2eproto;
}  // extern "C"
namespace octaneapi {
class ApiCaches;
struct ApiCachesDefaultTypeInternal;
extern ApiCachesDefaultTypeInternal _ApiCaches_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_class_data_;
class ApiCaches_checkVirtualTextureStatusRequest;
struct ApiCaches_checkVirtualTextureStatusRequestDefaultTypeInternal;
extern ApiCaches_checkVirtualTextureStatusRequestDefaultTypeInternal _ApiCaches_checkVirtualTextureStatusRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_checkVirtualTextureStatusRequest_class_data_;
class ApiCaches_checkVirtualTextureStatusResponse;
struct ApiCaches_checkVirtualTextureStatusResponseDefaultTypeInternal;
extern ApiCaches_checkVirtualTextureStatusResponseDefaultTypeInternal _ApiCaches_checkVirtualTextureStatusResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_checkVirtualTextureStatusResponse_class_data_;
class ApiCaches_clearMeshletCacheRequest;
struct ApiCaches_clearMeshletCacheRequestDefaultTypeInternal;
extern ApiCaches_clearMeshletCacheRequestDefaultTypeInternal _ApiCaches_clearMeshletCacheRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_clearMeshletCacheRequest_class_data_;
class ApiCaches_clearVirtualTextureCacheForNodeRequest;
struct ApiCaches_clearVirtualTextureCacheForNodeRequestDefaultTypeInternal;
extern ApiCaches_clearVirtualTextureCacheForNodeRequestDefaultTypeInternal _ApiCaches_clearVirtualTextureCacheForNodeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_clearVirtualTextureCacheForNodeRequest_class_data_;
class ApiCaches_clearVirtualTextureCacheForNodeResponse;
struct ApiCaches_clearVirtualTextureCacheForNodeResponseDefaultTypeInternal;
extern ApiCaches_clearVirtualTextureCacheForNodeResponseDefaultTypeInternal _ApiCaches_clearVirtualTextureCacheForNodeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_clearVirtualTextureCacheForNodeResponse_class_data_;
class ApiCaches_getMeshletCacheSizeRequest;
struct ApiCaches_getMeshletCacheSizeRequestDefaultTypeInternal;
extern ApiCaches_getMeshletCacheSizeRequestDefaultTypeInternal _ApiCaches_getMeshletCacheSizeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheSizeRequest_class_data_;
class ApiCaches_getMeshletCacheSizeResponse;
struct ApiCaches_getMeshletCacheSizeResponseDefaultTypeInternal;
extern ApiCaches_getMeshletCacheSizeResponseDefaultTypeInternal _ApiCaches_getMeshletCacheSizeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheSizeResponse_class_data_;
class ApiCaches_getMeshletCacheUsedSizeRequest;
struct ApiCaches_getMeshletCacheUsedSizeRequestDefaultTypeInternal;
extern ApiCaches_getMeshletCacheUsedSizeRequestDefaultTypeInternal _ApiCaches_getMeshletCacheUsedSizeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheUsedSizeRequest_class_data_;
class ApiCaches_getMeshletCacheUsedSizeResponse;
struct ApiCaches_getMeshletCacheUsedSizeResponseDefaultTypeInternal;
extern ApiCaches_getMeshletCacheUsedSizeResponseDefaultTypeInternal _ApiCaches_getMeshletCacheUsedSizeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheUsedSizeResponse_class_data_;
class ApiCaches_getVirtualTextureCacheSizeRequest;
struct ApiCaches_getVirtualTextureCacheSizeRequestDefaultTypeInternal;
extern ApiCaches_getVirtualTextureCacheSizeRequestDefaultTypeInternal _ApiCaches_getVirtualTextureCacheSizeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheSizeRequest_class_data_;
class ApiCaches_getVirtualTextureCacheSizeResponse;
struct ApiCaches_getVirtualTextureCacheSizeResponseDefaultTypeInternal;
extern ApiCaches_getVirtualTextureCacheSizeResponseDefaultTypeInternal _ApiCaches_getVirtualTextureCacheSizeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheSizeResponse_class_data_;
class ApiCaches_getVirtualTextureCacheUsedSizeRequest;
struct ApiCaches_getVirtualTextureCacheUsedSizeRequestDefaultTypeInternal;
extern ApiCaches_getVirtualTextureCacheUsedSizeRequestDefaultTypeInternal _ApiCaches_getVirtualTextureCacheUsedSizeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheUsedSizeRequest_class_data_;
class ApiCaches_getVirtualTextureCacheUsedSizeResponse;
struct ApiCaches_getVirtualTextureCacheUsedSizeResponseDefaultTypeInternal;
extern ApiCaches_getVirtualTextureCacheUsedSizeResponseDefaultTypeInternal _ApiCaches_getVirtualTextureCacheUsedSizeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheUsedSizeResponse_class_data_;
class ApiCaches_pruneVirtualTextureCacheRequest;
struct ApiCaches_pruneVirtualTextureCacheRequestDefaultTypeInternal;
extern ApiCaches_pruneVirtualTextureCacheRequestDefaultTypeInternal _ApiCaches_pruneVirtualTextureCacheRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApiCaches_pruneVirtualTextureCacheRequest_class_data_;
}  // namespace octaneapi
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace octaneapi {

// ===================================================================


// -------------------------------------------------------------------

class ApiCaches_pruneVirtualTextureCacheRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.pruneVirtualTextureCacheRequest) */ {
 public:
  inline ApiCaches_pruneVirtualTextureCacheRequest() : ApiCaches_pruneVirtualTextureCacheRequest(nullptr) {}
  ~ApiCaches_pruneVirtualTextureCacheRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_pruneVirtualTextureCacheRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_pruneVirtualTextureCacheRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_pruneVirtualTextureCacheRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_pruneVirtualTextureCacheRequest(const ApiCaches_pruneVirtualTextureCacheRequest& from) : ApiCaches_pruneVirtualTextureCacheRequest(nullptr, from) {}
  inline ApiCaches_pruneVirtualTextureCacheRequest(ApiCaches_pruneVirtualTextureCacheRequest&& from) noexcept
      : ApiCaches_pruneVirtualTextureCacheRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_pruneVirtualTextureCacheRequest& operator=(const ApiCaches_pruneVirtualTextureCacheRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_pruneVirtualTextureCacheRequest& operator=(ApiCaches_pruneVirtualTextureCacheRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_pruneVirtualTextureCacheRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_pruneVirtualTextureCacheRequest*>(
        &_ApiCaches_pruneVirtualTextureCacheRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ApiCaches_pruneVirtualTextureCacheRequest& a, ApiCaches_pruneVirtualTextureCacheRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_pruneVirtualTextureCacheRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_pruneVirtualTextureCacheRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_pruneVirtualTextureCacheRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_pruneVirtualTextureCacheRequest>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_pruneVirtualTextureCacheRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.pruneVirtualTextureCacheRequest"; }

 protected:
  explicit ApiCaches_pruneVirtualTextureCacheRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_pruneVirtualTextureCacheRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_pruneVirtualTextureCacheRequest& from);
  ApiCaches_pruneVirtualTextureCacheRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_pruneVirtualTextureCacheRequest&& from) noexcept
      : ApiCaches_pruneVirtualTextureCacheRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMaximumSizeFieldNumber = 1,
  };
  // uint64 maximumSize = 1;
  void clear_maximumsize() ;
  ::uint64_t maximumsize() const;
  void set_maximumsize(::uint64_t value);

  private:
  ::uint64_t _internal_maximumsize() const;
  void _internal_set_maximumsize(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.pruneVirtualTextureCacheRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_pruneVirtualTextureCacheRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t maximumsize_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_pruneVirtualTextureCacheRequest_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getVirtualTextureCacheUsedSizeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeResponse) */ {
 public:
  inline ApiCaches_getVirtualTextureCacheUsedSizeResponse() : ApiCaches_getVirtualTextureCacheUsedSizeResponse(nullptr) {}
  ~ApiCaches_getVirtualTextureCacheUsedSizeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getVirtualTextureCacheUsedSizeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getVirtualTextureCacheUsedSizeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getVirtualTextureCacheUsedSizeResponse(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getVirtualTextureCacheUsedSizeResponse(const ApiCaches_getVirtualTextureCacheUsedSizeResponse& from) : ApiCaches_getVirtualTextureCacheUsedSizeResponse(nullptr, from) {}
  inline ApiCaches_getVirtualTextureCacheUsedSizeResponse(ApiCaches_getVirtualTextureCacheUsedSizeResponse&& from) noexcept
      : ApiCaches_getVirtualTextureCacheUsedSizeResponse(nullptr, ::std::move(from)) {}
  inline ApiCaches_getVirtualTextureCacheUsedSizeResponse& operator=(const ApiCaches_getVirtualTextureCacheUsedSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getVirtualTextureCacheUsedSizeResponse& operator=(ApiCaches_getVirtualTextureCacheUsedSizeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getVirtualTextureCacheUsedSizeResponse& default_instance() {
    return *reinterpret_cast<const ApiCaches_getVirtualTextureCacheUsedSizeResponse*>(
        &_ApiCaches_getVirtualTextureCacheUsedSizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ApiCaches_getVirtualTextureCacheUsedSizeResponse& a, ApiCaches_getVirtualTextureCacheUsedSizeResponse& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getVirtualTextureCacheUsedSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getVirtualTextureCacheUsedSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getVirtualTextureCacheUsedSizeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_getVirtualTextureCacheUsedSizeResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_getVirtualTextureCacheUsedSizeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeResponse"; }

 protected:
  explicit ApiCaches_getVirtualTextureCacheUsedSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getVirtualTextureCacheUsedSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getVirtualTextureCacheUsedSizeResponse& from);
  ApiCaches_getVirtualTextureCacheUsedSizeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getVirtualTextureCacheUsedSizeResponse&& from) noexcept
      : ApiCaches_getVirtualTextureCacheUsedSizeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint64 result = 1;
  void clear_result() ;
  ::uint64_t result() const;
  void set_result(::uint64_t value);

  private:
  ::uint64_t _internal_result() const;
  void _internal_set_result(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getVirtualTextureCacheUsedSizeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheUsedSizeResponse_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getVirtualTextureCacheUsedSizeRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeRequest) */ {
 public:
  inline ApiCaches_getVirtualTextureCacheUsedSizeRequest() : ApiCaches_getVirtualTextureCacheUsedSizeRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getVirtualTextureCacheUsedSizeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getVirtualTextureCacheUsedSizeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getVirtualTextureCacheUsedSizeRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getVirtualTextureCacheUsedSizeRequest(const ApiCaches_getVirtualTextureCacheUsedSizeRequest& from) : ApiCaches_getVirtualTextureCacheUsedSizeRequest(nullptr, from) {}
  inline ApiCaches_getVirtualTextureCacheUsedSizeRequest(ApiCaches_getVirtualTextureCacheUsedSizeRequest&& from) noexcept
      : ApiCaches_getVirtualTextureCacheUsedSizeRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_getVirtualTextureCacheUsedSizeRequest& operator=(const ApiCaches_getVirtualTextureCacheUsedSizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getVirtualTextureCacheUsedSizeRequest& operator=(ApiCaches_getVirtualTextureCacheUsedSizeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getVirtualTextureCacheUsedSizeRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_getVirtualTextureCacheUsedSizeRequest*>(
        &_ApiCaches_getVirtualTextureCacheUsedSizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ApiCaches_getVirtualTextureCacheUsedSizeRequest& a, ApiCaches_getVirtualTextureCacheUsedSizeRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getVirtualTextureCacheUsedSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getVirtualTextureCacheUsedSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getVirtualTextureCacheUsedSizeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ApiCaches_getVirtualTextureCacheUsedSizeRequest>(arena);
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeRequest"; }

 protected:
  explicit ApiCaches_getVirtualTextureCacheUsedSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getVirtualTextureCacheUsedSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getVirtualTextureCacheUsedSizeRequest& from);
  ApiCaches_getVirtualTextureCacheUsedSizeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getVirtualTextureCacheUsedSizeRequest&& from) noexcept
      : ApiCaches_getVirtualTextureCacheUsedSizeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getVirtualTextureCacheUsedSizeRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheUsedSizeRequest_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getVirtualTextureCacheSizeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getVirtualTextureCacheSizeResponse) */ {
 public:
  inline ApiCaches_getVirtualTextureCacheSizeResponse() : ApiCaches_getVirtualTextureCacheSizeResponse(nullptr) {}
  ~ApiCaches_getVirtualTextureCacheSizeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getVirtualTextureCacheSizeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getVirtualTextureCacheSizeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getVirtualTextureCacheSizeResponse(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getVirtualTextureCacheSizeResponse(const ApiCaches_getVirtualTextureCacheSizeResponse& from) : ApiCaches_getVirtualTextureCacheSizeResponse(nullptr, from) {}
  inline ApiCaches_getVirtualTextureCacheSizeResponse(ApiCaches_getVirtualTextureCacheSizeResponse&& from) noexcept
      : ApiCaches_getVirtualTextureCacheSizeResponse(nullptr, ::std::move(from)) {}
  inline ApiCaches_getVirtualTextureCacheSizeResponse& operator=(const ApiCaches_getVirtualTextureCacheSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getVirtualTextureCacheSizeResponse& operator=(ApiCaches_getVirtualTextureCacheSizeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getVirtualTextureCacheSizeResponse& default_instance() {
    return *reinterpret_cast<const ApiCaches_getVirtualTextureCacheSizeResponse*>(
        &_ApiCaches_getVirtualTextureCacheSizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ApiCaches_getVirtualTextureCacheSizeResponse& a, ApiCaches_getVirtualTextureCacheSizeResponse& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getVirtualTextureCacheSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getVirtualTextureCacheSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getVirtualTextureCacheSizeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_getVirtualTextureCacheSizeResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_getVirtualTextureCacheSizeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getVirtualTextureCacheSizeResponse"; }

 protected:
  explicit ApiCaches_getVirtualTextureCacheSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getVirtualTextureCacheSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getVirtualTextureCacheSizeResponse& from);
  ApiCaches_getVirtualTextureCacheSizeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getVirtualTextureCacheSizeResponse&& from) noexcept
      : ApiCaches_getVirtualTextureCacheSizeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint64 result = 1;
  void clear_result() ;
  ::uint64_t result() const;
  void set_result(::uint64_t value);

  private:
  ::uint64_t _internal_result() const;
  void _internal_set_result(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getVirtualTextureCacheSizeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getVirtualTextureCacheSizeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheSizeResponse_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getVirtualTextureCacheSizeRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getVirtualTextureCacheSizeRequest) */ {
 public:
  inline ApiCaches_getVirtualTextureCacheSizeRequest() : ApiCaches_getVirtualTextureCacheSizeRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getVirtualTextureCacheSizeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getVirtualTextureCacheSizeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getVirtualTextureCacheSizeRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getVirtualTextureCacheSizeRequest(const ApiCaches_getVirtualTextureCacheSizeRequest& from) : ApiCaches_getVirtualTextureCacheSizeRequest(nullptr, from) {}
  inline ApiCaches_getVirtualTextureCacheSizeRequest(ApiCaches_getVirtualTextureCacheSizeRequest&& from) noexcept
      : ApiCaches_getVirtualTextureCacheSizeRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_getVirtualTextureCacheSizeRequest& operator=(const ApiCaches_getVirtualTextureCacheSizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getVirtualTextureCacheSizeRequest& operator=(ApiCaches_getVirtualTextureCacheSizeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getVirtualTextureCacheSizeRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_getVirtualTextureCacheSizeRequest*>(
        &_ApiCaches_getVirtualTextureCacheSizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ApiCaches_getVirtualTextureCacheSizeRequest& a, ApiCaches_getVirtualTextureCacheSizeRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getVirtualTextureCacheSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getVirtualTextureCacheSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getVirtualTextureCacheSizeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ApiCaches_getVirtualTextureCacheSizeRequest>(arena);
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getVirtualTextureCacheSizeRequest"; }

 protected:
  explicit ApiCaches_getVirtualTextureCacheSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getVirtualTextureCacheSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getVirtualTextureCacheSizeRequest& from);
  ApiCaches_getVirtualTextureCacheSizeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getVirtualTextureCacheSizeRequest&& from) noexcept
      : ApiCaches_getVirtualTextureCacheSizeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getVirtualTextureCacheSizeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getVirtualTextureCacheSizeRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getVirtualTextureCacheSizeRequest_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getMeshletCacheUsedSizeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getMeshletCacheUsedSizeResponse) */ {
 public:
  inline ApiCaches_getMeshletCacheUsedSizeResponse() : ApiCaches_getMeshletCacheUsedSizeResponse(nullptr) {}
  ~ApiCaches_getMeshletCacheUsedSizeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getMeshletCacheUsedSizeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getMeshletCacheUsedSizeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getMeshletCacheUsedSizeResponse(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getMeshletCacheUsedSizeResponse(const ApiCaches_getMeshletCacheUsedSizeResponse& from) : ApiCaches_getMeshletCacheUsedSizeResponse(nullptr, from) {}
  inline ApiCaches_getMeshletCacheUsedSizeResponse(ApiCaches_getMeshletCacheUsedSizeResponse&& from) noexcept
      : ApiCaches_getMeshletCacheUsedSizeResponse(nullptr, ::std::move(from)) {}
  inline ApiCaches_getMeshletCacheUsedSizeResponse& operator=(const ApiCaches_getMeshletCacheUsedSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getMeshletCacheUsedSizeResponse& operator=(ApiCaches_getMeshletCacheUsedSizeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getMeshletCacheUsedSizeResponse& default_instance() {
    return *reinterpret_cast<const ApiCaches_getMeshletCacheUsedSizeResponse*>(
        &_ApiCaches_getMeshletCacheUsedSizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ApiCaches_getMeshletCacheUsedSizeResponse& a, ApiCaches_getMeshletCacheUsedSizeResponse& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getMeshletCacheUsedSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getMeshletCacheUsedSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getMeshletCacheUsedSizeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_getMeshletCacheUsedSizeResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_getMeshletCacheUsedSizeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getMeshletCacheUsedSizeResponse"; }

 protected:
  explicit ApiCaches_getMeshletCacheUsedSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getMeshletCacheUsedSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getMeshletCacheUsedSizeResponse& from);
  ApiCaches_getMeshletCacheUsedSizeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getMeshletCacheUsedSizeResponse&& from) noexcept
      : ApiCaches_getMeshletCacheUsedSizeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint64 result = 1;
  void clear_result() ;
  ::uint64_t result() const;
  void set_result(::uint64_t value);

  private:
  ::uint64_t _internal_result() const;
  void _internal_set_result(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getMeshletCacheUsedSizeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getMeshletCacheUsedSizeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheUsedSizeResponse_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getMeshletCacheUsedSizeRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getMeshletCacheUsedSizeRequest) */ {
 public:
  inline ApiCaches_getMeshletCacheUsedSizeRequest() : ApiCaches_getMeshletCacheUsedSizeRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getMeshletCacheUsedSizeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getMeshletCacheUsedSizeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getMeshletCacheUsedSizeRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getMeshletCacheUsedSizeRequest(const ApiCaches_getMeshletCacheUsedSizeRequest& from) : ApiCaches_getMeshletCacheUsedSizeRequest(nullptr, from) {}
  inline ApiCaches_getMeshletCacheUsedSizeRequest(ApiCaches_getMeshletCacheUsedSizeRequest&& from) noexcept
      : ApiCaches_getMeshletCacheUsedSizeRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_getMeshletCacheUsedSizeRequest& operator=(const ApiCaches_getMeshletCacheUsedSizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getMeshletCacheUsedSizeRequest& operator=(ApiCaches_getMeshletCacheUsedSizeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getMeshletCacheUsedSizeRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_getMeshletCacheUsedSizeRequest*>(
        &_ApiCaches_getMeshletCacheUsedSizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ApiCaches_getMeshletCacheUsedSizeRequest& a, ApiCaches_getMeshletCacheUsedSizeRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getMeshletCacheUsedSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getMeshletCacheUsedSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getMeshletCacheUsedSizeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ApiCaches_getMeshletCacheUsedSizeRequest>(arena);
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getMeshletCacheUsedSizeRequest"; }

 protected:
  explicit ApiCaches_getMeshletCacheUsedSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getMeshletCacheUsedSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getMeshletCacheUsedSizeRequest& from);
  ApiCaches_getMeshletCacheUsedSizeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getMeshletCacheUsedSizeRequest&& from) noexcept
      : ApiCaches_getMeshletCacheUsedSizeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getMeshletCacheUsedSizeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getMeshletCacheUsedSizeRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheUsedSizeRequest_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getMeshletCacheSizeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getMeshletCacheSizeResponse) */ {
 public:
  inline ApiCaches_getMeshletCacheSizeResponse() : ApiCaches_getMeshletCacheSizeResponse(nullptr) {}
  ~ApiCaches_getMeshletCacheSizeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getMeshletCacheSizeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getMeshletCacheSizeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getMeshletCacheSizeResponse(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getMeshletCacheSizeResponse(const ApiCaches_getMeshletCacheSizeResponse& from) : ApiCaches_getMeshletCacheSizeResponse(nullptr, from) {}
  inline ApiCaches_getMeshletCacheSizeResponse(ApiCaches_getMeshletCacheSizeResponse&& from) noexcept
      : ApiCaches_getMeshletCacheSizeResponse(nullptr, ::std::move(from)) {}
  inline ApiCaches_getMeshletCacheSizeResponse& operator=(const ApiCaches_getMeshletCacheSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getMeshletCacheSizeResponse& operator=(ApiCaches_getMeshletCacheSizeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getMeshletCacheSizeResponse& default_instance() {
    return *reinterpret_cast<const ApiCaches_getMeshletCacheSizeResponse*>(
        &_ApiCaches_getMeshletCacheSizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ApiCaches_getMeshletCacheSizeResponse& a, ApiCaches_getMeshletCacheSizeResponse& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getMeshletCacheSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getMeshletCacheSizeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getMeshletCacheSizeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_getMeshletCacheSizeResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_getMeshletCacheSizeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getMeshletCacheSizeResponse"; }

 protected:
  explicit ApiCaches_getMeshletCacheSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getMeshletCacheSizeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getMeshletCacheSizeResponse& from);
  ApiCaches_getMeshletCacheSizeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getMeshletCacheSizeResponse&& from) noexcept
      : ApiCaches_getMeshletCacheSizeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // uint64 result = 1;
  void clear_result() ;
  ::uint64_t result() const;
  void set_result(::uint64_t value);

  private:
  ::uint64_t _internal_result() const;
  void _internal_set_result(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getMeshletCacheSizeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getMeshletCacheSizeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheSizeResponse_class_data_;
// -------------------------------------------------------------------

class ApiCaches_getMeshletCacheSizeRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.getMeshletCacheSizeRequest) */ {
 public:
  inline ApiCaches_getMeshletCacheSizeRequest() : ApiCaches_getMeshletCacheSizeRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_getMeshletCacheSizeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_getMeshletCacheSizeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_getMeshletCacheSizeRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_getMeshletCacheSizeRequest(const ApiCaches_getMeshletCacheSizeRequest& from) : ApiCaches_getMeshletCacheSizeRequest(nullptr, from) {}
  inline ApiCaches_getMeshletCacheSizeRequest(ApiCaches_getMeshletCacheSizeRequest&& from) noexcept
      : ApiCaches_getMeshletCacheSizeRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_getMeshletCacheSizeRequest& operator=(const ApiCaches_getMeshletCacheSizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_getMeshletCacheSizeRequest& operator=(ApiCaches_getMeshletCacheSizeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_getMeshletCacheSizeRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_getMeshletCacheSizeRequest*>(
        &_ApiCaches_getMeshletCacheSizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ApiCaches_getMeshletCacheSizeRequest& a, ApiCaches_getMeshletCacheSizeRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_getMeshletCacheSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_getMeshletCacheSizeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_getMeshletCacheSizeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ApiCaches_getMeshletCacheSizeRequest>(arena);
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.getMeshletCacheSizeRequest"; }

 protected:
  explicit ApiCaches_getMeshletCacheSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_getMeshletCacheSizeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_getMeshletCacheSizeRequest& from);
  ApiCaches_getMeshletCacheSizeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_getMeshletCacheSizeRequest&& from) noexcept
      : ApiCaches_getMeshletCacheSizeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.getMeshletCacheSizeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_getMeshletCacheSizeRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_getMeshletCacheSizeRequest_class_data_;
// -------------------------------------------------------------------

class ApiCaches_clearMeshletCacheRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.clearMeshletCacheRequest) */ {
 public:
  inline ApiCaches_clearMeshletCacheRequest() : ApiCaches_clearMeshletCacheRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_clearMeshletCacheRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_clearMeshletCacheRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_clearMeshletCacheRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_clearMeshletCacheRequest(const ApiCaches_clearMeshletCacheRequest& from) : ApiCaches_clearMeshletCacheRequest(nullptr, from) {}
  inline ApiCaches_clearMeshletCacheRequest(ApiCaches_clearMeshletCacheRequest&& from) noexcept
      : ApiCaches_clearMeshletCacheRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_clearMeshletCacheRequest& operator=(const ApiCaches_clearMeshletCacheRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_clearMeshletCacheRequest& operator=(ApiCaches_clearMeshletCacheRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_clearMeshletCacheRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_clearMeshletCacheRequest*>(
        &_ApiCaches_clearMeshletCacheRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ApiCaches_clearMeshletCacheRequest& a, ApiCaches_clearMeshletCacheRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_clearMeshletCacheRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_clearMeshletCacheRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_clearMeshletCacheRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ApiCaches_clearMeshletCacheRequest>(arena);
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.clearMeshletCacheRequest"; }

 protected:
  explicit ApiCaches_clearMeshletCacheRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_clearMeshletCacheRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_clearMeshletCacheRequest& from);
  ApiCaches_clearMeshletCacheRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_clearMeshletCacheRequest&& from) noexcept
      : ApiCaches_clearMeshletCacheRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.clearMeshletCacheRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_clearMeshletCacheRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_clearMeshletCacheRequest_class_data_;
// -------------------------------------------------------------------

class ApiCaches final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches) */ {
 public:
  inline ApiCaches() : ApiCaches(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches(const ApiCaches& from) : ApiCaches(nullptr, from) {}
  inline ApiCaches(ApiCaches&& from) noexcept
      : ApiCaches(nullptr, ::std::move(from)) {}
  inline ApiCaches& operator=(const ApiCaches& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches& operator=(ApiCaches&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches& default_instance() {
    return *reinterpret_cast<const ApiCaches*>(
        &_ApiCaches_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ApiCaches& a, ApiCaches& b) { a.Swap(&b); }
  inline void Swap(ApiCaches* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ApiCaches>(arena);
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches"; }

 protected:
  explicit ApiCaches(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches& from);
  ApiCaches(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches&& from) noexcept
      : ApiCaches(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using getMeshletCacheSizeRequest = ApiCaches_getMeshletCacheSizeRequest;
  using getMeshletCacheSizeResponse = ApiCaches_getMeshletCacheSizeResponse;
  using getMeshletCacheUsedSizeRequest = ApiCaches_getMeshletCacheUsedSizeRequest;
  using getMeshletCacheUsedSizeResponse = ApiCaches_getMeshletCacheUsedSizeResponse;
  using clearMeshletCacheRequest = ApiCaches_clearMeshletCacheRequest;
  using getVirtualTextureCacheSizeRequest = ApiCaches_getVirtualTextureCacheSizeRequest;
  using getVirtualTextureCacheSizeResponse = ApiCaches_getVirtualTextureCacheSizeResponse;
  using getVirtualTextureCacheUsedSizeRequest = ApiCaches_getVirtualTextureCacheUsedSizeRequest;
  using getVirtualTextureCacheUsedSizeResponse = ApiCaches_getVirtualTextureCacheUsedSizeResponse;
  using pruneVirtualTextureCacheRequest = ApiCaches_pruneVirtualTextureCacheRequest;
  using checkVirtualTextureStatusRequest = ApiCaches_checkVirtualTextureStatusRequest;
  using checkVirtualTextureStatusResponse = ApiCaches_checkVirtualTextureStatusResponse;
  using clearVirtualTextureCacheForNodeRequest = ApiCaches_clearVirtualTextureCacheForNodeRequest;
  using clearVirtualTextureCacheForNodeResponse = ApiCaches_clearVirtualTextureCacheForNodeResponse;

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_class_data_;
// -------------------------------------------------------------------

class ApiCaches_clearVirtualTextureCacheForNodeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse) */ {
 public:
  inline ApiCaches_clearVirtualTextureCacheForNodeResponse() : ApiCaches_clearVirtualTextureCacheForNodeResponse(nullptr) {}
  ~ApiCaches_clearVirtualTextureCacheForNodeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_clearVirtualTextureCacheForNodeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_clearVirtualTextureCacheForNodeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_clearVirtualTextureCacheForNodeResponse(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_clearVirtualTextureCacheForNodeResponse(const ApiCaches_clearVirtualTextureCacheForNodeResponse& from) : ApiCaches_clearVirtualTextureCacheForNodeResponse(nullptr, from) {}
  inline ApiCaches_clearVirtualTextureCacheForNodeResponse(ApiCaches_clearVirtualTextureCacheForNodeResponse&& from) noexcept
      : ApiCaches_clearVirtualTextureCacheForNodeResponse(nullptr, ::std::move(from)) {}
  inline ApiCaches_clearVirtualTextureCacheForNodeResponse& operator=(const ApiCaches_clearVirtualTextureCacheForNodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_clearVirtualTextureCacheForNodeResponse& operator=(ApiCaches_clearVirtualTextureCacheForNodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_clearVirtualTextureCacheForNodeResponse& default_instance() {
    return *reinterpret_cast<const ApiCaches_clearVirtualTextureCacheForNodeResponse*>(
        &_ApiCaches_clearVirtualTextureCacheForNodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ApiCaches_clearVirtualTextureCacheForNodeResponse& a, ApiCaches_clearVirtualTextureCacheForNodeResponse& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_clearVirtualTextureCacheForNodeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_clearVirtualTextureCacheForNodeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_clearVirtualTextureCacheForNodeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_clearVirtualTextureCacheForNodeResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_clearVirtualTextureCacheForNodeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse"; }

 protected:
  explicit ApiCaches_clearVirtualTextureCacheForNodeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_clearVirtualTextureCacheForNodeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_clearVirtualTextureCacheForNodeResponse& from);
  ApiCaches_clearVirtualTextureCacheForNodeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_clearVirtualTextureCacheForNodeResponse&& from) noexcept
      : ApiCaches_clearVirtualTextureCacheForNodeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // .octaneapi.ObjectRef node = 2;
  bool has_node() const;
  void clear_node() ;
  const ::octaneapi::ObjectRef& node() const;
  [[nodiscard]] ::octaneapi::ObjectRef* PROTOBUF_NULLABLE release_node();
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL mutable_node();
  void set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  ::octaneapi::ObjectRef* PROTOBUF_NULLABLE unsafe_arena_release_node();

  private:
  const ::octaneapi::ObjectRef& _internal_node() const;
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL _internal_mutable_node();

  public:
  // bool result = 1;
  void clear_result() ;
  bool result() const;
  void set_result(bool value);

  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_clearVirtualTextureCacheForNodeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE node_;
    bool result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_clearVirtualTextureCacheForNodeResponse_class_data_;
// -------------------------------------------------------------------

class ApiCaches_clearVirtualTextureCacheForNodeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest) */ {
 public:
  inline ApiCaches_clearVirtualTextureCacheForNodeRequest() : ApiCaches_clearVirtualTextureCacheForNodeRequest(nullptr) {}
  ~ApiCaches_clearVirtualTextureCacheForNodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_clearVirtualTextureCacheForNodeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_clearVirtualTextureCacheForNodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_clearVirtualTextureCacheForNodeRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_clearVirtualTextureCacheForNodeRequest(const ApiCaches_clearVirtualTextureCacheForNodeRequest& from) : ApiCaches_clearVirtualTextureCacheForNodeRequest(nullptr, from) {}
  inline ApiCaches_clearVirtualTextureCacheForNodeRequest(ApiCaches_clearVirtualTextureCacheForNodeRequest&& from) noexcept
      : ApiCaches_clearVirtualTextureCacheForNodeRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_clearVirtualTextureCacheForNodeRequest& operator=(const ApiCaches_clearVirtualTextureCacheForNodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_clearVirtualTextureCacheForNodeRequest& operator=(ApiCaches_clearVirtualTextureCacheForNodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_clearVirtualTextureCacheForNodeRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_clearVirtualTextureCacheForNodeRequest*>(
        &_ApiCaches_clearVirtualTextureCacheForNodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ApiCaches_clearVirtualTextureCacheForNodeRequest& a, ApiCaches_clearVirtualTextureCacheForNodeRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_clearVirtualTextureCacheForNodeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_clearVirtualTextureCacheForNodeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_clearVirtualTextureCacheForNodeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_clearVirtualTextureCacheForNodeRequest>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_clearVirtualTextureCacheForNodeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest"; }

 protected:
  explicit ApiCaches_clearVirtualTextureCacheForNodeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_clearVirtualTextureCacheForNodeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_clearVirtualTextureCacheForNodeRequest& from);
  ApiCaches_clearVirtualTextureCacheForNodeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_clearVirtualTextureCacheForNodeRequest&& from) noexcept
      : ApiCaches_clearVirtualTextureCacheForNodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeFieldNumber = 1,
  };
  // .octaneapi.ObjectRef node = 1;
  bool has_node() const;
  void clear_node() ;
  const ::octaneapi::ObjectRef& node() const;
  [[nodiscard]] ::octaneapi::ObjectRef* PROTOBUF_NULLABLE release_node();
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL mutable_node();
  void set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  ::octaneapi::ObjectRef* PROTOBUF_NULLABLE unsafe_arena_release_node();

  private:
  const ::octaneapi::ObjectRef& _internal_node() const;
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL _internal_mutable_node();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_clearVirtualTextureCacheForNodeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE node_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_clearVirtualTextureCacheForNodeRequest_class_data_;
// -------------------------------------------------------------------

class ApiCaches_checkVirtualTextureStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.checkVirtualTextureStatusResponse) */ {
 public:
  inline ApiCaches_checkVirtualTextureStatusResponse() : ApiCaches_checkVirtualTextureStatusResponse(nullptr) {}
  ~ApiCaches_checkVirtualTextureStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_checkVirtualTextureStatusResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_checkVirtualTextureStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_checkVirtualTextureStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_checkVirtualTextureStatusResponse(const ApiCaches_checkVirtualTextureStatusResponse& from) : ApiCaches_checkVirtualTextureStatusResponse(nullptr, from) {}
  inline ApiCaches_checkVirtualTextureStatusResponse(ApiCaches_checkVirtualTextureStatusResponse&& from) noexcept
      : ApiCaches_checkVirtualTextureStatusResponse(nullptr, ::std::move(from)) {}
  inline ApiCaches_checkVirtualTextureStatusResponse& operator=(const ApiCaches_checkVirtualTextureStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_checkVirtualTextureStatusResponse& operator=(ApiCaches_checkVirtualTextureStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_checkVirtualTextureStatusResponse& default_instance() {
    return *reinterpret_cast<const ApiCaches_checkVirtualTextureStatusResponse*>(
        &_ApiCaches_checkVirtualTextureStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ApiCaches_checkVirtualTextureStatusResponse& a, ApiCaches_checkVirtualTextureStatusResponse& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_checkVirtualTextureStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_checkVirtualTextureStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_checkVirtualTextureStatusResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_checkVirtualTextureStatusResponse>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_checkVirtualTextureStatusResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.checkVirtualTextureStatusResponse"; }

 protected:
  explicit ApiCaches_checkVirtualTextureStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_checkVirtualTextureStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_checkVirtualTextureStatusResponse& from);
  ApiCaches_checkVirtualTextureStatusResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_checkVirtualTextureStatusResponse&& from) noexcept
      : ApiCaches_checkVirtualTextureStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // .octaneapi.ObjectRef node = 2;
  bool has_node() const;
  void clear_node() ;
  const ::octaneapi::ObjectRef& node() const;
  [[nodiscard]] ::octaneapi::ObjectRef* PROTOBUF_NULLABLE release_node();
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL mutable_node();
  void set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  ::octaneapi::ObjectRef* PROTOBUF_NULLABLE unsafe_arena_release_node();

  private:
  const ::octaneapi::ObjectRef& _internal_node() const;
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL _internal_mutable_node();

  public:
  // .octaneapi.CacheStatus result = 1;
  void clear_result() ;
  ::octaneapi::CacheStatus result() const;
  void set_result(::octaneapi::CacheStatus value);

  private:
  ::octaneapi::CacheStatus _internal_result() const;
  void _internal_set_result(::octaneapi::CacheStatus value);

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.checkVirtualTextureStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_checkVirtualTextureStatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE node_;
    int result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_checkVirtualTextureStatusResponse_class_data_;
// -------------------------------------------------------------------

class ApiCaches_checkVirtualTextureStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:octaneapi.ApiCaches.checkVirtualTextureStatusRequest) */ {
 public:
  inline ApiCaches_checkVirtualTextureStatusRequest() : ApiCaches_checkVirtualTextureStatusRequest(nullptr) {}
  ~ApiCaches_checkVirtualTextureStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApiCaches_checkVirtualTextureStatusRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApiCaches_checkVirtualTextureStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApiCaches_checkVirtualTextureStatusRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApiCaches_checkVirtualTextureStatusRequest(const ApiCaches_checkVirtualTextureStatusRequest& from) : ApiCaches_checkVirtualTextureStatusRequest(nullptr, from) {}
  inline ApiCaches_checkVirtualTextureStatusRequest(ApiCaches_checkVirtualTextureStatusRequest&& from) noexcept
      : ApiCaches_checkVirtualTextureStatusRequest(nullptr, ::std::move(from)) {}
  inline ApiCaches_checkVirtualTextureStatusRequest& operator=(const ApiCaches_checkVirtualTextureStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApiCaches_checkVirtualTextureStatusRequest& operator=(ApiCaches_checkVirtualTextureStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApiCaches_checkVirtualTextureStatusRequest& default_instance() {
    return *reinterpret_cast<const ApiCaches_checkVirtualTextureStatusRequest*>(
        &_ApiCaches_checkVirtualTextureStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ApiCaches_checkVirtualTextureStatusRequest& a, ApiCaches_checkVirtualTextureStatusRequest& b) { a.Swap(&b); }
  inline void Swap(ApiCaches_checkVirtualTextureStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApiCaches_checkVirtualTextureStatusRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApiCaches_checkVirtualTextureStatusRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApiCaches_checkVirtualTextureStatusRequest>(arena);
  }
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApiCaches_checkVirtualTextureStatusRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "octaneapi.ApiCaches.checkVirtualTextureStatusRequest"; }

 protected:
  explicit ApiCaches_checkVirtualTextureStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApiCaches_checkVirtualTextureStatusRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApiCaches_checkVirtualTextureStatusRequest& from);
  ApiCaches_checkVirtualTextureStatusRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApiCaches_checkVirtualTextureStatusRequest&& from) noexcept
      : ApiCaches_checkVirtualTextureStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeFieldNumber = 1,
  };
  // .octaneapi.ObjectRef node = 1;
  bool has_node() const;
  void clear_node() ;
  const ::octaneapi::ObjectRef& node() const;
  [[nodiscard]] ::octaneapi::ObjectRef* PROTOBUF_NULLABLE release_node();
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL mutable_node();
  void set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value);
  ::octaneapi::ObjectRef* PROTOBUF_NULLABLE unsafe_arena_release_node();

  private:
  const ::octaneapi::ObjectRef& _internal_node() const;
  ::octaneapi::ObjectRef* PROTOBUF_NONNULL _internal_mutable_node();

  public:
  // @@protoc_insertion_point(class_scope:octaneapi.ApiCaches.checkVirtualTextureStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApiCaches_checkVirtualTextureStatusRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE node_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_apicaches_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApiCaches_checkVirtualTextureStatusRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ApiCaches_getMeshletCacheSizeRequest

// -------------------------------------------------------------------

// ApiCaches_getMeshletCacheSizeResponse

// uint64 result = 1;
inline void ApiCaches_getMeshletCacheSizeResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t ApiCaches_getMeshletCacheSizeResponse::result() const {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.getMeshletCacheSizeResponse.result)
  return _internal_result();
}
inline void ApiCaches_getMeshletCacheSizeResponse::set_result(::uint64_t value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:octaneapi.ApiCaches.getMeshletCacheSizeResponse.result)
}
inline ::uint64_t ApiCaches_getMeshletCacheSizeResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void ApiCaches_getMeshletCacheSizeResponse::_internal_set_result(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// ApiCaches_getMeshletCacheUsedSizeRequest

// -------------------------------------------------------------------

// ApiCaches_getMeshletCacheUsedSizeResponse

// uint64 result = 1;
inline void ApiCaches_getMeshletCacheUsedSizeResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t ApiCaches_getMeshletCacheUsedSizeResponse::result() const {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.getMeshletCacheUsedSizeResponse.result)
  return _internal_result();
}
inline void ApiCaches_getMeshletCacheUsedSizeResponse::set_result(::uint64_t value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:octaneapi.ApiCaches.getMeshletCacheUsedSizeResponse.result)
}
inline ::uint64_t ApiCaches_getMeshletCacheUsedSizeResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void ApiCaches_getMeshletCacheUsedSizeResponse::_internal_set_result(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// ApiCaches_clearMeshletCacheRequest

// -------------------------------------------------------------------

// ApiCaches_getVirtualTextureCacheSizeRequest

// -------------------------------------------------------------------

// ApiCaches_getVirtualTextureCacheSizeResponse

// uint64 result = 1;
inline void ApiCaches_getVirtualTextureCacheSizeResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t ApiCaches_getVirtualTextureCacheSizeResponse::result() const {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.getVirtualTextureCacheSizeResponse.result)
  return _internal_result();
}
inline void ApiCaches_getVirtualTextureCacheSizeResponse::set_result(::uint64_t value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:octaneapi.ApiCaches.getVirtualTextureCacheSizeResponse.result)
}
inline ::uint64_t ApiCaches_getVirtualTextureCacheSizeResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void ApiCaches_getVirtualTextureCacheSizeResponse::_internal_set_result(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// ApiCaches_getVirtualTextureCacheUsedSizeRequest

// -------------------------------------------------------------------

// ApiCaches_getVirtualTextureCacheUsedSizeResponse

// uint64 result = 1;
inline void ApiCaches_getVirtualTextureCacheUsedSizeResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t ApiCaches_getVirtualTextureCacheUsedSizeResponse::result() const {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeResponse.result)
  return _internal_result();
}
inline void ApiCaches_getVirtualTextureCacheUsedSizeResponse::set_result(::uint64_t value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:octaneapi.ApiCaches.getVirtualTextureCacheUsedSizeResponse.result)
}
inline ::uint64_t ApiCaches_getVirtualTextureCacheUsedSizeResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void ApiCaches_getVirtualTextureCacheUsedSizeResponse::_internal_set_result(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// ApiCaches_pruneVirtualTextureCacheRequest

// uint64 maximumSize = 1;
inline void ApiCaches_pruneVirtualTextureCacheRequest::clear_maximumsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maximumsize_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t ApiCaches_pruneVirtualTextureCacheRequest::maximumsize() const {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.pruneVirtualTextureCacheRequest.maximumSize)
  return _internal_maximumsize();
}
inline void ApiCaches_pruneVirtualTextureCacheRequest::set_maximumsize(::uint64_t value) {
  _internal_set_maximumsize(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:octaneapi.ApiCaches.pruneVirtualTextureCacheRequest.maximumSize)
}
inline ::uint64_t ApiCaches_pruneVirtualTextureCacheRequest::_internal_maximumsize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maximumsize_;
}
inline void ApiCaches_pruneVirtualTextureCacheRequest::_internal_set_maximumsize(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maximumsize_ = value;
}

// -------------------------------------------------------------------

// ApiCaches_checkVirtualTextureStatusRequest

// .octaneapi.ObjectRef node = 1;
inline bool ApiCaches_checkVirtualTextureStatusRequest::has_node() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node_ != nullptr);
  return value;
}
inline const ::octaneapi::ObjectRef& ApiCaches_checkVirtualTextureStatusRequest::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::ObjectRef* p = _impl_.node_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::ObjectRef&>(::octaneapi::_ObjectRef_default_instance_);
}
inline const ::octaneapi::ObjectRef& ApiCaches_checkVirtualTextureStatusRequest::node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.checkVirtualTextureStatusRequest.node)
  return _internal_node();
}
inline void ApiCaches_checkVirtualTextureStatusRequest::unsafe_arena_set_allocated_node(
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }
  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.ApiCaches.checkVirtualTextureStatusRequest.node)
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_checkVirtualTextureStatusRequest::release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* released = _impl_.node_;
  _impl_.node_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_checkVirtualTextureStatusRequest::unsafe_arena_release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.ApiCaches.checkVirtualTextureStatusRequest.node)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* temp = _impl_.node_;
  _impl_.node_ = nullptr;
  return temp;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_checkVirtualTextureStatusRequest::_internal_mutable_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::ObjectRef>(GetArena());
    _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(p);
  }
  return _impl_.node_;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_checkVirtualTextureStatusRequest::mutable_node()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::ObjectRef* _msg = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:octaneapi.ApiCaches.checkVirtualTextureStatusRequest.node)
  return _msg;
}
inline void ApiCaches_checkVirtualTextureStatusRequest::set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.ApiCaches.checkVirtualTextureStatusRequest.node)
}

// -------------------------------------------------------------------

// ApiCaches_checkVirtualTextureStatusResponse

// .octaneapi.CacheStatus result = 1;
inline void ApiCaches_checkVirtualTextureStatusResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::octaneapi::CacheStatus ApiCaches_checkVirtualTextureStatusResponse::result() const {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.checkVirtualTextureStatusResponse.result)
  return _internal_result();
}
inline void ApiCaches_checkVirtualTextureStatusResponse::set_result(::octaneapi::CacheStatus value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:octaneapi.ApiCaches.checkVirtualTextureStatusResponse.result)
}
inline ::octaneapi::CacheStatus ApiCaches_checkVirtualTextureStatusResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::octaneapi::CacheStatus>(_impl_.result_);
}
inline void ApiCaches_checkVirtualTextureStatusResponse::_internal_set_result(::octaneapi::CacheStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .octaneapi.ObjectRef node = 2;
inline bool ApiCaches_checkVirtualTextureStatusResponse::has_node() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node_ != nullptr);
  return value;
}
inline const ::octaneapi::ObjectRef& ApiCaches_checkVirtualTextureStatusResponse::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::ObjectRef* p = _impl_.node_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::ObjectRef&>(::octaneapi::_ObjectRef_default_instance_);
}
inline const ::octaneapi::ObjectRef& ApiCaches_checkVirtualTextureStatusResponse::node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.checkVirtualTextureStatusResponse.node)
  return _internal_node();
}
inline void ApiCaches_checkVirtualTextureStatusResponse::unsafe_arena_set_allocated_node(
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }
  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.ApiCaches.checkVirtualTextureStatusResponse.node)
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_checkVirtualTextureStatusResponse::release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* released = _impl_.node_;
  _impl_.node_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_checkVirtualTextureStatusResponse::unsafe_arena_release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.ApiCaches.checkVirtualTextureStatusResponse.node)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* temp = _impl_.node_;
  _impl_.node_ = nullptr;
  return temp;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_checkVirtualTextureStatusResponse::_internal_mutable_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::ObjectRef>(GetArena());
    _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(p);
  }
  return _impl_.node_;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_checkVirtualTextureStatusResponse::mutable_node()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::ObjectRef* _msg = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:octaneapi.ApiCaches.checkVirtualTextureStatusResponse.node)
  return _msg;
}
inline void ApiCaches_checkVirtualTextureStatusResponse::set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.ApiCaches.checkVirtualTextureStatusResponse.node)
}

// -------------------------------------------------------------------

// ApiCaches_clearVirtualTextureCacheForNodeRequest

// .octaneapi.ObjectRef node = 1;
inline bool ApiCaches_clearVirtualTextureCacheForNodeRequest::has_node() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node_ != nullptr);
  return value;
}
inline const ::octaneapi::ObjectRef& ApiCaches_clearVirtualTextureCacheForNodeRequest::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::ObjectRef* p = _impl_.node_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::ObjectRef&>(::octaneapi::_ObjectRef_default_instance_);
}
inline const ::octaneapi::ObjectRef& ApiCaches_clearVirtualTextureCacheForNodeRequest::node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest.node)
  return _internal_node();
}
inline void ApiCaches_clearVirtualTextureCacheForNodeRequest::unsafe_arena_set_allocated_node(
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }
  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest.node)
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_clearVirtualTextureCacheForNodeRequest::release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* released = _impl_.node_;
  _impl_.node_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_clearVirtualTextureCacheForNodeRequest::unsafe_arena_release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest.node)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* temp = _impl_.node_;
  _impl_.node_ = nullptr;
  return temp;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_clearVirtualTextureCacheForNodeRequest::_internal_mutable_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::ObjectRef>(GetArena());
    _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(p);
  }
  return _impl_.node_;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_clearVirtualTextureCacheForNodeRequest::mutable_node()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::ObjectRef* _msg = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest.node)
  return _msg;
}
inline void ApiCaches_clearVirtualTextureCacheForNodeRequest::set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeRequest.node)
}

// -------------------------------------------------------------------

// ApiCaches_clearVirtualTextureCacheForNodeResponse

// bool result = 1;
inline void ApiCaches_clearVirtualTextureCacheForNodeResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ApiCaches_clearVirtualTextureCacheForNodeResponse::result() const {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse.result)
  return _internal_result();
}
inline void ApiCaches_clearVirtualTextureCacheForNodeResponse::set_result(bool value) {
  _internal_set_result(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse.result)
}
inline bool ApiCaches_clearVirtualTextureCacheForNodeResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void ApiCaches_clearVirtualTextureCacheForNodeResponse::_internal_set_result(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .octaneapi.ObjectRef node = 2;
inline bool ApiCaches_clearVirtualTextureCacheForNodeResponse::has_node() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node_ != nullptr);
  return value;
}
inline const ::octaneapi::ObjectRef& ApiCaches_clearVirtualTextureCacheForNodeResponse::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::octaneapi::ObjectRef* p = _impl_.node_;
  return p != nullptr ? *p : reinterpret_cast<const ::octaneapi::ObjectRef&>(::octaneapi::_ObjectRef_default_instance_);
}
inline const ::octaneapi::ObjectRef& ApiCaches_clearVirtualTextureCacheForNodeResponse::node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse.node)
  return _internal_node();
}
inline void ApiCaches_clearVirtualTextureCacheForNodeResponse::unsafe_arena_set_allocated_node(
    ::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }
  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse.node)
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_clearVirtualTextureCacheForNodeResponse::release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* released = _impl_.node_;
  _impl_.node_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NULLABLE ApiCaches_clearVirtualTextureCacheForNodeResponse::unsafe_arena_release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse.node)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::octaneapi::ObjectRef* temp = _impl_.node_;
  _impl_.node_ = nullptr;
  return temp;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_clearVirtualTextureCacheForNodeResponse::_internal_mutable_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::octaneapi::ObjectRef>(GetArena());
    _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(p);
  }
  return _impl_.node_;
}
inline ::octaneapi::ObjectRef* PROTOBUF_NONNULL ApiCaches_clearVirtualTextureCacheForNodeResponse::mutable_node()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::octaneapi::ObjectRef* _msg = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse.node)
  return _msg;
}
inline void ApiCaches_clearVirtualTextureCacheForNodeResponse::set_allocated_node(::octaneapi::ObjectRef* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.node_ = reinterpret_cast<::octaneapi::ObjectRef*>(value);
  // @@protoc_insertion_point(field_set_allocated:octaneapi.ApiCaches.clearVirtualTextureCacheForNodeResponse.node)
}

// -------------------------------------------------------------------

// ApiCaches

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace octaneapi


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // apicaches_2eproto_2epb_2eh
