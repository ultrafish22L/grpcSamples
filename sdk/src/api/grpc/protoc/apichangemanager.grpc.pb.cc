// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apichangemanager.proto

#include "apichangemanager.pb.h"
#include "apichangemanager.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiChangeManagerService_method_names[] = {
  "/octaneapi.ApiChangeManagerService/observeApiItem",
  "/octaneapi.ApiChangeManagerService/stopObserving",
  "/octaneapi.ApiChangeManagerService/stopObserving1",
  "/octaneapi.ApiChangeManagerService/stopObserving2",
  "/octaneapi.ApiChangeManagerService/update",
  "/octaneapi.ApiChangeManagerService/addTimeObserver",
  "/octaneapi.ApiChangeManagerService/removeTimeObserver",
  "/octaneapi.ApiChangeManagerService/stopObservingTime",
};

std::unique_ptr< ApiChangeManagerService::Stub> ApiChangeManagerService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiChangeManagerService::Stub> stub(new ApiChangeManagerService::Stub(channel, options));
  return stub;
}

ApiChangeManagerService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_observeApiItem_(ApiChangeManagerService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stopObserving_(ApiChangeManagerService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stopObserving1_(ApiChangeManagerService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stopObserving2_(ApiChangeManagerService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_update_(ApiChangeManagerService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_addTimeObserver_(ApiChangeManagerService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_removeTimeObserver_(ApiChangeManagerService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stopObservingTime_(ApiChangeManagerService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiChangeManagerService::Stub::observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_observeApiItem_, context, request, response);
}

void ApiChangeManagerService::Stub::async::observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_observeApiItem_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::observeApiItem(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_observeApiItem_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>* ApiChangeManagerService::Stub::PrepareAsyncobserveApiItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiChangeManager_observeApiItemResponse, ::octaneapi::ApiChangeManager_observeApiItemRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_observeApiItem_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_observeApiItemResponse>* ApiChangeManagerService::Stub::AsyncobserveApiItemRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncobserveApiItemRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiChangeManagerService::Stub::stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stopObserving_, context, request, response);
}

void ApiChangeManagerService::Stub::async::stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObserving_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::stopObserving(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObserving_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::PrepareAsyncstopObservingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiChangeManager_stopObservingRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stopObserving_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::AsyncstopObservingRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstopObservingRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiChangeManagerService::Stub::stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stopObserving1_, context, request, response);
}

void ApiChangeManagerService::Stub::async::stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObserving1_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::stopObserving1(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObserving1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::PrepareAsyncstopObserving1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiChangeManager_stopObserving1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stopObserving1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::AsyncstopObserving1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstopObserving1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiChangeManagerService::Stub::stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stopObserving2_, context, request, response);
}

void ApiChangeManagerService::Stub::async::stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObserving2_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::stopObserving2(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObserving2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::PrepareAsyncstopObserving2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiChangeManager_stopObserving2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stopObserving2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::AsyncstopObserving2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstopObserving2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiChangeManagerService::Stub::update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_update_, context, request, response);
}

void ApiChangeManagerService::Stub::async::update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_update_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::update(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_update_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::PrepareAsyncupdateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiChangeManager_updateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_update_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::AsyncupdateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_updateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncupdateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiChangeManagerService::Stub::addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_addTimeObserver_, context, request, response);
}

void ApiChangeManagerService::Stub::async::addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addTimeObserver_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::addTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addTimeObserver_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>* ApiChangeManagerService::Stub::PrepareAsyncaddTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiChangeManager_addTimeObserverResponse, ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_addTimeObserver_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiChangeManager_addTimeObserverResponse>* ApiChangeManagerService::Stub::AsyncaddTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncaddTimeObserverRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiChangeManagerService::Stub::removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_removeTimeObserver_, context, request, response);
}

void ApiChangeManagerService::Stub::async::removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_removeTimeObserver_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::removeTimeObserver(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_removeTimeObserver_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::PrepareAsyncremoveTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_removeTimeObserver_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::AsyncremoveTimeObserverRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncremoveTimeObserverRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiChangeManagerService::Stub::stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stopObservingTime_, context, request, response);
}

void ApiChangeManagerService::Stub::async::stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObservingTime_, context, request, response, std::move(f));
}

void ApiChangeManagerService::Stub::async::stopObservingTime(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stopObservingTime_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::PrepareAsyncstopObservingTimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stopObservingTime_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiChangeManagerService::Stub::AsyncstopObservingTimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstopObservingTimeRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiChangeManagerService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_observeApiItemRequest, ::octaneapi::ApiChangeManager_observeApiItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_observeApiItemRequest* req,
             ::octaneapi::ApiChangeManager_observeApiItemResponse* resp) {
               return service->observeApiItem(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_stopObservingRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_stopObservingRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->stopObserving(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_stopObserving1Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_stopObserving1Request* req,
             ::google::protobuf::Empty* resp) {
               return service->stopObserving1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_stopObserving2Request, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_stopObserving2Request* req,
             ::google::protobuf::Empty* resp) {
               return service->stopObserving2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_updateRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_updateRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->update(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_addTimeObserverRequest, ::octaneapi::ApiChangeManager_addTimeObserverResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_addTimeObserverRequest* req,
             ::octaneapi::ApiChangeManager_addTimeObserverResponse* resp) {
               return service->addTimeObserver(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_removeTimeObserverRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->removeTimeObserver(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiChangeManagerService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiChangeManagerService::Service, ::octaneapi::ApiChangeManager_stopObservingTimeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiChangeManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->stopObservingTime(ctx, req, resp);
             }, this)));
}

ApiChangeManagerService::Service::~Service() {
}

::grpc::Status ApiChangeManagerService::Service::observeApiItem(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_observeApiItemRequest* request, ::octaneapi::ApiChangeManager_observeApiItemResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiChangeManagerService::Service::stopObserving(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObservingRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiChangeManagerService::Service::stopObserving1(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObserving1Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiChangeManagerService::Service::stopObserving2(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObserving2Request* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiChangeManagerService::Service::update(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_updateRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiChangeManagerService::Service::addTimeObserver(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_addTimeObserverRequest* request, ::octaneapi::ApiChangeManager_addTimeObserverResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiChangeManagerService::Service::removeTimeObserver(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_removeTimeObserverRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiChangeManagerService::Service::stopObservingTime(::grpc::ServerContext* context, const ::octaneapi::ApiChangeManager_stopObservingTimeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

