// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apiprojectworkspace.proto

#include "apiprojectworkspace.pb.h"
#include "apiprojectworkspace.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiProjectWorkspaceService_method_names[] = {
  "/octaneapi.ApiProjectWorkspaceService/getNodeGraphEditors",
  "/octaneapi.ApiProjectWorkspaceService/resetLayout",
  "/octaneapi.ApiProjectWorkspaceService/loadLayout",
  "/octaneapi.ApiProjectWorkspaceService/serializeLayout",
};

std::unique_ptr< ApiProjectWorkspaceService::Stub> ApiProjectWorkspaceService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiProjectWorkspaceService::Stub> stub(new ApiProjectWorkspaceService::Stub(channel, options));
  return stub;
}

ApiProjectWorkspaceService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_getNodeGraphEditors_(ApiProjectWorkspaceService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_resetLayout_(ApiProjectWorkspaceService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_loadLayout_(ApiProjectWorkspaceService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_serializeLayout_(ApiProjectWorkspaceService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiProjectWorkspaceService::Stub::getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getNodeGraphEditors_, context, request, response);
}

void ApiProjectWorkspaceService::Stub::async::getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getNodeGraphEditors_, context, request, response, std::move(f));
}

void ApiProjectWorkspaceService::Stub::async::getNodeGraphEditors(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getNodeGraphEditors_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* ApiProjectWorkspaceService::Stub::PrepareAsyncgetNodeGraphEditorsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getNodeGraphEditors_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse>* ApiProjectWorkspaceService::Stub::AsyncgetNodeGraphEditorsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetNodeGraphEditorsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiProjectWorkspaceService::Stub::resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_resetLayout_, context, request, response);
}

void ApiProjectWorkspaceService::Stub::async::resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_resetLayout_, context, request, response, std::move(f));
}

void ApiProjectWorkspaceService::Stub::async::resetLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_resetLayout_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiProjectWorkspaceService::Stub::PrepareAsyncresetLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_resetLayout_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiProjectWorkspaceService::Stub::AsyncresetLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncresetLayoutRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiProjectWorkspaceService::Stub::loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_loadLayout_, context, request, response);
}

void ApiProjectWorkspaceService::Stub::async::loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_loadLayout_, context, request, response, std::move(f));
}

void ApiProjectWorkspaceService::Stub::async::loadLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_loadLayout_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* ApiProjectWorkspaceService::Stub::PrepareAsyncloadLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse, ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_loadLayout_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_loadLayoutResponse>* ApiProjectWorkspaceService::Stub::AsyncloadLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncloadLayoutRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiProjectWorkspaceService::Stub::serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_serializeLayout_, context, request, response);
}

void ApiProjectWorkspaceService::Stub::async::serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_serializeLayout_, context, request, response, std::move(f));
}

void ApiProjectWorkspaceService::Stub::async::serializeLayout(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_serializeLayout_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* ApiProjectWorkspaceService::Stub::PrepareAsyncserializeLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse, ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_serializeLayout_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse>* ApiProjectWorkspaceService::Stub::AsyncserializeLayoutRaw(::grpc::ClientContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncserializeLayoutRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiProjectWorkspaceService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiProjectWorkspaceService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiProjectWorkspaceService::Service, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiProjectWorkspaceService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* req,
             ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* resp) {
               return service->getNodeGraphEditors(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiProjectWorkspaceService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiProjectWorkspaceService::Service, ::octaneapi::ApiProjectWorkspace_resetLayoutRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiProjectWorkspaceService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->resetLayout(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiProjectWorkspaceService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiProjectWorkspaceService::Service, ::octaneapi::ApiProjectWorkspace_loadLayoutRequest, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiProjectWorkspaceService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* req,
             ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* resp) {
               return service->loadLayout(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiProjectWorkspaceService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiProjectWorkspaceService::Service, ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiProjectWorkspaceService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* req,
             ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* resp) {
               return service->serializeLayout(ctx, req, resp);
             }, this)));
}

ApiProjectWorkspaceService::Service::~Service() {
}

::grpc::Status ApiProjectWorkspaceService::Service::getNodeGraphEditors(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsRequest* request, ::octaneapi::ApiProjectWorkspace_getNodeGraphEditorsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiProjectWorkspaceService::Service::resetLayout(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_resetLayoutRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiProjectWorkspaceService::Service::loadLayout(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_loadLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_loadLayoutResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiProjectWorkspaceService::Service::serializeLayout(::grpc::ServerContext* context, const ::octaneapi::ApiProjectWorkspace_serializeLayoutRequest* request, ::octaneapi::ApiProjectWorkspace_serializeLayoutResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

