// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apitexteditor.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_apitexteditor_2eproto__INCLUDED
#define GRPC_apitexteditor_2eproto__INCLUDED

#include "apitexteditor.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiTextEditor' from 'apitexteditor.h'
class ApiTextEditorService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiTextEditorService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Creates a new text editor
    virtual ::grpc::Status create(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::octaneapi::ApiTextEditor_createResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_createResponse>> Asynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_createResponse>>(AsynccreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_createResponse>> PrepareAsynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_createResponse>>(PrepareAsynccreateRaw(context, request, cq));
    }
    // / Destroys this text editor
    virtual ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    // / Returns the text the user typed in the text editor
    virtual ::grpc::Status text(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::octaneapi::ApiTextEditor_textResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_textResponse>> Asynctext(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_textResponse>>(AsynctextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_textResponse>> PrepareAsynctext(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_textResponse>>(PrepareAsynctextRaw(context, request, cq));
    }
    // / Returns TRUE if there's no text in the text editor
    virtual ::grpc::Status isEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::octaneapi::ApiTextEditor_isEmptyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isEmptyResponse>> AsyncisEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isEmptyResponse>>(AsyncisEmptyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isEmptyResponse>> PrepareAsyncisEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isEmptyResponse>>(PrepareAsyncisEmptyRaw(context, request, cq));
    }
    // / Sets the text in the text editor
    virtual ::grpc::Status setText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetTextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetTextRaw(context, request, cq));
    }
    // / Clears the text in the text editor
    virtual ::grpc::Status clear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearRaw(context, request, cq));
    }
    // / Changes the text editor to read only mode
    virtual ::grpc::Status setReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetReadOnlyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetReadOnlyRaw(context, request, cq));
    }
    // / Returns true if the editor is in read-only mode
    virtual ::grpc::Status isReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isReadOnlyResponse>> AsyncisReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isReadOnlyResponse>>(AsyncisReadOnlyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isReadOnlyResponse>> PrepareAsyncisReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isReadOnlyResponse>>(PrepareAsyncisReadOnlyRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Creates a new text editor
      virtual void create(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest* request, ::octaneapi::ApiTextEditor_createResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void create(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest* request, ::octaneapi::ApiTextEditor_createResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Destroys this text editor
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the text the user typed in the text editor
      virtual void text(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest* request, ::octaneapi::ApiTextEditor_textResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void text(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest* request, ::octaneapi::ApiTextEditor_textResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if there's no text in the text editor
      virtual void isEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest* request, ::octaneapi::ApiTextEditor_isEmptyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest* request, ::octaneapi::ApiTextEditor_isEmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the text in the text editor
      virtual void setText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Clears the text in the text editor
      virtual void clear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Changes the text editor to read only mode
      virtual void setReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns true if the editor is in read-only mode
      virtual void isReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_createResponse>* AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_createResponse>* PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_textResponse>* AsynctextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_textResponse>* PrepareAsynctextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isEmptyResponse>* AsyncisEmptyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isEmptyResponse>* PrepareAsyncisEmptyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetTextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetTextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isReadOnlyResponse>* AsyncisReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiTextEditor_isReadOnlyResponse>* PrepareAsyncisReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status create(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::octaneapi::ApiTextEditor_createResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_createResponse>> Asynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_createResponse>>(AsynccreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_createResponse>> PrepareAsynccreate(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_createResponse>>(PrepareAsynccreateRaw(context, request, cq));
    }
    ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    ::grpc::Status text(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::octaneapi::ApiTextEditor_textResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_textResponse>> Asynctext(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_textResponse>>(AsynctextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_textResponse>> PrepareAsynctext(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_textResponse>>(PrepareAsynctextRaw(context, request, cq));
    }
    ::grpc::Status isEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::octaneapi::ApiTextEditor_isEmptyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isEmptyResponse>> AsyncisEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isEmptyResponse>>(AsyncisEmptyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isEmptyResponse>> PrepareAsyncisEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isEmptyResponse>>(PrepareAsyncisEmptyRaw(context, request, cq));
    }
    ::grpc::Status setText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetTextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetTextRaw(context, request, cq));
    }
    ::grpc::Status clear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearRaw(context, request, cq));
    }
    ::grpc::Status setReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetReadOnlyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetReadOnlyRaw(context, request, cq));
    }
    ::grpc::Status isReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isReadOnlyResponse>> AsyncisReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isReadOnlyResponse>>(AsyncisReadOnlyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isReadOnlyResponse>> PrepareAsyncisReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isReadOnlyResponse>>(PrepareAsyncisReadOnlyRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void create(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest* request, ::octaneapi::ApiTextEditor_createResponse* response, std::function<void(::grpc::Status)>) override;
      void create(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest* request, ::octaneapi::ApiTextEditor_createResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void text(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest* request, ::octaneapi::ApiTextEditor_textResponse* response, std::function<void(::grpc::Status)>) override;
      void text(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest* request, ::octaneapi::ApiTextEditor_textResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest* request, ::octaneapi::ApiTextEditor_isEmptyResponse* response, std::function<void(::grpc::Status)>) override;
      void isEmpty(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest* request, ::octaneapi::ApiTextEditor_isEmptyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setText(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clear(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response, std::function<void(::grpc::Status)>) override;
      void isReadOnly(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_createResponse>* AsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_createResponse>* PrepareAsynccreateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_createRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_textResponse>* AsynctextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_textResponse>* PrepareAsynctextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_textRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isEmptyResponse>* AsyncisEmptyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isEmptyResponse>* PrepareAsyncisEmptyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetTextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetTextRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setTextRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_clearRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isReadOnlyResponse>* AsyncisReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiTextEditor_isReadOnlyResponse>* PrepareAsyncisReadOnlyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_create_;
    const ::grpc::internal::RpcMethod rpcmethod_destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_text_;
    const ::grpc::internal::RpcMethod rpcmethod_isEmpty_;
    const ::grpc::internal::RpcMethod rpcmethod_setText_;
    const ::grpc::internal::RpcMethod rpcmethod_clear_;
    const ::grpc::internal::RpcMethod rpcmethod_setReadOnly_;
    const ::grpc::internal::RpcMethod rpcmethod_isReadOnly_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Creates a new text editor
    virtual ::grpc::Status create(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_createRequest* request, ::octaneapi::ApiTextEditor_createResponse* response);
    // / Destroys this text editor
    virtual ::grpc::Status destroy(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_destroyRequest* request, ::google::protobuf::Empty* response);
    // / Returns the text the user typed in the text editor
    virtual ::grpc::Status text(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_textRequest* request, ::octaneapi::ApiTextEditor_textResponse* response);
    // / Returns TRUE if there's no text in the text editor
    virtual ::grpc::Status isEmpty(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest* request, ::octaneapi::ApiTextEditor_isEmptyResponse* response);
    // / Sets the text in the text editor
    virtual ::grpc::Status setText(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_setTextRequest* request, ::google::protobuf::Empty* response);
    // / Clears the text in the text editor
    virtual ::grpc::Status clear(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_clearRequest* request, ::google::protobuf::Empty* response);
    // / Changes the text editor to read only mode
    virtual ::grpc::Status setReadOnly(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* request, ::google::protobuf::Empty* response);
    // / Returns true if the editor is in read-only mode
    virtual ::grpc::Status isReadOnly(::grpc::ServerContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_create() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_createRequest* /*request*/, ::octaneapi::ApiTextEditor_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_createRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiTextEditor_createResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_destroy() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_destroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_text : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_text() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_text() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status text(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_textRequest* /*request*/, ::octaneapi::ApiTextEditor_textResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttext(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_textRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiTextEditor_textResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isEmpty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isEmpty() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_isEmpty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isEmpty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isEmptyRequest* /*request*/, ::octaneapi::ApiTextEditor_isEmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisEmpty(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_isEmptyRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiTextEditor_isEmptyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setText : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setText() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_setText() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setText(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setTextRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetText(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_setTextRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clear() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestclear(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_clearRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setReadOnly() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_setReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetReadOnly(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_setReadOnlyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isReadOnly() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_isReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* /*request*/, ::octaneapi::ApiTextEditor_isReadOnlyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisReadOnly(::grpc::ServerContext* context, ::octaneapi::ApiTextEditor_isReadOnlyRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiTextEditor_isReadOnlyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_create<WithAsyncMethod_destroy<WithAsyncMethod_text<WithAsyncMethod_isEmpty<WithAsyncMethod_setText<WithAsyncMethod_clear<WithAsyncMethod_setReadOnly<WithAsyncMethod_isReadOnly<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_create() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_createRequest, ::octaneapi::ApiTextEditor_createResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_createRequest* request, ::octaneapi::ApiTextEditor_createResponse* response) { return this->create(context, request, response); }));}
    void SetMessageAllocatorFor_create(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_createRequest, ::octaneapi::ApiTextEditor_createResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_createRequest, ::octaneapi::ApiTextEditor_createResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_createRequest* /*request*/, ::octaneapi::ApiTextEditor_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_createRequest* /*request*/, ::octaneapi::ApiTextEditor_createResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_destroyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_destroyRequest* request, ::google::protobuf::Empty* response) { return this->destroy(context, request, response); }));}
    void SetMessageAllocatorFor_destroy(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_destroyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_destroyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_text : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_text() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_textRequest, ::octaneapi::ApiTextEditor_textResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_textRequest* request, ::octaneapi::ApiTextEditor_textResponse* response) { return this->text(context, request, response); }));}
    void SetMessageAllocatorFor_text(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_textRequest, ::octaneapi::ApiTextEditor_textResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_textRequest, ::octaneapi::ApiTextEditor_textResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_text() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status text(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_textRequest* /*request*/, ::octaneapi::ApiTextEditor_textResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* text(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_textRequest* /*request*/, ::octaneapi::ApiTextEditor_textResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isEmpty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isEmpty() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_isEmptyRequest, ::octaneapi::ApiTextEditor_isEmptyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_isEmptyRequest* request, ::octaneapi::ApiTextEditor_isEmptyResponse* response) { return this->isEmpty(context, request, response); }));}
    void SetMessageAllocatorFor_isEmpty(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_isEmptyRequest, ::octaneapi::ApiTextEditor_isEmptyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_isEmptyRequest, ::octaneapi::ApiTextEditor_isEmptyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isEmpty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isEmpty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isEmptyRequest* /*request*/, ::octaneapi::ApiTextEditor_isEmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isEmpty(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isEmptyRequest* /*request*/, ::octaneapi::ApiTextEditor_isEmptyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setText : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setText() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_setTextRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_setTextRequest* request, ::google::protobuf::Empty* response) { return this->setText(context, request, response); }));}
    void SetMessageAllocatorFor_setText(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_setTextRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_setTextRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setText() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setText(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setTextRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setText(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setTextRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clear() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_clearRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_clearRequest* request, ::google::protobuf::Empty* response) { return this->clear(context, request, response); }));}
    void SetMessageAllocatorFor_clear(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_clearRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_clearRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clear(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setReadOnly() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_setReadOnlyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* request, ::google::protobuf::Empty* response) { return this->setReadOnly(context, request, response); }));}
    void SetMessageAllocatorFor_setReadOnly(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_setReadOnlyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_setReadOnlyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setReadOnly(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isReadOnly() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_isReadOnlyRequest, ::octaneapi::ApiTextEditor_isReadOnlyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* request, ::octaneapi::ApiTextEditor_isReadOnlyResponse* response) { return this->isReadOnly(context, request, response); }));}
    void SetMessageAllocatorFor_isReadOnly(
        ::grpc::MessageAllocator< ::octaneapi::ApiTextEditor_isReadOnlyRequest, ::octaneapi::ApiTextEditor_isReadOnlyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiTextEditor_isReadOnlyRequest, ::octaneapi::ApiTextEditor_isReadOnlyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* /*request*/, ::octaneapi::ApiTextEditor_isReadOnlyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isReadOnly(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* /*request*/, ::octaneapi::ApiTextEditor_isReadOnlyResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_create<WithCallbackMethod_destroy<WithCallbackMethod_text<WithCallbackMethod_isEmpty<WithCallbackMethod_setText<WithCallbackMethod_clear<WithCallbackMethod_setReadOnly<WithCallbackMethod_isReadOnly<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_create() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_createRequest* /*request*/, ::octaneapi::ApiTextEditor_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_destroy() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_text : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_text() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_text() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status text(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_textRequest* /*request*/, ::octaneapi::ApiTextEditor_textResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isEmpty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isEmpty() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_isEmpty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isEmpty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isEmptyRequest* /*request*/, ::octaneapi::ApiTextEditor_isEmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setText : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setText() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_setText() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setText(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setTextRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clear() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setReadOnly() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_setReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isReadOnly() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_isReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* /*request*/, ::octaneapi::ApiTextEditor_isReadOnlyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_create() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_createRequest* /*request*/, ::octaneapi::ApiTextEditor_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcreate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_destroy() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_text : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_text() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_text() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status text(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_textRequest* /*request*/, ::octaneapi::ApiTextEditor_textResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttext(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isEmpty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isEmpty() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_isEmpty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isEmpty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isEmptyRequest* /*request*/, ::octaneapi::ApiTextEditor_isEmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisEmpty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setText : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setText() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_setText() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setText(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setTextRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetText(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clear() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestclear(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setReadOnly() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_setReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetReadOnly(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isReadOnly() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_isReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* /*request*/, ::octaneapi::ApiTextEditor_isReadOnlyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisReadOnly(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_create() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->create(context, request, response); }));
    }
    ~WithRawCallbackMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_createRequest* /*request*/, ::octaneapi::ApiTextEditor_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* create(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_text : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_text() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->text(context, request, response); }));
    }
    ~WithRawCallbackMethod_text() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status text(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_textRequest* /*request*/, ::octaneapi::ApiTextEditor_textResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* text(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isEmpty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isEmpty() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isEmpty(context, request, response); }));
    }
    ~WithRawCallbackMethod_isEmpty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isEmpty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isEmptyRequest* /*request*/, ::octaneapi::ApiTextEditor_isEmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isEmpty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setText : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setText() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setText(context, request, response); }));
    }
    ~WithRawCallbackMethod_setText() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setText(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setTextRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setText(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clear() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clear(context, request, response); }));
    }
    ~WithRawCallbackMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clear(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setReadOnly() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setReadOnly(context, request, response); }));
    }
    ~WithRawCallbackMethod_setReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setReadOnly(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isReadOnly() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isReadOnly(context, request, response); }));
    }
    ~WithRawCallbackMethod_isReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* /*request*/, ::octaneapi::ApiTextEditor_isReadOnlyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isReadOnly(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_create() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_createRequest, ::octaneapi::ApiTextEditor_createResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_createRequest, ::octaneapi::ApiTextEditor_createResponse>* streamer) {
                       return this->Streamedcreate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status create(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_createRequest* /*request*/, ::octaneapi::ApiTextEditor_createResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcreate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_createRequest,::octaneapi::ApiTextEditor_createResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_destroy() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_destroyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_destroyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streameddestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_destroyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_text : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_text() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_textRequest, ::octaneapi::ApiTextEditor_textResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_textRequest, ::octaneapi::ApiTextEditor_textResponse>* streamer) {
                       return this->Streamedtext(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_text() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status text(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_textRequest* /*request*/, ::octaneapi::ApiTextEditor_textResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedtext(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_textRequest,::octaneapi::ApiTextEditor_textResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isEmpty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isEmpty() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_isEmptyRequest, ::octaneapi::ApiTextEditor_isEmptyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_isEmptyRequest, ::octaneapi::ApiTextEditor_isEmptyResponse>* streamer) {
                       return this->StreamedisEmpty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isEmpty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isEmpty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isEmptyRequest* /*request*/, ::octaneapi::ApiTextEditor_isEmptyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisEmpty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_isEmptyRequest,::octaneapi::ApiTextEditor_isEmptyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setText : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setText() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_setTextRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_setTextRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetText(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setText() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setText(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setTextRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetText(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_setTextRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clear() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_clearRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_clearRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedclear(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clear(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_clearRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedclear(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_clearRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setReadOnly() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_setReadOnlyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_setReadOnlyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetReadOnly(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_setReadOnlyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetReadOnly(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_setReadOnlyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isReadOnly : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isReadOnly() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiTextEditor_isReadOnlyRequest, ::octaneapi::ApiTextEditor_isReadOnlyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiTextEditor_isReadOnlyRequest, ::octaneapi::ApiTextEditor_isReadOnlyResponse>* streamer) {
                       return this->StreamedisReadOnly(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isReadOnly() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isReadOnly(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiTextEditor_isReadOnlyRequest* /*request*/, ::octaneapi::ApiTextEditor_isReadOnlyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisReadOnly(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiTextEditor_isReadOnlyRequest,::octaneapi::ApiTextEditor_isReadOnlyResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_create<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_text<WithStreamedUnaryMethod_isEmpty<WithStreamedUnaryMethod_setText<WithStreamedUnaryMethod_clear<WithStreamedUnaryMethod_setReadOnly<WithStreamedUnaryMethod_isReadOnly<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_create<WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_text<WithStreamedUnaryMethod_isEmpty<WithStreamedUnaryMethod_setText<WithStreamedUnaryMethod_clear<WithStreamedUnaryMethod_setReadOnly<WithStreamedUnaryMethod_isReadOnly<Service > > > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apitexteditor_2eproto__INCLUDED
