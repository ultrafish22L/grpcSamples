// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apidbmaterialmanager.proto

#include "apidbmaterialmanager.pb.h"
#include "apidbmaterialmanager.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiDBMaterialManagerService_method_names[] = {
  "/octaneapi.ApiDBMaterialManagerService/getCategories",
  "/octaneapi.ApiDBMaterialManagerService/getMaterials",
  "/octaneapi.ApiDBMaterialManagerService/getMaterialPreview",
  "/octaneapi.ApiDBMaterialManagerService/downloadMaterial",
  "/octaneapi.ApiDBMaterialManagerService/downloadMaterial1",
};

std::unique_ptr< ApiDBMaterialManagerService::Stub> ApiDBMaterialManagerService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiDBMaterialManagerService::Stub> stub(new ApiDBMaterialManagerService::Stub(channel, options));
  return stub;
}

ApiDBMaterialManagerService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_getCategories_(ApiDBMaterialManagerService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getMaterials_(ApiDBMaterialManagerService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getMaterialPreview_(ApiDBMaterialManagerService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_downloadMaterial_(ApiDBMaterialManagerService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_downloadMaterial1_(ApiDBMaterialManagerService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiDBMaterialManagerService::Stub::getCategories(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getCategoriesRequest& request, ::octaneapi::ApiDBMaterialManager_getCategoriesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_getCategoriesRequest, ::octaneapi::ApiDBMaterialManager_getCategoriesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getCategories_, context, request, response);
}

void ApiDBMaterialManagerService::Stub::async::getCategories(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getCategoriesRequest* request, ::octaneapi::ApiDBMaterialManager_getCategoriesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_getCategoriesRequest, ::octaneapi::ApiDBMaterialManager_getCategoriesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCategories_, context, request, response, std::move(f));
}

void ApiDBMaterialManagerService::Stub::async::getCategories(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getCategoriesRequest* request, ::octaneapi::ApiDBMaterialManager_getCategoriesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCategories_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_getCategoriesResponse>* ApiDBMaterialManagerService::Stub::PrepareAsyncgetCategoriesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_getCategoriesResponse, ::octaneapi::ApiDBMaterialManager_getCategoriesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getCategories_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_getCategoriesResponse>* ApiDBMaterialManagerService::Stub::AsyncgetCategoriesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getCategoriesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetCategoriesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManagerService::Stub::getMaterials(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialsRequest& request, ::octaneapi::ApiDBMaterialManager_getMaterialsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_getMaterialsRequest, ::octaneapi::ApiDBMaterialManager_getMaterialsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getMaterials_, context, request, response);
}

void ApiDBMaterialManagerService::Stub::async::getMaterials(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialsRequest* request, ::octaneapi::ApiDBMaterialManager_getMaterialsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_getMaterialsRequest, ::octaneapi::ApiDBMaterialManager_getMaterialsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMaterials_, context, request, response, std::move(f));
}

void ApiDBMaterialManagerService::Stub::async::getMaterials(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialsRequest* request, ::octaneapi::ApiDBMaterialManager_getMaterialsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMaterials_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_getMaterialsResponse>* ApiDBMaterialManagerService::Stub::PrepareAsyncgetMaterialsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_getMaterialsResponse, ::octaneapi::ApiDBMaterialManager_getMaterialsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getMaterials_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_getMaterialsResponse>* ApiDBMaterialManagerService::Stub::AsyncgetMaterialsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetMaterialsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManagerService::Stub::getMaterialPreview(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest& request, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getMaterialPreview_, context, request, response);
}

void ApiDBMaterialManagerService::Stub::async::getMaterialPreview(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest* request, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMaterialPreview_, context, request, response, std::move(f));
}

void ApiDBMaterialManagerService::Stub::async::getMaterialPreview(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest* request, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMaterialPreview_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse>* ApiDBMaterialManagerService::Stub::PrepareAsyncgetMaterialPreviewRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getMaterialPreview_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse>* ApiDBMaterialManagerService::Stub::AsyncgetMaterialPreviewRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetMaterialPreviewRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManagerService::Stub::downloadMaterial(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest& request, ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest, ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_downloadMaterial_, context, request, response);
}

void ApiDBMaterialManagerService::Stub::async::downloadMaterial(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest* request, ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest, ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_downloadMaterial_, context, request, response, std::move(f));
}

void ApiDBMaterialManagerService::Stub::async::downloadMaterial(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest* request, ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_downloadMaterial_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse>* ApiDBMaterialManagerService::Stub::PrepareAsyncdownloadMaterialRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse, ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_downloadMaterial_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse>* ApiDBMaterialManagerService::Stub::AsyncdownloadMaterialRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdownloadMaterialRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManagerService::Stub::downloadMaterial1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request& request, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_downloadMaterial1_, context, request, response);
}

void ApiDBMaterialManagerService::Stub::async::downloadMaterial1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request* request, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_downloadMaterial1_, context, request, response, std::move(f));
}

void ApiDBMaterialManagerService::Stub::async::downloadMaterial1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request* request, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_downloadMaterial1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response>* ApiDBMaterialManagerService::Stub::PrepareAsyncdownloadMaterial1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_downloadMaterial1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response>* ApiDBMaterialManagerService::Stub::AsyncdownloadMaterial1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdownloadMaterial1Raw(context, request, cq);
  result->StartCall();
  return result;
}

ApiDBMaterialManagerService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManagerService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManagerService::Service, ::octaneapi::ApiDBMaterialManager_getCategoriesRequest, ::octaneapi::ApiDBMaterialManager_getCategoriesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_getCategoriesRequest* req,
             ::octaneapi::ApiDBMaterialManager_getCategoriesResponse* resp) {
               return service->getCategories(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManagerService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManagerService::Service, ::octaneapi::ApiDBMaterialManager_getMaterialsRequest, ::octaneapi::ApiDBMaterialManager_getMaterialsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_getMaterialsRequest* req,
             ::octaneapi::ApiDBMaterialManager_getMaterialsResponse* resp) {
               return service->getMaterials(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManagerService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManagerService::Service, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest* req,
             ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse* resp) {
               return service->getMaterialPreview(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManagerService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManagerService::Service, ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest, ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest* req,
             ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse* resp) {
               return service->downloadMaterial(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManagerService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManagerService::Service, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManagerService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request* req,
             ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response* resp) {
               return service->downloadMaterial1(ctx, req, resp);
             }, this)));
}

ApiDBMaterialManagerService::Service::~Service() {
}

::grpc::Status ApiDBMaterialManagerService::Service::getCategories(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_getCategoriesRequest* request, ::octaneapi::ApiDBMaterialManager_getCategoriesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManagerService::Service::getMaterials(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialsRequest* request, ::octaneapi::ApiDBMaterialManager_getMaterialsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManagerService::Service::getMaterialPreview(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_getMaterialPreviewRequest* request, ::octaneapi::ApiDBMaterialManager_getMaterialPreviewResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManagerService::Service::downloadMaterial(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterialRequest* request, ::octaneapi::ApiDBMaterialManager_downloadMaterialResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManagerService::Service::downloadMaterial1(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_downloadMaterial1Request* request, ::octaneapi::ApiDBMaterialManager_downloadMaterial1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiDBMaterialManager_DBCategoryArrayService_method_names[] = {
  "/octaneapi.ApiDBMaterialManager_DBCategoryArrayService/init",
  "/octaneapi.ApiDBMaterialManager_DBCategoryArrayService/free",
  "/octaneapi.ApiDBMaterialManager_DBCategoryArrayService/getCategory",
  "/octaneapi.ApiDBMaterialManager_DBCategoryArrayService/getCount",
};

std::unique_ptr< ApiDBMaterialManager_DBCategoryArrayService::Stub> ApiDBMaterialManager_DBCategoryArrayService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiDBMaterialManager_DBCategoryArrayService::Stub> stub(new ApiDBMaterialManager_DBCategoryArrayService::Stub(channel, options));
  return stub;
}

ApiDBMaterialManager_DBCategoryArrayService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_init_(ApiDBMaterialManager_DBCategoryArrayService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_free_(ApiDBMaterialManager_DBCategoryArrayService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getCategory_(ApiDBMaterialManager_DBCategoryArrayService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getCount_(ApiDBMaterialManager_DBCategoryArrayService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Stub::init(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_, context, request, response);
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::init(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::init(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBCategoryArrayService::Stub::PrepareAsyncinitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBCategoryArrayService::Stub::AsyncinitRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinitRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Stub::free(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_free_, context, request, response);
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::free(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::free(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBCategoryArrayService::Stub::PrepareAsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_free_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBCategoryArrayService::Stub::AsyncfreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfreeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Stub::getCategory(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest& request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getCategory_, context, request, response);
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::getCategory(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCategory_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::getCategory(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCategory_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse>* ApiDBMaterialManager_DBCategoryArrayService::Stub::PrepareAsyncgetCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getCategory_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse>* ApiDBMaterialManager_DBCategoryArrayService::Stub::AsyncgetCategoryRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetCategoryRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Stub::getCount(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest& request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getCount_, context, request, response);
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::getCount(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCount_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBCategoryArrayService::Stub::async::getCount(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCount_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse>* ApiDBMaterialManager_DBCategoryArrayService::Stub::PrepareAsyncgetCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getCount_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse>* ApiDBMaterialManager_DBCategoryArrayService::Stub::AsyncgetCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetCountRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiDBMaterialManager_DBCategoryArrayService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBCategoryArrayService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBCategoryArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBCategoryArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->init(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBCategoryArrayService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBCategoryArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBCategoryArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->free(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBCategoryArrayService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBCategoryArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBCategoryArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest* req,
             ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse* resp) {
               return service->getCategory(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBCategoryArrayService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBCategoryArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBCategoryArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest* req,
             ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse* resp) {
               return service->getCount(ctx, req, resp);
             }, this)));
}

ApiDBMaterialManager_DBCategoryArrayService::Service::~Service() {
}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Service::init(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_initRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Service::free(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_freeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Service::getCategory(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCategoryResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManager_DBCategoryArrayService::Service::getCount(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBCategoryArray_getCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ApiDBMaterialManager_DBMaterialArrayService_method_names[] = {
  "/octaneapi.ApiDBMaterialManager_DBMaterialArrayService/init1",
  "/octaneapi.ApiDBMaterialManager_DBMaterialArrayService/free1",
  "/octaneapi.ApiDBMaterialManager_DBMaterialArrayService/getMaterial",
  "/octaneapi.ApiDBMaterialManager_DBMaterialArrayService/getCount1",
};

std::unique_ptr< ApiDBMaterialManager_DBMaterialArrayService::Stub> ApiDBMaterialManager_DBMaterialArrayService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiDBMaterialManager_DBMaterialArrayService::Stub> stub(new ApiDBMaterialManager_DBMaterialArrayService::Stub(channel, options));
  return stub;
}

ApiDBMaterialManager_DBMaterialArrayService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_init1_(ApiDBMaterialManager_DBMaterialArrayService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_free1_(ApiDBMaterialManager_DBMaterialArrayService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getMaterial_(ApiDBMaterialManager_DBMaterialArrayService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getCount1_(ApiDBMaterialManager_DBMaterialArrayService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Stub::init1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init1_, context, request, response);
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::init1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init1_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::init1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBMaterialArrayService::Stub::PrepareAsyncinit1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBMaterialArrayService::Stub::Asyncinit1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinit1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Stub::free1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_free1_, context, request, response);
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::free1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free1_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::free1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_free1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBMaterialArrayService::Stub::PrepareAsyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_free1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ApiDBMaterialManager_DBMaterialArrayService::Stub::Asyncfree1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncfree1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Stub::getMaterial(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest& request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getMaterial_, context, request, response);
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::getMaterial(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMaterial_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::getMaterial(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMaterial_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse>* ApiDBMaterialManager_DBMaterialArrayService::Stub::PrepareAsyncgetMaterialRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getMaterial_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse>* ApiDBMaterialManager_DBMaterialArrayService::Stub::AsyncgetMaterialRaw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetMaterialRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Stub::getCount1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest& request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getCount1_, context, request, response);
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::getCount1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCount1_, context, request, response, std::move(f));
}

void ApiDBMaterialManager_DBMaterialArrayService::Stub::async::getCount1(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCount1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse>* ApiDBMaterialManager_DBMaterialArrayService::Stub::PrepareAsyncgetCount1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getCount1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse>* ApiDBMaterialManager_DBMaterialArrayService::Stub::AsyncgetCount1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetCount1Raw(context, request, cq);
  result->StartCall();
  return result;
}

ApiDBMaterialManager_DBMaterialArrayService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBMaterialArrayService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBMaterialArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBMaterialArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->init1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBMaterialArrayService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBMaterialArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBMaterialArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->free1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBMaterialArrayService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBMaterialArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBMaterialArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest* req,
             ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse* resp) {
               return service->getMaterial(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiDBMaterialManager_DBMaterialArrayService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiDBMaterialManager_DBMaterialArrayService::Service, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiDBMaterialManager_DBMaterialArrayService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest* req,
             ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse* resp) {
               return service->getCount1(ctx, req, resp);
             }, this)));
}

ApiDBMaterialManager_DBMaterialArrayService::Service::~Service() {
}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Service::init1(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_initRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Service::free1(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_freeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Service::getMaterial(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getMaterialResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiDBMaterialManager_DBMaterialArrayService::Service::getCount1(::grpc::ServerContext* context, const ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountRequest* request, ::octaneapi::ApiDBMaterialManager_ApiDBMaterialManager_DBMaterialArray_getCountResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

