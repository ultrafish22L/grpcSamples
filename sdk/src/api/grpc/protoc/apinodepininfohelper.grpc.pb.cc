// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodepininfohelper.proto

#include "apinodepininfohelper.pb.h"
#include "apinodepininfohelper.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>
namespace octaneapi {

static const char* ApiNodePinInfoExService_method_names[] = {
  "/octaneapi.ApiNodePinInfoExService/createApiNodePinInfoArray",
  "/octaneapi.ApiNodePinInfoExService/createApiNodePinInfo",
  "/octaneapi.ApiNodePinInfoExService/deleteApiNodePinInfo",
  "/octaneapi.ApiNodePinInfoExService/updateApiNodePinInfo",
  "/octaneapi.ApiNodePinInfoExService/getApiNodePinInfo",
};

std::unique_ptr< ApiNodePinInfoExService::Stub> ApiNodePinInfoExService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ApiNodePinInfoExService::Stub> stub(new ApiNodePinInfoExService::Stub(channel, options));
  return stub;
}

ApiNodePinInfoExService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_createApiNodePinInfoArray_(ApiNodePinInfoExService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_createApiNodePinInfo_(ApiNodePinInfoExService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_deleteApiNodePinInfo_(ApiNodePinInfoExService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_updateApiNodePinInfo_(ApiNodePinInfoExService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getApiNodePinInfo_(ApiNodePinInfoExService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ApiNodePinInfoExService::Stub::createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createApiNodePinInfoArray_, context, request, response);
}

void ApiNodePinInfoExService::Stub::async::createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createApiNodePinInfoArray_, context, request, response, std::move(f));
}

void ApiNodePinInfoExService::Stub::async::createApiNodePinInfoArray(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createApiNodePinInfoArray_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* ApiNodePinInfoExService::Stub::PrepareAsynccreateApiNodePinInfoArrayRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createApiNodePinInfoArray_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse>* ApiNodePinInfoExService::Stub::AsynccreateApiNodePinInfoArrayRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateApiNodePinInfoArrayRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodePinInfoExService::Stub::createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_createApiNodePinInfo_, context, request, response);
}

void ApiNodePinInfoExService::Stub::async::createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createApiNodePinInfo_, context, request, response, std::move(f));
}

void ApiNodePinInfoExService::Stub::async::createApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_createApiNodePinInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* ApiNodePinInfoExService::Stub::PrepareAsynccreateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_createApiNodePinInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse>* ApiNodePinInfoExService::Stub::AsynccreateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynccreateApiNodePinInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodePinInfoExService::Stub::deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_deleteApiNodePinInfo_, context, request, response);
}

void ApiNodePinInfoExService::Stub::async::deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deleteApiNodePinInfo_, context, request, response, std::move(f));
}

void ApiNodePinInfoExService::Stub::async::deleteApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_deleteApiNodePinInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* ApiNodePinInfoExService::Stub::PrepareAsyncdeleteApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_deleteApiNodePinInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse>* ApiNodePinInfoExService::Stub::AsyncdeleteApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncdeleteApiNodePinInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodePinInfoExService::Stub::updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_updateApiNodePinInfo_, context, request, response);
}

void ApiNodePinInfoExService::Stub::async::updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_updateApiNodePinInfo_, context, request, response, std::move(f));
}

void ApiNodePinInfoExService::Stub::async::updateApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_updateApiNodePinInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* ApiNodePinInfoExService::Stub::PrepareAsyncupdateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_updateApiNodePinInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse>* ApiNodePinInfoExService::Stub::AsyncupdateApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncupdateApiNodePinInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ApiNodePinInfoExService::Stub::getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getApiNodePinInfo_, context, request, response);
}

void ApiNodePinInfoExService::Stub::async::getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getApiNodePinInfo_, context, request, response, std::move(f));
}

void ApiNodePinInfoExService::Stub::async::getApiNodePinInfo(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getApiNodePinInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* ApiNodePinInfoExService::Stub::PrepareAsyncgetApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getApiNodePinInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse>* ApiNodePinInfoExService::Stub::AsyncgetApiNodePinInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetApiNodePinInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

ApiNodePinInfoExService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodePinInfoExService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodePinInfoExService::Service, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodePinInfoExService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* req,
             ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* resp) {
               return service->createApiNodePinInfoArray(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodePinInfoExService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodePinInfoExService::Service, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodePinInfoExService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* req,
             ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* resp) {
               return service->createApiNodePinInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodePinInfoExService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodePinInfoExService::Service, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodePinInfoExService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* req,
             ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* resp) {
               return service->deleteApiNodePinInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodePinInfoExService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodePinInfoExService::Service, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodePinInfoExService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* req,
             ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* resp) {
               return service->updateApiNodePinInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ApiNodePinInfoExService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ApiNodePinInfoExService::Service, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ApiNodePinInfoExService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* req,
             ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* resp) {
               return service->getApiNodePinInfo(ctx, req, resp);
             }, this)));
}

ApiNodePinInfoExService::Service::~Service() {
}

::grpc::Status ApiNodePinInfoExService::Service::createApiNodePinInfoArray(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoArrayResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodePinInfoExService::Service::createApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_CreateNodePinInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodePinInfoExService::Service::deleteApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_DeleteNodePinInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodePinInfoExService::Service::updateApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_UpdateNodePinInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ApiNodePinInfoExService::Service::getApiNodePinInfo(::grpc::ServerContext* context, const ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoRequest* request, ::octaneapi::ApiNodePinInfoEx_GetNodePinInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace octaneapi
#include <grpcpp/ports_undef.inc>

