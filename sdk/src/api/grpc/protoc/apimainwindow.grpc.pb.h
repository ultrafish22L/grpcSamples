// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apimainwindow.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_apimainwindow_2eproto__INCLUDED
#define GRPC_apimainwindow_2eproto__INCLUDED

#include "apimainwindow.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ApiMainWindow' from 'apimainwindow.h'
class ApiMainWindowService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiMainWindowService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Fetches or creates a new ApiMainWindow
    virtual ::grpc::Status fetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>> AsyncfetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>>(AsyncfetchOrCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>> PrepareAsyncfetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>>(PrepareAsyncfetchOrCreateInstanceRaw(context, request, cq));
    }
    // / Yields to perform some UI tasks
    virtual ::grpc::Status runDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncrunDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncrunDispatchLoopUntilRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncrunDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncrunDispatchLoopUntilRaw(context, request, cq));
    }
    // / Sets the DPI of the UI
    virtual ::grpc::Status setDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetDpiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetDpiRaw(context, request, cq));
    }
    // / Windows only have a single content component
    virtual ::grpc::Status addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncaddContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncaddContentComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncaddContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncaddContentComponentRaw(context, request, cq));
    }
    // / Returns the ProjectWorkspace of this MainWindow
    virtual ::grpc::Status projectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>> AsyncprojectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>>(AsyncprojectWorkspaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>> PrepareAsyncprojectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>>(PrepareAsyncprojectWorkspaceRaw(context, request, cq));
    }
    // / Returns the ProjectWorkspace of this MainWindow
    virtual ::grpc::Status projectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspace1Response>> AsyncprojectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspace1Response>>(AsyncprojectWorkspace1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspace1Response>> PrepareAsyncprojectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspace1Response>>(PrepareAsyncprojectWorkspace1Raw(context, request, cq));
    }
    // / Shows this window
    virtual ::grpc::Status show(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncshow(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncshowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncshow(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncshowRaw(context, request, cq));
    }
    // / Hides this window again
    virtual ::grpc::Status hide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asynchide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynchideRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynchide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynchideRaw(context, request, cq));
    }
    // / Returns TRUE if this window is visible
    virtual ::grpc::Status visible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::octaneapi::ApiMainWindow_visibleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_visibleResponse>> Asyncvisible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_visibleResponse>>(AsyncvisibleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_visibleResponse>> PrepareAsyncvisible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_visibleResponse>>(PrepareAsyncvisibleRaw(context, request, cq));
    }
    // / Sets default ApiNodeGraph to be shown by any ApiNodeGraphEditors created by the user
    virtual ::grpc::Status setDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetDefaultGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetDefaultGraphRaw(context, request, cq));
    }
    // / Gets the default ApiNodeGraph to be shown by any ApiNodeGraphEditors created by the user
    virtual ::grpc::Status defaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_defaultGraphResponse>> AsyncdefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_defaultGraphResponse>>(AsyncdefaultGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_defaultGraphResponse>> PrepareAsyncdefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_defaultGraphResponse>>(PrepareAsyncdefaultGraphRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Fetches or creates a new ApiMainWindow
      virtual void fetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void fetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Yields to perform some UI tasks
      virtual void runDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void runDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the DPI of the UI
      virtual void setDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Windows only have a single content component
      virtual void addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the ProjectWorkspace of this MainWindow
      virtual void projectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void projectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the ProjectWorkspace of this MainWindow
      virtual void projectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void projectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Shows this window
      virtual void show(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void show(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Hides this window again
      virtual void hide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void hide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if this window is visible
      virtual void visible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest* request, ::octaneapi::ApiMainWindow_visibleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void visible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest* request, ::octaneapi::ApiMainWindow_visibleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets default ApiNodeGraph to be shown by any ApiNodeGraphEditors created by the user
      virtual void setDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Gets the default ApiNodeGraph to be shown by any ApiNodeGraphEditors created by the user
      virtual void defaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest* request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void defaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest* request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* AsyncfetchOrCreateInstanceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* PrepareAsyncfetchOrCreateInstanceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncrunDispatchLoopUntilRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncrunDispatchLoopUntilRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetDpiRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetDpiRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncaddContentComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncaddContentComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>* AsyncprojectWorkspaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>* PrepareAsyncprojectWorkspaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspace1Response>* AsyncprojectWorkspace1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_projectWorkspace1Response>* PrepareAsyncprojectWorkspace1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncshowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncshowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynchideRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynchideRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_visibleResponse>* AsyncvisibleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_visibleResponse>* PrepareAsyncvisibleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetDefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetDefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_defaultGraphResponse>* AsyncdefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiMainWindow_defaultGraphResponse>* PrepareAsyncdefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status fetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>> AsyncfetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>>(AsyncfetchOrCreateInstanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>> PrepareAsyncfetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>>(PrepareAsyncfetchOrCreateInstanceRaw(context, request, cq));
    }
    ::grpc::Status runDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncrunDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncrunDispatchLoopUntilRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncrunDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncrunDispatchLoopUntilRaw(context, request, cq));
    }
    ::grpc::Status setDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetDpiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetDpiRaw(context, request, cq));
    }
    ::grpc::Status addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncaddContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncaddContentComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncaddContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncaddContentComponentRaw(context, request, cq));
    }
    ::grpc::Status projectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>> AsyncprojectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>>(AsyncprojectWorkspaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>> PrepareAsyncprojectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>>(PrepareAsyncprojectWorkspaceRaw(context, request, cq));
    }
    ::grpc::Status projectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspace1Response>> AsyncprojectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspace1Response>>(AsyncprojectWorkspace1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspace1Response>> PrepareAsyncprojectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspace1Response>>(PrepareAsyncprojectWorkspace1Raw(context, request, cq));
    }
    ::grpc::Status show(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncshow(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncshowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncshow(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncshowRaw(context, request, cq));
    }
    ::grpc::Status hide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asynchide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynchideRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynchide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynchideRaw(context, request, cq));
    }
    ::grpc::Status visible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::octaneapi::ApiMainWindow_visibleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_visibleResponse>> Asyncvisible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_visibleResponse>>(AsyncvisibleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_visibleResponse>> PrepareAsyncvisible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_visibleResponse>>(PrepareAsyncvisibleRaw(context, request, cq));
    }
    ::grpc::Status setDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetDefaultGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetDefaultGraphRaw(context, request, cq));
    }
    ::grpc::Status defaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_defaultGraphResponse>> AsyncdefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_defaultGraphResponse>>(AsyncdefaultGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_defaultGraphResponse>> PrepareAsyncdefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_defaultGraphResponse>>(PrepareAsyncdefaultGraphRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void fetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response, std::function<void(::grpc::Status)>) override;
      void fetchOrCreateInstance(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void runDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void runDispatchLoopUntil(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setDpi(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void addContentComponent(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void projectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response, std::function<void(::grpc::Status)>) override;
      void projectWorkspace(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void projectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response, std::function<void(::grpc::Status)>) override;
      void projectWorkspace1(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void show(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void show(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void hide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void hide(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void visible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest* request, ::octaneapi::ApiMainWindow_visibleResponse* response, std::function<void(::grpc::Status)>) override;
      void visible(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest* request, ::octaneapi::ApiMainWindow_visibleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setDefaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void defaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest* request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response, std::function<void(::grpc::Status)>) override;
      void defaultGraph(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest* request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* AsyncfetchOrCreateInstanceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* PrepareAsyncfetchOrCreateInstanceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncrunDispatchLoopUntilRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncrunDispatchLoopUntilRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetDpiRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetDpiRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncaddContentComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncaddContentComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>* AsyncprojectWorkspaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>* PrepareAsyncprojectWorkspaceRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspace1Response>* AsyncprojectWorkspace1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_projectWorkspace1Response>* PrepareAsyncprojectWorkspace1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncshowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncshowRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_showRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynchideRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynchideRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_hideRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_visibleResponse>* AsyncvisibleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_visibleResponse>* PrepareAsyncvisibleRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_visibleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetDefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetDefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_defaultGraphResponse>* AsyncdefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiMainWindow_defaultGraphResponse>* PrepareAsyncdefaultGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_fetchOrCreateInstance_;
    const ::grpc::internal::RpcMethod rpcmethod_runDispatchLoopUntil_;
    const ::grpc::internal::RpcMethod rpcmethod_setDpi_;
    const ::grpc::internal::RpcMethod rpcmethod_addContentComponent_;
    const ::grpc::internal::RpcMethod rpcmethod_projectWorkspace_;
    const ::grpc::internal::RpcMethod rpcmethod_projectWorkspace1_;
    const ::grpc::internal::RpcMethod rpcmethod_show_;
    const ::grpc::internal::RpcMethod rpcmethod_hide_;
    const ::grpc::internal::RpcMethod rpcmethod_visible_;
    const ::grpc::internal::RpcMethod rpcmethod_setDefaultGraph_;
    const ::grpc::internal::RpcMethod rpcmethod_defaultGraph_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Fetches or creates a new ApiMainWindow
    virtual ::grpc::Status fetchOrCreateInstance(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response);
    // / Yields to perform some UI tasks
    virtual ::grpc::Status runDispatchLoopUntil(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* request, ::google::protobuf::Empty* response);
    // / Sets the DPI of the UI
    virtual ::grpc::Status setDpi(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest* request, ::google::protobuf::Empty* response);
    // / Windows only have a single content component
    virtual ::grpc::Status addContentComponent(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest* request, ::google::protobuf::Empty* response);
    // / Returns the ProjectWorkspace of this MainWindow
    virtual ::grpc::Status projectWorkspace(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response);
    // / Returns the ProjectWorkspace of this MainWindow
    virtual ::grpc::Status projectWorkspace1(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response);
    // / Shows this window
    virtual ::grpc::Status show(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_showRequest* request, ::google::protobuf::Empty* response);
    // / Hides this window again
    virtual ::grpc::Status hide(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_hideRequest* request, ::google::protobuf::Empty* response);
    // / Returns TRUE if this window is visible
    virtual ::grpc::Status visible(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_visibleRequest* request, ::octaneapi::ApiMainWindow_visibleResponse* response);
    // / Sets default ApiNodeGraph to be shown by any ApiNodeGraphEditors created by the user
    virtual ::grpc::Status setDefaultGraph(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* request, ::google::protobuf::Empty* response);
    // / Gets the default ApiNodeGraph to be shown by any ApiNodeGraphEditors created by the user
    virtual ::grpc::Status defaultGraph(::grpc::ServerContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest* request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_fetchOrCreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_fetchOrCreateInstance() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_fetchOrCreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fetchOrCreateInstance(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* /*request*/, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfetchOrCreateInstance(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_runDispatchLoopUntil : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_runDispatchLoopUntil() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_runDispatchLoopUntil() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status runDispatchLoopUntil(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrunDispatchLoopUntil(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setDpi : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setDpi() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_setDpi() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDpi(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDpiRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetDpi(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_setDpiRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_addContentComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_addContentComponent() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_addContentComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addContentComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_addContentComponentRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddContentComponent(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_addContentComponentRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_projectWorkspace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_projectWorkspace() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_projectWorkspace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestprojectWorkspace(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_projectWorkspaceRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiMainWindow_projectWorkspaceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_projectWorkspace1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_projectWorkspace1() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_projectWorkspace1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspace1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestprojectWorkspace1(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_projectWorkspace1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiMainWindow_projectWorkspace1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_show() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status show(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_showRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestshow(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_showRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_hide : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_hide() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_hide() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hide(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_hideRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesthide(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_hideRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_visible : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_visible() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_visible() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status visible(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_visibleRequest* /*request*/, ::octaneapi::ApiMainWindow_visibleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestvisible(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_visibleRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiMainWindow_visibleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setDefaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setDefaultGraph() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_setDefaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDefaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetDefaultGraph(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_setDefaultGraphRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_defaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_defaultGraph() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_defaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status defaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_defaultGraphRequest* /*request*/, ::octaneapi::ApiMainWindow_defaultGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdefaultGraph(::grpc::ServerContext* context, ::octaneapi::ApiMainWindow_defaultGraphRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiMainWindow_defaultGraphResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_fetchOrCreateInstance<WithAsyncMethod_runDispatchLoopUntil<WithAsyncMethod_setDpi<WithAsyncMethod_addContentComponent<WithAsyncMethod_projectWorkspace<WithAsyncMethod_projectWorkspace1<WithAsyncMethod_show<WithAsyncMethod_hide<WithAsyncMethod_visible<WithAsyncMethod_setDefaultGraph<WithAsyncMethod_defaultGraph<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_fetchOrCreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_fetchOrCreateInstance() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* request, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* response) { return this->fetchOrCreateInstance(context, request, response); }));}
    void SetMessageAllocatorFor_fetchOrCreateInstance(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_fetchOrCreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fetchOrCreateInstance(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* /*request*/, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* fetchOrCreateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* /*request*/, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_runDispatchLoopUntil : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_runDispatchLoopUntil() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* request, ::google::protobuf::Empty* response) { return this->runDispatchLoopUntil(context, request, response); }));}
    void SetMessageAllocatorFor_runDispatchLoopUntil(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_runDispatchLoopUntil() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status runDispatchLoopUntil(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* runDispatchLoopUntil(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setDpi : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setDpi() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_setDpiRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_setDpiRequest* request, ::google::protobuf::Empty* response) { return this->setDpi(context, request, response); }));}
    void SetMessageAllocatorFor_setDpi(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_setDpiRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_setDpiRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setDpi() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDpi(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDpiRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setDpi(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDpiRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_addContentComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_addContentComponent() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_addContentComponentRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_addContentComponentRequest* request, ::google::protobuf::Empty* response) { return this->addContentComponent(context, request, response); }));}
    void SetMessageAllocatorFor_addContentComponent(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_addContentComponentRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_addContentComponentRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_addContentComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addContentComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_addContentComponentRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addContentComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_addContentComponentRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_projectWorkspace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_projectWorkspace() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_projectWorkspaceRequest, ::octaneapi::ApiMainWindow_projectWorkspaceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* request, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* response) { return this->projectWorkspace(context, request, response); }));}
    void SetMessageAllocatorFor_projectWorkspace(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_projectWorkspaceRequest, ::octaneapi::ApiMainWindow_projectWorkspaceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_projectWorkspaceRequest, ::octaneapi::ApiMainWindow_projectWorkspaceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_projectWorkspace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* projectWorkspace(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_projectWorkspace1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_projectWorkspace1() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_projectWorkspace1Request, ::octaneapi::ApiMainWindow_projectWorkspace1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* request, ::octaneapi::ApiMainWindow_projectWorkspace1Response* response) { return this->projectWorkspace1(context, request, response); }));}
    void SetMessageAllocatorFor_projectWorkspace1(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_projectWorkspace1Request, ::octaneapi::ApiMainWindow_projectWorkspace1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_projectWorkspace1Request, ::octaneapi::ApiMainWindow_projectWorkspace1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_projectWorkspace1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspace1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* projectWorkspace1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspace1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_show() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_showRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_showRequest* request, ::google::protobuf::Empty* response) { return this->show(context, request, response); }));}
    void SetMessageAllocatorFor_show(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_showRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_showRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status show(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_showRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* show(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_showRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_hide : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_hide() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_hideRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_hideRequest* request, ::google::protobuf::Empty* response) { return this->hide(context, request, response); }));}
    void SetMessageAllocatorFor_hide(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_hideRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_hideRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_hide() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hide(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_hideRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hide(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_hideRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_visible : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_visible() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_visibleRequest, ::octaneapi::ApiMainWindow_visibleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_visibleRequest* request, ::octaneapi::ApiMainWindow_visibleResponse* response) { return this->visible(context, request, response); }));}
    void SetMessageAllocatorFor_visible(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_visibleRequest, ::octaneapi::ApiMainWindow_visibleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_visibleRequest, ::octaneapi::ApiMainWindow_visibleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_visible() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status visible(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_visibleRequest* /*request*/, ::octaneapi::ApiMainWindow_visibleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* visible(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_visibleRequest* /*request*/, ::octaneapi::ApiMainWindow_visibleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setDefaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setDefaultGraph() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_setDefaultGraphRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* request, ::google::protobuf::Empty* response) { return this->setDefaultGraph(context, request, response); }));}
    void SetMessageAllocatorFor_setDefaultGraph(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_setDefaultGraphRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_setDefaultGraphRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setDefaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDefaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setDefaultGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_defaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_defaultGraph() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_defaultGraphRequest, ::octaneapi::ApiMainWindow_defaultGraphResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiMainWindow_defaultGraphRequest* request, ::octaneapi::ApiMainWindow_defaultGraphResponse* response) { return this->defaultGraph(context, request, response); }));}
    void SetMessageAllocatorFor_defaultGraph(
        ::grpc::MessageAllocator< ::octaneapi::ApiMainWindow_defaultGraphRequest, ::octaneapi::ApiMainWindow_defaultGraphResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiMainWindow_defaultGraphRequest, ::octaneapi::ApiMainWindow_defaultGraphResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_defaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status defaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_defaultGraphRequest* /*request*/, ::octaneapi::ApiMainWindow_defaultGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* defaultGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiMainWindow_defaultGraphRequest* /*request*/, ::octaneapi::ApiMainWindow_defaultGraphResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_fetchOrCreateInstance<WithCallbackMethod_runDispatchLoopUntil<WithCallbackMethod_setDpi<WithCallbackMethod_addContentComponent<WithCallbackMethod_projectWorkspace<WithCallbackMethod_projectWorkspace1<WithCallbackMethod_show<WithCallbackMethod_hide<WithCallbackMethod_visible<WithCallbackMethod_setDefaultGraph<WithCallbackMethod_defaultGraph<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_fetchOrCreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_fetchOrCreateInstance() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_fetchOrCreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fetchOrCreateInstance(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* /*request*/, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_runDispatchLoopUntil : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_runDispatchLoopUntil() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_runDispatchLoopUntil() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status runDispatchLoopUntil(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setDpi : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setDpi() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_setDpi() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDpi(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDpiRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_addContentComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_addContentComponent() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_addContentComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addContentComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_addContentComponentRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_projectWorkspace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_projectWorkspace() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_projectWorkspace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_projectWorkspace1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_projectWorkspace1() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_projectWorkspace1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspace1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_show() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status show(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_showRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_hide : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_hide() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_hide() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hide(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_hideRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_visible : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_visible() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_visible() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status visible(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_visibleRequest* /*request*/, ::octaneapi::ApiMainWindow_visibleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setDefaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setDefaultGraph() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_setDefaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDefaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_defaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_defaultGraph() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_defaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status defaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_defaultGraphRequest* /*request*/, ::octaneapi::ApiMainWindow_defaultGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_fetchOrCreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_fetchOrCreateInstance() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_fetchOrCreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fetchOrCreateInstance(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* /*request*/, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfetchOrCreateInstance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_runDispatchLoopUntil : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_runDispatchLoopUntil() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_runDispatchLoopUntil() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status runDispatchLoopUntil(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrunDispatchLoopUntil(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setDpi : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setDpi() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_setDpi() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDpi(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDpiRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetDpi(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_addContentComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_addContentComponent() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_addContentComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addContentComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_addContentComponentRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestaddContentComponent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_projectWorkspace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_projectWorkspace() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_projectWorkspace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestprojectWorkspace(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_projectWorkspace1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_projectWorkspace1() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_projectWorkspace1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspace1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestprojectWorkspace1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_show() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status show(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_showRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestshow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_hide : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_hide() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_hide() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hide(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_hideRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesthide(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_visible : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_visible() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_visible() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status visible(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_visibleRequest* /*request*/, ::octaneapi::ApiMainWindow_visibleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestvisible(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setDefaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setDefaultGraph() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_setDefaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDefaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetDefaultGraph(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_defaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_defaultGraph() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_defaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status defaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_defaultGraphRequest* /*request*/, ::octaneapi::ApiMainWindow_defaultGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdefaultGraph(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_fetchOrCreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_fetchOrCreateInstance() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->fetchOrCreateInstance(context, request, response); }));
    }
    ~WithRawCallbackMethod_fetchOrCreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status fetchOrCreateInstance(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* /*request*/, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* fetchOrCreateInstance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_runDispatchLoopUntil : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_runDispatchLoopUntil() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->runDispatchLoopUntil(context, request, response); }));
    }
    ~WithRawCallbackMethod_runDispatchLoopUntil() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status runDispatchLoopUntil(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* runDispatchLoopUntil(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setDpi : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setDpi() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setDpi(context, request, response); }));
    }
    ~WithRawCallbackMethod_setDpi() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDpi(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDpiRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setDpi(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_addContentComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_addContentComponent() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->addContentComponent(context, request, response); }));
    }
    ~WithRawCallbackMethod_addContentComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status addContentComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_addContentComponentRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* addContentComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_projectWorkspace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_projectWorkspace() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->projectWorkspace(context, request, response); }));
    }
    ~WithRawCallbackMethod_projectWorkspace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* projectWorkspace(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_projectWorkspace1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_projectWorkspace1() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->projectWorkspace1(context, request, response); }));
    }
    ~WithRawCallbackMethod_projectWorkspace1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status projectWorkspace1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspace1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* projectWorkspace1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_show() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->show(context, request, response); }));
    }
    ~WithRawCallbackMethod_show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status show(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_showRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* show(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_hide : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_hide() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->hide(context, request, response); }));
    }
    ~WithRawCallbackMethod_hide() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hide(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_hideRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hide(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_visible : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_visible() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->visible(context, request, response); }));
    }
    ~WithRawCallbackMethod_visible() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status visible(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_visibleRequest* /*request*/, ::octaneapi::ApiMainWindow_visibleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* visible(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setDefaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setDefaultGraph() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setDefaultGraph(context, request, response); }));
    }
    ~WithRawCallbackMethod_setDefaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setDefaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setDefaultGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_defaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_defaultGraph() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->defaultGraph(context, request, response); }));
    }
    ~WithRawCallbackMethod_defaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status defaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_defaultGraphRequest* /*request*/, ::octaneapi::ApiMainWindow_defaultGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* defaultGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_fetchOrCreateInstance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_fetchOrCreateInstance() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* streamer) {
                       return this->StreamedfetchOrCreateInstance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_fetchOrCreateInstance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status fetchOrCreateInstance(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest* /*request*/, ::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfetchOrCreateInstance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_fetchOrCreateInstanceRequest,::octaneapi::ApiMainWindow_fetchOrCreateInstanceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_runDispatchLoopUntil : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_runDispatchLoopUntil() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedrunDispatchLoopUntil(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_runDispatchLoopUntil() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status runDispatchLoopUntil(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedrunDispatchLoopUntil(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_runDispatchLoopUntilRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setDpi : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setDpi() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_setDpiRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_setDpiRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetDpi(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setDpi() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setDpi(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDpiRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetDpi(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_setDpiRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_addContentComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_addContentComponent() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_addContentComponentRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_addContentComponentRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedaddContentComponent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_addContentComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status addContentComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_addContentComponentRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedaddContentComponent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_addContentComponentRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_projectWorkspace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_projectWorkspace() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_projectWorkspaceRequest, ::octaneapi::ApiMainWindow_projectWorkspaceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_projectWorkspaceRequest, ::octaneapi::ApiMainWindow_projectWorkspaceResponse>* streamer) {
                       return this->StreamedprojectWorkspace(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_projectWorkspace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status projectWorkspace(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspaceRequest* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedprojectWorkspace(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_projectWorkspaceRequest,::octaneapi::ApiMainWindow_projectWorkspaceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_projectWorkspace1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_projectWorkspace1() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_projectWorkspace1Request, ::octaneapi::ApiMainWindow_projectWorkspace1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_projectWorkspace1Request, ::octaneapi::ApiMainWindow_projectWorkspace1Response>* streamer) {
                       return this->StreamedprojectWorkspace1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_projectWorkspace1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status projectWorkspace1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_projectWorkspace1Request* /*request*/, ::octaneapi::ApiMainWindow_projectWorkspace1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedprojectWorkspace1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_projectWorkspace1Request,::octaneapi::ApiMainWindow_projectWorkspace1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_show : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_show() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_showRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_showRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedshow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_show() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status show(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_showRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedshow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_showRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_hide : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_hide() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_hideRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_hideRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedhide(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_hide() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status hide(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_hideRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedhide(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_hideRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_visible : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_visible() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_visibleRequest, ::octaneapi::ApiMainWindow_visibleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_visibleRequest, ::octaneapi::ApiMainWindow_visibleResponse>* streamer) {
                       return this->Streamedvisible(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_visible() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status visible(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_visibleRequest* /*request*/, ::octaneapi::ApiMainWindow_visibleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedvisible(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_visibleRequest,::octaneapi::ApiMainWindow_visibleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setDefaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setDefaultGraph() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_setDefaultGraphRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_setDefaultGraphRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetDefaultGraph(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setDefaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setDefaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_setDefaultGraphRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetDefaultGraph(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_setDefaultGraphRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_defaultGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_defaultGraph() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiMainWindow_defaultGraphRequest, ::octaneapi::ApiMainWindow_defaultGraphResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiMainWindow_defaultGraphRequest, ::octaneapi::ApiMainWindow_defaultGraphResponse>* streamer) {
                       return this->StreameddefaultGraph(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_defaultGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status defaultGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiMainWindow_defaultGraphRequest* /*request*/, ::octaneapi::ApiMainWindow_defaultGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddefaultGraph(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiMainWindow_defaultGraphRequest,::octaneapi::ApiMainWindow_defaultGraphResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_fetchOrCreateInstance<WithStreamedUnaryMethod_runDispatchLoopUntil<WithStreamedUnaryMethod_setDpi<WithStreamedUnaryMethod_addContentComponent<WithStreamedUnaryMethod_projectWorkspace<WithStreamedUnaryMethod_projectWorkspace1<WithStreamedUnaryMethod_show<WithStreamedUnaryMethod_hide<WithStreamedUnaryMethod_visible<WithStreamedUnaryMethod_setDefaultGraph<WithStreamedUnaryMethod_defaultGraph<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_fetchOrCreateInstance<WithStreamedUnaryMethod_runDispatchLoopUntil<WithStreamedUnaryMethod_setDpi<WithStreamedUnaryMethod_addContentComponent<WithStreamedUnaryMethod_projectWorkspace<WithStreamedUnaryMethod_projectWorkspace1<WithStreamedUnaryMethod_show<WithStreamedUnaryMethod_hide<WithStreamedUnaryMethod_visible<WithStreamedUnaryMethod_setDefaultGraph<WithStreamedUnaryMethod_defaultGraph<Service > > > > > > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apimainwindow_2eproto__INCLUDED
