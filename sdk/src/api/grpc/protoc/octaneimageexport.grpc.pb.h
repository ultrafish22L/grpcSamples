// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: octaneimageexport.proto
// Original file comments:
// ////////////////////////////////////////////////////////////////////////////
// WARNING: This code is machine generated. Manual changes will be overridden.
//
#ifndef GRPC_octaneimageexport_2eproto__INCLUDED
#define GRPC_octaneimageexport_2eproto__INCLUDED

#include "octaneimageexport.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

// GRPC interface definition for class 'ImageExportSettings' from 'octaneimageexport.h'
class ImageExportSettingsService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ImageExportSettingsService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Returns extension for the type
    // / 
    // / 
    virtual ::grpc::Status getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::octaneapi::ImageExportSettings_getExtensionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getExtensionResponse>> AsyncgetExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getExtensionResponse>>(AsyncgetExtensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getExtensionResponse>> PrepareAsyncgetExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getExtensionResponse>>(PrepareAsyncgetExtensionRaw(context, request, cq));
    }
    // / Returns number of bits per component for bit depth
    // / 
    // / 
    virtual ::grpc::Status getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>> AsyncgetBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>>(AsyncgetBitsPerComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>> PrepareAsyncgetBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>>(PrepareAsyncgetBitsPerComponentRaw(context, request, cq));
    }
    // / Returns number of bits per component for image format
    // / 
    // / 
    virtual ::grpc::Status getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>> AsyncgetBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>>(AsyncgetBitsPerComponent1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>> PrepareAsyncgetBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>>(PrepareAsyncgetBitsPerComponent1Raw(context, request, cq));
    }
    // / Returns bit depth of the format
    // / 
    // / 
    virtual ::grpc::Status getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitDepthResponse>> AsyncgetBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitDepthResponse>>(AsyncgetBitDepthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitDepthResponse>> PrepareAsyncgetBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitDepthResponse>>(PrepareAsyncgetBitDepthRaw(context, request, cq));
    }
    // / Returns image save format from file type and bit depth
    // /
    // / 
    virtual ::grpc::Status getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::octaneapi::ImageExportSettings_getFormatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getFormatResponse>> AsyncgetFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getFormatResponse>>(AsyncgetFormatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getFormatResponse>> PrepareAsyncgetFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getFormatResponse>>(PrepareAsyncgetFormatRaw(context, request, cq));
    }
    // / Returns image file type from the format
    // / 
    // / 
    virtual ::grpc::Status getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::octaneapi::ImageExportSettings_getTypeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getTypeResponse>> AsyncgetType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getTypeResponse>>(AsyncgetTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getTypeResponse>> PrepareAsyncgetType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getTypeResponse>>(PrepareAsyncgetTypeRaw(context, request, cq));
    }
    // / Creates ImageExportSettings from a set parameters used in older version of the API
    // / 
    virtual ::grpc::Status makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>> AsyncmakeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>>(AsyncmakeFromOldSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>> PrepareAsyncmakeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>>(PrepareAsyncmakeFromOldSettingsRaw(context, request, cq));
    }
    // / Creates ImageExportSettings from ImageSaveFormat
    // / Any additional settings are set to the default values
    // / 
    // / 
    virtual ::grpc::Status makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>> AsyncmakeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>>(AsyncmakeFromImageSaveFormatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>> PrepareAsyncmakeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>>(PrepareAsyncmakeFromImageSaveFormatRaw(context, request, cq));
    }
    // / Creates ImageExportSettings for writing EXR format
    // / 
    // / 
    virtual ::grpc::Status makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::octaneapi::ImageExportSettings_makeExrResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeExrResponse>> AsyncmakeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeExrResponse>>(AsyncmakeExrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeExrResponse>> PrepareAsyncmakeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeExrResponse>>(PrepareAsyncmakeExrRaw(context, request, cq));
    }
    // / Creates ImageExportSettings for writing TIFF format
    // / 
    // / 
    virtual ::grpc::Status makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::octaneapi::ImageExportSettings_makeTiffResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeTiffResponse>> AsyncmakeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeTiffResponse>>(AsyncmakeTiffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeTiffResponse>> PrepareAsyncmakeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeTiffResponse>>(PrepareAsyncmakeTiffRaw(context, request, cq));
    }
    // / Creates ImageExportSettings for writing PNG format
    // / 
    // / 
    virtual ::grpc::Status makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::octaneapi::ImageExportSettings_makePngResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makePngResponse>> AsyncmakePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makePngResponse>>(AsyncmakePngRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makePngResponse>> PrepareAsyncmakePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makePngResponse>>(PrepareAsyncmakePngRaw(context, request, cq));
    }
    // / Creates ImageExportSettings for writing JPEG format
    // / 
    // / 
    virtual ::grpc::Status makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::octaneapi::ImageExportSettings_makeJpegResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeJpegResponse>> AsyncmakeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeJpegResponse>>(AsyncmakeJpegRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeJpegResponse>> PrepareAsyncmakeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeJpegResponse>>(PrepareAsyncmakeJpegRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Returns extension for the type
      // / 
      // / 
      virtual void getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns number of bits per component for bit depth
      // / 
      // / 
      virtual void getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns number of bits per component for image format
      // / 
      // / 
      virtual void getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns bit depth of the format
      // / 
      // / 
      virtual void getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns image save format from file type and bit depth
      // /
      // / 
      virtual void getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns image file type from the format
      // / 
      // / 
      virtual void getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates ImageExportSettings from a set parameters used in older version of the API
      // / 
      virtual void makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates ImageExportSettings from ImageSaveFormat
      // / Any additional settings are set to the default values
      // / 
      // / 
      virtual void makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates ImageExportSettings for writing EXR format
      // / 
      // / 
      virtual void makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates ImageExportSettings for writing TIFF format
      // / 
      // / 
      virtual void makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates ImageExportSettings for writing PNG format
      // / 
      // / 
      virtual void makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Creates ImageExportSettings for writing JPEG format
      // / 
      // / 
      virtual void makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getExtensionResponse>* AsyncgetExtensionRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getExtensionResponse>* PrepareAsyncgetExtensionRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* AsyncgetBitsPerComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* PrepareAsyncgetBitsPerComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* AsyncgetBitsPerComponent1Raw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* PrepareAsyncgetBitsPerComponent1Raw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitDepthResponse>* AsyncgetBitDepthRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getBitDepthResponse>* PrepareAsyncgetBitDepthRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getFormatResponse>* AsyncgetFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getFormatResponse>* PrepareAsyncgetFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getTypeResponse>* AsyncgetTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_getTypeResponse>* PrepareAsyncgetTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* AsyncmakeFromOldSettingsRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* PrepareAsyncmakeFromOldSettingsRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* AsyncmakeFromImageSaveFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* PrepareAsyncmakeFromImageSaveFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeExrResponse>* AsyncmakeExrRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeExrResponse>* PrepareAsyncmakeExrRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeTiffResponse>* AsyncmakeTiffRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeTiffResponse>* PrepareAsyncmakeTiffRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makePngResponse>* AsyncmakePngRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makePngResponse>* PrepareAsyncmakePngRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeJpegResponse>* AsyncmakeJpegRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ImageExportSettings_makeJpegResponse>* PrepareAsyncmakeJpegRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::octaneapi::ImageExportSettings_getExtensionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>> AsyncgetExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>>(AsyncgetExtensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>> PrepareAsyncgetExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>>(PrepareAsyncgetExtensionRaw(context, request, cq));
    }
    ::grpc::Status getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>> AsyncgetBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>>(AsyncgetBitsPerComponentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>> PrepareAsyncgetBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>>(PrepareAsyncgetBitsPerComponentRaw(context, request, cq));
    }
    ::grpc::Status getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>> AsyncgetBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>>(AsyncgetBitsPerComponent1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>> PrepareAsyncgetBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>>(PrepareAsyncgetBitsPerComponent1Raw(context, request, cq));
    }
    ::grpc::Status getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>> AsyncgetBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>>(AsyncgetBitDepthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>> PrepareAsyncgetBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>>(PrepareAsyncgetBitDepthRaw(context, request, cq));
    }
    ::grpc::Status getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::octaneapi::ImageExportSettings_getFormatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>> AsyncgetFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>>(AsyncgetFormatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>> PrepareAsyncgetFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>>(PrepareAsyncgetFormatRaw(context, request, cq));
    }
    ::grpc::Status getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::octaneapi::ImageExportSettings_getTypeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>> AsyncgetType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>>(AsyncgetTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>> PrepareAsyncgetType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>>(PrepareAsyncgetTypeRaw(context, request, cq));
    }
    ::grpc::Status makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>> AsyncmakeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>>(AsyncmakeFromOldSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>> PrepareAsyncmakeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>>(PrepareAsyncmakeFromOldSettingsRaw(context, request, cq));
    }
    ::grpc::Status makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>> AsyncmakeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>>(AsyncmakeFromImageSaveFormatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>> PrepareAsyncmakeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>>(PrepareAsyncmakeFromImageSaveFormatRaw(context, request, cq));
    }
    ::grpc::Status makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::octaneapi::ImageExportSettings_makeExrResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>> AsyncmakeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>>(AsyncmakeExrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>> PrepareAsyncmakeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>>(PrepareAsyncmakeExrRaw(context, request, cq));
    }
    ::grpc::Status makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::octaneapi::ImageExportSettings_makeTiffResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>> AsyncmakeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>>(AsyncmakeTiffRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>> PrepareAsyncmakeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>>(PrepareAsyncmakeTiffRaw(context, request, cq));
    }
    ::grpc::Status makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::octaneapi::ImageExportSettings_makePngResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>> AsyncmakePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>>(AsyncmakePngRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>> PrepareAsyncmakePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>>(PrepareAsyncmakePngRaw(context, request, cq));
    }
    ::grpc::Status makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::octaneapi::ImageExportSettings_makeJpegResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>> AsyncmakeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>>(AsyncmakeJpegRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>> PrepareAsyncmakeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>>(PrepareAsyncmakeJpegRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response, std::function<void(::grpc::Status)>) override;
      void getExtension(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response, std::function<void(::grpc::Status)>) override;
      void getBitsPerComponent(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response, std::function<void(::grpc::Status)>) override;
      void getBitsPerComponent1(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response, std::function<void(::grpc::Status)>) override;
      void getBitDepth(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response, std::function<void(::grpc::Status)>) override;
      void getFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response, std::function<void(::grpc::Status)>) override;
      void getType(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response, std::function<void(::grpc::Status)>) override;
      void makeFromOldSettings(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response, std::function<void(::grpc::Status)>) override;
      void makeFromImageSaveFormat(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response, std::function<void(::grpc::Status)>) override;
      void makeExr(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response, std::function<void(::grpc::Status)>) override;
      void makeTiff(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response, std::function<void(::grpc::Status)>) override;
      void makePng(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response, std::function<void(::grpc::Status)>) override;
      void makeJpeg(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>* AsyncgetExtensionRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getExtensionResponse>* PrepareAsyncgetExtensionRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* AsyncgetBitsPerComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* PrepareAsyncgetBitsPerComponentRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* AsyncgetBitsPerComponent1Raw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* PrepareAsyncgetBitsPerComponent1Raw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>* AsyncgetBitDepthRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getBitDepthResponse>* PrepareAsyncgetBitDepthRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>* AsyncgetFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getFormatResponse>* PrepareAsyncgetFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>* AsyncgetTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_getTypeResponse>* PrepareAsyncgetTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* AsyncmakeFromOldSettingsRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* PrepareAsyncmakeFromOldSettingsRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* AsyncmakeFromImageSaveFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* PrepareAsyncmakeFromImageSaveFormatRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>* AsyncmakeExrRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeExrResponse>* PrepareAsyncmakeExrRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>* AsyncmakeTiffRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeTiffResponse>* PrepareAsyncmakeTiffRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>* AsyncmakePngRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makePngResponse>* PrepareAsyncmakePngRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makePngRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>* AsyncmakeJpegRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ImageExportSettings_makeJpegResponse>* PrepareAsyncmakeJpegRaw(::grpc::ClientContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_getExtension_;
    const ::grpc::internal::RpcMethod rpcmethod_getBitsPerComponent_;
    const ::grpc::internal::RpcMethod rpcmethod_getBitsPerComponent1_;
    const ::grpc::internal::RpcMethod rpcmethod_getBitDepth_;
    const ::grpc::internal::RpcMethod rpcmethod_getFormat_;
    const ::grpc::internal::RpcMethod rpcmethod_getType_;
    const ::grpc::internal::RpcMethod rpcmethod_makeFromOldSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_makeFromImageSaveFormat_;
    const ::grpc::internal::RpcMethod rpcmethod_makeExr_;
    const ::grpc::internal::RpcMethod rpcmethod_makeTiff_;
    const ::grpc::internal::RpcMethod rpcmethod_makePng_;
    const ::grpc::internal::RpcMethod rpcmethod_makeJpeg_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Returns extension for the type
    // / 
    // / 
    virtual ::grpc::Status getExtension(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response);
    // / Returns number of bits per component for bit depth
    // / 
    // / 
    virtual ::grpc::Status getBitsPerComponent(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response);
    // / Returns number of bits per component for image format
    // / 
    // / 
    virtual ::grpc::Status getBitsPerComponent1(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response);
    // / Returns bit depth of the format
    // / 
    // / 
    virtual ::grpc::Status getBitDepth(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response);
    // / Returns image save format from file type and bit depth
    // /
    // / 
    virtual ::grpc::Status getFormat(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response);
    // / Returns image file type from the format
    // / 
    // / 
    virtual ::grpc::Status getType(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response);
    // / Creates ImageExportSettings from a set parameters used in older version of the API
    // / 
    virtual ::grpc::Status makeFromOldSettings(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response);
    // / Creates ImageExportSettings from ImageSaveFormat
    // / Any additional settings are set to the default values
    // / 
    // / 
    virtual ::grpc::Status makeFromImageSaveFormat(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response);
    // / Creates ImageExportSettings for writing EXR format
    // / 
    // / 
    virtual ::grpc::Status makeExr(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response);
    // / Creates ImageExportSettings for writing TIFF format
    // / 
    // / 
    virtual ::grpc::Status makeTiff(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response);
    // / Creates ImageExportSettings for writing PNG format
    // / 
    // / 
    virtual ::grpc::Status makePng(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response);
    // / Creates ImageExportSettings for writing JPEG format
    // / 
    // / 
    virtual ::grpc::Status makeJpeg(::grpc::ServerContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_getExtension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getExtension() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_getExtension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getExtension(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getExtensionRequest* /*request*/, ::octaneapi::ImageExportSettings_getExtensionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetExtension(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_getExtensionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getBitsPerComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getBitsPerComponent() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_getBitsPerComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetBitsPerComponent(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getBitsPerComponent1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getBitsPerComponent1() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_getBitsPerComponent1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent1(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetBitsPerComponent1(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getBitDepth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getBitDepth() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_getBitDepth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitDepth(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitDepthRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitDepthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetBitDepth(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_getBitDepthResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getFormat() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_getFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_getFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetFormat(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_getFormatRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_getFormatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getType() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_getType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getType(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getTypeRequest* /*request*/, ::octaneapi::ImageExportSettings_getTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetType(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_getTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_getTypeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_makeFromOldSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_makeFromOldSettings() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_makeFromOldSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromOldSettings(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeFromOldSettings(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_makeFromImageSaveFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_makeFromImageSaveFormat() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_makeFromImageSaveFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromImageSaveFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeFromImageSaveFormat(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_makeExr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_makeExr() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_makeExr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeExr(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeExrRequest* /*request*/, ::octaneapi::ImageExportSettings_makeExrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeExr(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_makeExrRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_makeExrResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_makeTiff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_makeTiff() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_makeTiff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeTiff(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeTiffRequest* /*request*/, ::octaneapi::ImageExportSettings_makeTiffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeTiff(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_makeTiffResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_makePng : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_makePng() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_makePng() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makePng(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makePngRequest* /*request*/, ::octaneapi::ImageExportSettings_makePngResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakePng(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_makePngRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_makePngResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_makeJpeg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_makeJpeg() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_makeJpeg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeJpeg(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeJpegRequest* /*request*/, ::octaneapi::ImageExportSettings_makeJpegResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeJpeg(::grpc::ServerContext* context, ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ImageExportSettings_makeJpegResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_getExtension<WithAsyncMethod_getBitsPerComponent<WithAsyncMethod_getBitsPerComponent1<WithAsyncMethod_getBitDepth<WithAsyncMethod_getFormat<WithAsyncMethod_getType<WithAsyncMethod_makeFromOldSettings<WithAsyncMethod_makeFromImageSaveFormat<WithAsyncMethod_makeExr<WithAsyncMethod_makeTiff<WithAsyncMethod_makePng<WithAsyncMethod_makeJpeg<Service > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_getExtension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getExtension() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_getExtensionRequest* request, ::octaneapi::ImageExportSettings_getExtensionResponse* response) { return this->getExtension(context, request, response); }));}
    void SetMessageAllocatorFor_getExtension(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getExtension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getExtension(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getExtensionRequest* /*request*/, ::octaneapi::ImageExportSettings_getExtensionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getExtension(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getExtensionRequest* /*request*/, ::octaneapi::ImageExportSettings_getExtensionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getBitsPerComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getBitsPerComponent() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* request, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* response) { return this->getBitsPerComponent(context, request, response); }));}
    void SetMessageAllocatorFor_getBitsPerComponent(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getBitsPerComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getBitsPerComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getBitsPerComponent1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getBitsPerComponent1() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* response) { return this->getBitsPerComponent1(context, request, response); }));}
    void SetMessageAllocatorFor_getBitsPerComponent1(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getBitsPerComponent1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent1(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getBitsPerComponent1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getBitDepth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getBitDepth() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_getBitDepthRequest* request, ::octaneapi::ImageExportSettings_getBitDepthResponse* response) { return this->getBitDepth(context, request, response); }));}
    void SetMessageAllocatorFor_getBitDepth(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getBitDepth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitDepth(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitDepthRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitDepthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getBitDepth(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitDepthRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitDepthResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getFormat() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_getFormatRequest* request, ::octaneapi::ImageExportSettings_getFormatResponse* response) { return this->getFormat(context, request, response); }));}
    void SetMessageAllocatorFor_getFormat(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_getFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getFormat(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_getFormatResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getType() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_getTypeRequest* request, ::octaneapi::ImageExportSettings_getTypeResponse* response) { return this->getType(context, request, response); }));}
    void SetMessageAllocatorFor_getType(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getType(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getTypeRequest* /*request*/, ::octaneapi::ImageExportSettings_getTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getType(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getTypeRequest* /*request*/, ::octaneapi::ImageExportSettings_getTypeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_makeFromOldSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_makeFromOldSettings() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* request, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* response) { return this->makeFromOldSettings(context, request, response); }));}
    void SetMessageAllocatorFor_makeFromOldSettings(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_makeFromOldSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromOldSettings(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeFromOldSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_makeFromImageSaveFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_makeFromImageSaveFormat() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* request, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* response) { return this->makeFromImageSaveFormat(context, request, response); }));}
    void SetMessageAllocatorFor_makeFromImageSaveFormat(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_makeFromImageSaveFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromImageSaveFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeFromImageSaveFormat(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_makeExr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_makeExr() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_makeExrRequest* request, ::octaneapi::ImageExportSettings_makeExrResponse* response) { return this->makeExr(context, request, response); }));}
    void SetMessageAllocatorFor_makeExr(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_makeExr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeExr(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeExrRequest* /*request*/, ::octaneapi::ImageExportSettings_makeExrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeExr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeExrRequest* /*request*/, ::octaneapi::ImageExportSettings_makeExrResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_makeTiff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_makeTiff() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_makeTiffRequest* request, ::octaneapi::ImageExportSettings_makeTiffResponse* response) { return this->makeTiff(context, request, response); }));}
    void SetMessageAllocatorFor_makeTiff(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_makeTiff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeTiff(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeTiffRequest* /*request*/, ::octaneapi::ImageExportSettings_makeTiffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeTiff(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeTiffRequest* /*request*/, ::octaneapi::ImageExportSettings_makeTiffResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_makePng : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_makePng() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_makePngRequest* request, ::octaneapi::ImageExportSettings_makePngResponse* response) { return this->makePng(context, request, response); }));}
    void SetMessageAllocatorFor_makePng(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_makePng() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makePng(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makePngRequest* /*request*/, ::octaneapi::ImageExportSettings_makePngResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makePng(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makePngRequest* /*request*/, ::octaneapi::ImageExportSettings_makePngResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_makeJpeg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_makeJpeg() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ImageExportSettings_makeJpegRequest* request, ::octaneapi::ImageExportSettings_makeJpegResponse* response) { return this->makeJpeg(context, request, response); }));}
    void SetMessageAllocatorFor_makeJpeg(
        ::grpc::MessageAllocator< ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_makeJpeg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeJpeg(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeJpegRequest* /*request*/, ::octaneapi::ImageExportSettings_makeJpegResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeJpeg(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeJpegRequest* /*request*/, ::octaneapi::ImageExportSettings_makeJpegResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_getExtension<WithCallbackMethod_getBitsPerComponent<WithCallbackMethod_getBitsPerComponent1<WithCallbackMethod_getBitDepth<WithCallbackMethod_getFormat<WithCallbackMethod_getType<WithCallbackMethod_makeFromOldSettings<WithCallbackMethod_makeFromImageSaveFormat<WithCallbackMethod_makeExr<WithCallbackMethod_makeTiff<WithCallbackMethod_makePng<WithCallbackMethod_makeJpeg<Service > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_getExtension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getExtension() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_getExtension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getExtension(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getExtensionRequest* /*request*/, ::octaneapi::ImageExportSettings_getExtensionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getBitsPerComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getBitsPerComponent() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_getBitsPerComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getBitsPerComponent1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getBitsPerComponent1() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_getBitsPerComponent1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent1(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getBitDepth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getBitDepth() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_getBitDepth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitDepth(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitDepthRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitDepthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getFormat() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_getFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_getFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getType() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_getType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getType(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getTypeRequest* /*request*/, ::octaneapi::ImageExportSettings_getTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_makeFromOldSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_makeFromOldSettings() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_makeFromOldSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromOldSettings(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_makeFromImageSaveFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_makeFromImageSaveFormat() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_makeFromImageSaveFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromImageSaveFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_makeExr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_makeExr() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_makeExr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeExr(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeExrRequest* /*request*/, ::octaneapi::ImageExportSettings_makeExrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_makeTiff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_makeTiff() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_makeTiff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeTiff(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeTiffRequest* /*request*/, ::octaneapi::ImageExportSettings_makeTiffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_makePng : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_makePng() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_makePng() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makePng(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makePngRequest* /*request*/, ::octaneapi::ImageExportSettings_makePngResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_makeJpeg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_makeJpeg() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_makeJpeg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeJpeg(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeJpegRequest* /*request*/, ::octaneapi::ImageExportSettings_makeJpegResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_getExtension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getExtension() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_getExtension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getExtension(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getExtensionRequest* /*request*/, ::octaneapi::ImageExportSettings_getExtensionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetExtension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getBitsPerComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getBitsPerComponent() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_getBitsPerComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetBitsPerComponent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getBitsPerComponent1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getBitsPerComponent1() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_getBitsPerComponent1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent1(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetBitsPerComponent1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getBitDepth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getBitDepth() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_getBitDepth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitDepth(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitDepthRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitDepthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetBitDepth(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getFormat() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_getFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_getFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetFormat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getType() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_getType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getType(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getTypeRequest* /*request*/, ::octaneapi::ImageExportSettings_getTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_makeFromOldSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_makeFromOldSettings() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_makeFromOldSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromOldSettings(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeFromOldSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_makeFromImageSaveFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_makeFromImageSaveFormat() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_makeFromImageSaveFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromImageSaveFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeFromImageSaveFormat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_makeExr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_makeExr() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_makeExr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeExr(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeExrRequest* /*request*/, ::octaneapi::ImageExportSettings_makeExrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeExr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_makeTiff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_makeTiff() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_makeTiff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeTiff(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeTiffRequest* /*request*/, ::octaneapi::ImageExportSettings_makeTiffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeTiff(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_makePng : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_makePng() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_makePng() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makePng(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makePngRequest* /*request*/, ::octaneapi::ImageExportSettings_makePngResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakePng(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_makeJpeg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_makeJpeg() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_makeJpeg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeJpeg(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeJpegRequest* /*request*/, ::octaneapi::ImageExportSettings_makeJpegResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestmakeJpeg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getExtension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getExtension() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getExtension(context, request, response); }));
    }
    ~WithRawCallbackMethod_getExtension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getExtension(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getExtensionRequest* /*request*/, ::octaneapi::ImageExportSettings_getExtensionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getExtension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getBitsPerComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getBitsPerComponent() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getBitsPerComponent(context, request, response); }));
    }
    ~WithRawCallbackMethod_getBitsPerComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getBitsPerComponent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getBitsPerComponent1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getBitsPerComponent1() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getBitsPerComponent1(context, request, response); }));
    }
    ~WithRawCallbackMethod_getBitsPerComponent1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitsPerComponent1(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getBitsPerComponent1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getBitDepth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getBitDepth() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getBitDepth(context, request, response); }));
    }
    ~WithRawCallbackMethod_getBitDepth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getBitDepth(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitDepthRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitDepthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getBitDepth(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getFormat() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getFormat(context, request, response); }));
    }
    ~WithRawCallbackMethod_getFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_getFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getFormat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getType() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getType(context, request, response); }));
    }
    ~WithRawCallbackMethod_getType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getType(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getTypeRequest* /*request*/, ::octaneapi::ImageExportSettings_getTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_makeFromOldSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_makeFromOldSettings() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->makeFromOldSettings(context, request, response); }));
    }
    ~WithRawCallbackMethod_makeFromOldSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromOldSettings(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeFromOldSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_makeFromImageSaveFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_makeFromImageSaveFormat() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->makeFromImageSaveFormat(context, request, response); }));
    }
    ~WithRawCallbackMethod_makeFromImageSaveFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeFromImageSaveFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeFromImageSaveFormat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_makeExr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_makeExr() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->makeExr(context, request, response); }));
    }
    ~WithRawCallbackMethod_makeExr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeExr(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeExrRequest* /*request*/, ::octaneapi::ImageExportSettings_makeExrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeExr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_makeTiff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_makeTiff() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->makeTiff(context, request, response); }));
    }
    ~WithRawCallbackMethod_makeTiff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeTiff(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeTiffRequest* /*request*/, ::octaneapi::ImageExportSettings_makeTiffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeTiff(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_makePng : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_makePng() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->makePng(context, request, response); }));
    }
    ~WithRawCallbackMethod_makePng() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makePng(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makePngRequest* /*request*/, ::octaneapi::ImageExportSettings_makePngResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makePng(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_makeJpeg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_makeJpeg() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->makeJpeg(context, request, response); }));
    }
    ~WithRawCallbackMethod_makeJpeg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status makeJpeg(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeJpegRequest* /*request*/, ::octaneapi::ImageExportSettings_makeJpegResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* makeJpeg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getExtension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getExtension() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_getExtensionRequest, ::octaneapi::ImageExportSettings_getExtensionResponse>* streamer) {
                       return this->StreamedgetExtension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getExtension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getExtension(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getExtensionRequest* /*request*/, ::octaneapi::ImageExportSettings_getExtensionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetExtension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_getExtensionRequest,::octaneapi::ImageExportSettings_getExtensionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getBitsPerComponent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getBitsPerComponent() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_getBitsPerComponentRequest, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* streamer) {
                       return this->StreamedgetBitsPerComponent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getBitsPerComponent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getBitsPerComponent(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponentRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetBitsPerComponent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_getBitsPerComponentRequest,::octaneapi::ImageExportSettings_getBitsPerComponentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getBitsPerComponent1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getBitsPerComponent1() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_getBitsPerComponent1Request, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* streamer) {
                       return this->StreamedgetBitsPerComponent1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getBitsPerComponent1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getBitsPerComponent1(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitsPerComponent1Request* /*request*/, ::octaneapi::ImageExportSettings_getBitsPerComponent1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetBitsPerComponent1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_getBitsPerComponent1Request,::octaneapi::ImageExportSettings_getBitsPerComponent1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getBitDepth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getBitDepth() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_getBitDepthRequest, ::octaneapi::ImageExportSettings_getBitDepthResponse>* streamer) {
                       return this->StreamedgetBitDepth(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getBitDepth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getBitDepth(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getBitDepthRequest* /*request*/, ::octaneapi::ImageExportSettings_getBitDepthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetBitDepth(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_getBitDepthRequest,::octaneapi::ImageExportSettings_getBitDepthResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getFormat() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_getFormatRequest, ::octaneapi::ImageExportSettings_getFormatResponse>* streamer) {
                       return this->StreamedgetFormat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_getFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetFormat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_getFormatRequest,::octaneapi::ImageExportSettings_getFormatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getType() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_getTypeRequest, ::octaneapi::ImageExportSettings_getTypeResponse>* streamer) {
                       return this->StreamedgetType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getType(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_getTypeRequest* /*request*/, ::octaneapi::ImageExportSettings_getTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_getTypeRequest,::octaneapi::ImageExportSettings_getTypeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_makeFromOldSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_makeFromOldSettings() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* streamer) {
                       return this->StreamedmakeFromOldSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_makeFromOldSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status makeFromOldSettings(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromOldSettingsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedmakeFromOldSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_makeFromOldSettingsRequest,::octaneapi::ImageExportSettings_makeFromOldSettingsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_makeFromImageSaveFormat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_makeFromImageSaveFormat() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* streamer) {
                       return this->StreamedmakeFromImageSaveFormat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_makeFromImageSaveFormat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status makeFromImageSaveFormat(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest* /*request*/, ::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedmakeFromImageSaveFormat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_makeFromImageSaveFormatRequest,::octaneapi::ImageExportSettings_makeFromImageSaveFormatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_makeExr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_makeExr() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_makeExrRequest, ::octaneapi::ImageExportSettings_makeExrResponse>* streamer) {
                       return this->StreamedmakeExr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_makeExr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status makeExr(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeExrRequest* /*request*/, ::octaneapi::ImageExportSettings_makeExrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedmakeExr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_makeExrRequest,::octaneapi::ImageExportSettings_makeExrResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_makeTiff : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_makeTiff() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_makeTiffRequest, ::octaneapi::ImageExportSettings_makeTiffResponse>* streamer) {
                       return this->StreamedmakeTiff(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_makeTiff() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status makeTiff(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeTiffRequest* /*request*/, ::octaneapi::ImageExportSettings_makeTiffResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedmakeTiff(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_makeTiffRequest,::octaneapi::ImageExportSettings_makeTiffResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_makePng : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_makePng() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_makePngRequest, ::octaneapi::ImageExportSettings_makePngResponse>* streamer) {
                       return this->StreamedmakePng(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_makePng() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status makePng(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makePngRequest* /*request*/, ::octaneapi::ImageExportSettings_makePngResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedmakePng(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_makePngRequest,::octaneapi::ImageExportSettings_makePngResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_makeJpeg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_makeJpeg() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ImageExportSettings_makeJpegRequest, ::octaneapi::ImageExportSettings_makeJpegResponse>* streamer) {
                       return this->StreamedmakeJpeg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_makeJpeg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status makeJpeg(::grpc::ServerContext* /*context*/, const ::octaneapi::ImageExportSettings_makeJpegRequest* /*request*/, ::octaneapi::ImageExportSettings_makeJpegResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedmakeJpeg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ImageExportSettings_makeJpegRequest,::octaneapi::ImageExportSettings_makeJpegResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_getExtension<WithStreamedUnaryMethod_getBitsPerComponent<WithStreamedUnaryMethod_getBitsPerComponent1<WithStreamedUnaryMethod_getBitDepth<WithStreamedUnaryMethod_getFormat<WithStreamedUnaryMethod_getType<WithStreamedUnaryMethod_makeFromOldSettings<WithStreamedUnaryMethod_makeFromImageSaveFormat<WithStreamedUnaryMethod_makeExr<WithStreamedUnaryMethod_makeTiff<WithStreamedUnaryMethod_makePng<WithStreamedUnaryMethod_makeJpeg<Service > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_getExtension<WithStreamedUnaryMethod_getBitsPerComponent<WithStreamedUnaryMethod_getBitsPerComponent1<WithStreamedUnaryMethod_getBitDepth<WithStreamedUnaryMethod_getFormat<WithStreamedUnaryMethod_getType<WithStreamedUnaryMethod_makeFromOldSettings<WithStreamedUnaryMethod_makeFromImageSaveFormat<WithStreamedUnaryMethod_makeExr<WithStreamedUnaryMethod_makeTiff<WithStreamedUnaryMethod_makePng<WithStreamedUnaryMethod_makeJpeg<Service > > > > > > > > > > > > StreamedService;
};

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_octaneimageexport_2eproto__INCLUDED
