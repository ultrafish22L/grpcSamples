// Copyright (C) 2025 OTOY NZ Ltd.

// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: apinodesystem_3.proto
#ifndef GRPC_apinodesystem_5f3_2eproto__INCLUDED
#define GRPC_apinodesystem_5f3_2eproto__INCLUDED

#include "apinodesystem_3.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace octaneapi {

class ApiItemService final {
 public:
  static constexpr char const* service_full_name() {
    return "octaneapi.ApiItemService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / Destroys this item
    virtual ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    // / Returns the name of this item
    virtual ::grpc::Status name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::octaneapi::ApiItem_nameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_nameResponse>> Asyncname(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_nameResponse>>(AsyncnameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_nameResponse>> PrepareAsyncname(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_nameResponse>>(PrepareAsyncnameRaw(context, request, cq));
    }
    // / Sets the name of this item
    virtual ::grpc::Status setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetNameRaw(context, request, cq));
    }
    // / Returns the position of the item inside its owner
    virtual ::grpc::Status position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::octaneapi::ApiItem_positionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_positionResponse>> Asyncposition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_positionResponse>>(AsyncpositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_positionResponse>> PrepareAsyncposition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_positionResponse>>(PrepareAsyncpositionRaw(context, request, cq));
    }
    // / Sets the position of this item
    virtual ::grpc::Status setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetPositionRaw(context, request, cq));
    }
    // / Adds a UI operation flag to this node item and this flags will be only used when making a 
    // / direct interaction from UI
    virtual ::grpc::Status setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncsetUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncsetUIOperationFlagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncsetUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncsetUIOperationFlagsRaw(context, request, cq));
    }
    // / Returns the UI operation flags of this node item
    virtual ::grpc::Status uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uiOperationFlagsResponse>> AsyncuiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uiOperationFlagsResponse>>(AsyncuiOperationFlagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uiOperationFlagsResponse>> PrepareAsyncuiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uiOperationFlagsResponse>>(PrepareAsyncuiOperationFlagsRaw(context, request, cq));
    }
    // / Sets the node item to selected state (for the window opened using ApiNodeGraph::showWindow())
    virtual ::grpc::Status select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncselect(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncselectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncselect(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncselectRaw(context, request, cq));
    }
    // / Returns the current time of this item
    virtual ::grpc::Status time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::octaneapi::ApiItem_timeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_timeResponse>> Asynctime(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_timeResponse>>(AsynctimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_timeResponse>> PrepareAsynctime(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_timeResponse>>(PrepareAsynctimeRaw(context, request, cq));
    }
    // / Returns the output type for this item
    virtual ::grpc::Status outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::octaneapi::ApiItem_outTypeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_outTypeResponse>> AsyncoutType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_outTypeResponse>>(AsyncoutTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_outTypeResponse>> PrepareAsyncoutType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_outTypeResponse>>(PrepareAsyncoutTypeRaw(context, request, cq));
    }
    // / Returns the persistent ID of the node item
    virtual ::grpc::Status persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::octaneapi::ApiItem_persistentIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_persistentIdResponse>> AsyncpersistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_persistentIdResponse>>(AsyncpersistentIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_persistentIdResponse>> PrepareAsyncpersistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_persistentIdResponse>>(PrepareAsyncpersistentIdRaw(context, request, cq));
    }
    // / Returns the unique ID of the node item
    virtual ::grpc::Status uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::octaneapi::ApiItem_uniqueIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uniqueIdResponse>> AsyncuniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uniqueIdResponse>>(AsyncuniqueIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uniqueIdResponse>> PrepareAsyncuniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uniqueIdResponse>>(PrepareAsyncuniqueIdRaw(context, request, cq));
    }
    // / Collects all items that are connected to this node item
    virtual ::grpc::Status collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::octaneapi::ApiItem_collectItemTreeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collectItemTreeResponse>> AsynccollectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collectItemTreeResponse>>(AsynccollectItemTreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collectItemTreeResponse>> PrepareAsynccollectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collectItemTreeResponse>>(PrepareAsynccollectItemTreeRaw(context, request, cq));
    }
    // / If the item is owned by a node graph, this function will remove all items owned by that node
    // / graph that are not directly/indirectly connected with the item
    virtual ::grpc::Status deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdeleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdeleteUnconnectedItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdeleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdeleteUnconnectedItemsRaw(context, request, cq));
    }
    // / If this item stores file data that has been provided by plugins directly, this function
    // / will export that data into a file with the specified name
    virtual ::grpc::Status switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncswitchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncswitchToFileDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncswitchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncswitchToFileDataRaw(context, request, cq));
    }
    // / Returns the version of the item
    virtual ::grpc::Status version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::octaneapi::ApiItem_versionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_versionResponse>> Asyncversion(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_versionResponse>>(AsyncversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_versionResponse>> PrepareAsyncversion(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_versionResponse>>(PrepareAsyncversionRaw(context, request, cq));
    }
    // / Returns TRUE if this item is a graph
    virtual ::grpc::Status isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::octaneapi::ApiItem_isGraphResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isGraphResponse>> AsyncisGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isGraphResponse>>(AsyncisGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isGraphResponse>> PrepareAsyncisGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isGraphResponse>>(PrepareAsyncisGraphRaw(context, request, cq));
    }
    // / Returns TRUE if this item is a node
    virtual ::grpc::Status isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::octaneapi::ApiItem_isNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isNodeResponse>> AsyncisNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isNodeResponse>>(AsyncisNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isNodeResponse>> PrepareAsyncisNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isNodeResponse>>(PrepareAsyncisNodeRaw(context, request, cq));
    }
    // / Returns TRUE if the item is an input/output linker node
    virtual ::grpc::Status isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::octaneapi::ApiItem_isLinkerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isLinkerResponse>> AsyncisLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isLinkerResponse>>(AsyncisLinkerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isLinkerResponse>> PrepareAsyncisLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isLinkerResponse>>(PrepareAsyncisLinkerRaw(context, request, cq));
    }
    // / Returns TRUE if the item is an input linker node
    virtual ::grpc::Status isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::octaneapi::ApiItem_isInputLinkerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isInputLinkerResponse>> AsyncisInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isInputLinkerResponse>>(AsyncisInputLinkerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isInputLinkerResponse>> PrepareAsyncisInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isInputLinkerResponse>>(PrepareAsyncisInputLinkerRaw(context, request, cq));
    }
    // / Returns TRUE if the item is an output linker node
    virtual ::grpc::Status isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::octaneapi::ApiItem_isOutputLinkerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isOutputLinkerResponse>> AsyncisOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isOutputLinkerResponse>>(AsyncisOutputLinkerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isOutputLinkerResponse>> PrepareAsyncisOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isOutputLinkerResponse>>(PrepareAsyncisOutputLinkerRaw(context, request, cq));
    }
    // / Downcasts this item to a graph
    virtual ::grpc::Status toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::octaneapi::ApiItem_toGraphResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraphResponse>> AsynctoGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraphResponse>>(AsynctoGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraphResponse>> PrepareAsynctoGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraphResponse>>(PrepareAsynctoGraphRaw(context, request, cq));
    }
    // / Downcasts this item to a node
    virtual ::grpc::Status toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::octaneapi::ApiItem_toNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNodeResponse>> AsynctoNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNodeResponse>>(AsynctoNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNodeResponse>> PrepareAsynctoNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNodeResponse>>(PrepareAsynctoNodeRaw(context, request, cq));
    }
    // / Downcasts this item to a graph
    virtual ::grpc::Status toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::octaneapi::ApiItem_toGraph1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraph1Response>> AsynctoGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraph1Response>>(AsynctoGraph1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraph1Response>> PrepareAsynctoGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraph1Response>>(PrepareAsynctoGraph1Raw(context, request, cq));
    }
    // / Downcasts this item to a node
    virtual ::grpc::Status toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::octaneapi::ApiItem_toNode1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNode1Response>> AsynctoNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNode1Response>>(AsynctoNode1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNode1Response>> PrepareAsynctoNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNode1Response>>(PrepareAsynctoNode1Raw(context, request, cq));
    }
    // / Returns TRUE if this item has an owner (graph or pin), usually always TRUE with the
    // / exception of root node graphs, which never have an owner
    virtual ::grpc::Status hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::octaneapi::ApiItem_hasOwnerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasOwnerResponse>> AsynchasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasOwnerResponse>>(AsynchasOwnerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasOwnerResponse>> PrepareAsynchasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasOwnerResponse>>(PrepareAsynchasOwnerRaw(context, request, cq));
    }
    // / Returns TRUE if this item is owned by a graph
    virtual ::grpc::Status graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::octaneapi::ApiItem_graphOwnedResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnedResponse>> AsyncgraphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnedResponse>>(AsyncgraphOwnedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnedResponse>> PrepareAsyncgraphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnedResponse>>(PrepareAsyncgraphOwnedRaw(context, request, cq));
    }
    // / Returns TRUE if this item is owned by a pin
    virtual ::grpc::Status pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::octaneapi::ApiItem_pinOwnedResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnedResponse>> AsyncpinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnedResponse>>(AsyncpinOwnedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnedResponse>> PrepareAsyncpinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnedResponse>>(PrepareAsyncpinOwnedRaw(context, request, cq));
    }
    // / Gets the graph owner (if any)
    virtual ::grpc::Status graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::octaneapi::ApiItem_graphOwnerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnerResponse>> AsyncgraphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnerResponse>>(AsyncgraphOwnerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnerResponse>> PrepareAsyncgraphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnerResponse>>(PrepareAsyncgraphOwnerRaw(context, request, cq));
    }
    // / Gets the pin owner (if any)
    virtual ::grpc::Status pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::octaneapi::ApiItem_pinOwnerResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnerResponse>> AsyncpinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnerResponse>>(AsyncpinOwnerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnerResponse>> PrepareAsyncpinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnerResponse>>(PrepareAsyncpinOwnerRaw(context, request, cq));
    }
    // / Returns the root node graph which contains this node item
    virtual ::grpc::Status rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::octaneapi::ApiItem_rootGraphResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraphResponse>> AsyncrootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraphResponse>>(AsyncrootGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraphResponse>> PrepareAsyncrootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraphResponse>>(PrepareAsyncrootGraphRaw(context, request, cq));
    }
    // / Returns the root node graph which contains this node item
    virtual ::grpc::Status rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::octaneapi::ApiItem_rootGraph1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraph1Response>> AsyncrootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraph1Response>>(AsyncrootGraph1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraph1Response>> PrepareAsyncrootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraph1Response>>(PrepareAsyncrootGraph1Raw(context, request, cq));
    }
    // / Returns the number of attributes of this item
    virtual ::grpc::Status attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::octaneapi::ApiItem_attrCountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrCountResponse>> AsyncattrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrCountResponse>>(AsyncattrCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrCountResponse>> PrepareAsyncattrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrCountResponse>>(PrepareAsyncattrCountRaw(context, request, cq));
    }
    // / Returns TRUE if an attribute with the specified ID exists
    virtual ::grpc::Status hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::octaneapi::ApiItem_hasAttrResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttrResponse>> AsynchasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttrResponse>>(AsynchasAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttrResponse>> PrepareAsynchasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttrResponse>>(PrepareAsynchasAttrRaw(context, request, cq));
    }
    // / Returns TRUE if an attribute with the specified name exists
    virtual ::grpc::Status hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::octaneapi::ApiItem_hasAttr1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttr1Response>> AsynchasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttr1Response>>(AsynchasAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttr1Response>> PrepareAsynchasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttr1Response>>(PrepareAsynchasAttr1Raw(context, request, cq));
    }
    // / Returns TRUE if an attribute with this ID exists and returns its index in "foundIndex"
    virtual ::grpc::Status findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::octaneapi::ApiItem_findAttrResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttrResponse>> AsyncfindAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttrResponse>>(AsyncfindAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttrResponse>> PrepareAsyncfindAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttrResponse>>(PrepareAsyncfindAttrRaw(context, request, cq));
    }
    // / Returns TRUE if an attribute with this name exists and returns its index in "foundIndex"
    virtual ::grpc::Status findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::octaneapi::ApiItem_findAttr1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttr1Response>> AsyncfindAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttr1Response>>(AsyncfindAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttr1Response>> PrepareAsyncfindAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttr1Response>>(PrepareAsyncfindAttr1Raw(context, request, cq));
    }
    // / Returns the ID of attribute provided by it's name
    virtual ::grpc::Status attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::octaneapi::ApiItem_attrIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdResponse>> AsyncattrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdResponse>>(AsyncattrIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdResponse>> PrepareAsyncattrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdResponse>>(PrepareAsyncattrIdRaw(context, request, cq));
    }
    // / Returns the ID of the attribute at index
    virtual ::grpc::Status attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::octaneapi::ApiItem_attrIdIxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdIxResponse>> AsyncattrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdIxResponse>>(AsyncattrIdIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdIxResponse>> PrepareAsyncattrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdIxResponse>>(PrepareAsyncattrIdIxRaw(context, request, cq));
    }
    // / Returns the name of the attribute at the provided ID or "unknown" if there's no such attribute
    virtual ::grpc::Status attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::octaneapi::ApiItem_attrNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameResponse>> AsyncattrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameResponse>>(AsyncattrNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameResponse>> PrepareAsyncattrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameResponse>>(PrepareAsyncattrNameRaw(context, request, cq));
    }
    // / Returns the name of the attribute at the index or "unknown" if there's no such attribute
    virtual ::grpc::Status attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::octaneapi::ApiItem_attrNameIxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameIxResponse>> AsyncattrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameIxResponse>>(AsyncattrNameIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameIxResponse>> PrepareAsyncattrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameIxResponse>>(PrepareAsyncattrNameIxRaw(context, request, cq));
    }
    // / Returns the type of the attribute identified by it's ID
    virtual ::grpc::Status attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::octaneapi::ApiItem_attrTypeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeResponse>> AsyncattrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeResponse>>(AsyncattrTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeResponse>> PrepareAsyncattrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeResponse>>(PrepareAsyncattrTypeRaw(context, request, cq));
    }
    // / Returns the type of the attribute identified by it's name
    virtual ::grpc::Status attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::octaneapi::ApiItem_attrType1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrType1Response>> AsyncattrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrType1Response>>(AsyncattrType1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrType1Response>> PrepareAsyncattrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrType1Response>>(PrepareAsyncattrType1Raw(context, request, cq));
    }
    // / Returns the type of the attribute at the index
    virtual ::grpc::Status attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::octaneapi::ApiItem_attrTypeIxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeIxResponse>> AsyncattrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeIxResponse>>(AsyncattrTypeIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeIxResponse>> PrepareAsyncattrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeIxResponse>>(PrepareAsyncattrTypeIxRaw(context, request, cq));
    }
    // / Returns the info for the attribute identified by the ID
    virtual ::grpc::Status attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::octaneapi::ApiItem_attrInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoResponse>> AsyncattrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoResponse>>(AsyncattrInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoResponse>> PrepareAsyncattrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoResponse>>(PrepareAsyncattrInfoRaw(context, request, cq));
    }
    // / Returns the info for the attribute identified by the name
    virtual ::grpc::Status attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::octaneapi::ApiItem_attrInfo1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfo1Response>> AsyncattrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfo1Response>>(AsyncattrInfo1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfo1Response>> PrepareAsyncattrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfo1Response>>(PrepareAsyncattrInfo1Raw(context, request, cq));
    }
    // / Returns the info for the attribute at index
    virtual ::grpc::Status attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::octaneapi::ApiItem_attrInfoIxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoIxResponse>> AsyncattrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoIxResponse>>(AsyncattrInfoIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoIxResponse>> PrepareAsyncattrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoIxResponse>>(PrepareAsyncattrInfoIxRaw(context, request, cq));
    }
    // / Returns TRUE if any of the attributes are flagged dirty
    virtual ::grpc::Status attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::octaneapi::ApiItem_attrAreDirtyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrAreDirtyResponse>> AsyncattrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrAreDirtyResponse>>(AsyncattrAreDirtyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrAreDirtyResponse>> PrepareAsyncattrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrAreDirtyResponse>>(PrepareAsyncattrAreDirtyRaw(context, request, cq));
    }
    // / Returns TRUE if the attribute is flagged dirty
    virtual ::grpc::Status isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::octaneapi::ApiItem_isDirtyAttrResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrResponse>> AsyncisDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrResponse>>(AsyncisDirtyAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrResponse>> PrepareAsyncisDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrResponse>>(PrepareAsyncisDirtyAttrRaw(context, request, cq));
    }
    // / Returns TRUE if the attribute is flagged dirty
    virtual ::grpc::Status isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::octaneapi::ApiItem_isDirtyAttr1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttr1Response>> AsyncisDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttr1Response>>(AsyncisDirtyAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttr1Response>> PrepareAsyncisDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttr1Response>>(PrepareAsyncisDirtyAttr1Raw(context, request, cq));
    }
    // / Returns TRUE if the attribute is flagged dirty
    virtual ::grpc::Status isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrIxResponse>> AsyncisDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrIxResponse>>(AsyncisDirtyAttrIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrIxResponse>> PrepareAsyncisDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrIxResponse>>(PrepareAsyncisDirtyAttrIxRaw(context, request, cq));
    }
    // / Copies another item's attribute value into this item's attribute
    virtual ::grpc::Status copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsynccopyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynccopyAttrFromRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynccopyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFromRaw(context, request, cq));
    }
    // / Copies the attribute into our attribute, specified by its name
    virtual ::grpc::Status copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsynccopyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynccopyAttrFrom1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynccopyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFrom1Raw(context, request, cq));
    }
    // / Copies the attribute into our attribute, specified by its index
    virtual ::grpc::Status copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsynccopyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynccopyAttrFromIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynccopyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFromIxRaw(context, request, cq));
    }
    // / Copies all matching attributes from another item into this item
    virtual ::grpc::Status copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsynccopyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsynccopyAttrFrom2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsynccopyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFrom2Raw(context, request, cq));
    }
    // / Clears all attributes
    virtual ::grpc::Status clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearAllAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearAllAttrRaw(context, request, cq));
    }
    // / Clears the attribute specified by its ID
    virtual ::grpc::Status clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearAttrRaw(context, request, cq));
    }
    // / Clears the attribute specified by its name
    virtual ::grpc::Status clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearAttr1Raw(context, request, cq));
    }
    // / Clears the attribute specified by its index
    virtual ::grpc::Status clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearAttrIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearAttrIxRaw(context, request, cq));
    }
    // / Removes any animation from an attribute (if it has one)
    virtual ::grpc::Status clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearAnimRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearAnimRaw(context, request, cq));
    }
    // / Removes any animation from an attribute (if it has one)
    virtual ::grpc::Status clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearAnim1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearAnim1Raw(context, request, cq));
    }
    // / Removes any animation from an attribute (if it has one)
    virtual ::grpc::Status clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncclearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncclearAnimIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncclearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncclearAnimIxRaw(context, request, cq));
    }
    // / Returns TRUE if the attribute has an animator object assigned to it
    virtual ::grpc::Status isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::octaneapi::ApiItem_isAnimatedResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedResponse>> AsyncisAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedResponse>>(AsyncisAnimatedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedResponse>> PrepareAsyncisAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedResponse>>(PrepareAsyncisAnimatedRaw(context, request, cq));
    }
    // / Returns TRUE if the attribute has an animator object assigned to it
    virtual ::grpc::Status isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::octaneapi::ApiItem_isAnimated1Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimated1Response>> AsyncisAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimated1Response>>(AsyncisAnimated1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimated1Response>> PrepareAsyncisAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimated1Response>>(PrepareAsyncisAnimated1Raw(context, request, cq));
    }
    // / Returns TRUE if the attribute has an animator object assigned to it
    virtual ::grpc::Status isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::octaneapi::ApiItem_isAnimatedIxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedIxResponse>> AsyncisAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedIxResponse>>(AsyncisAnimatedIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedIxResponse>> PrepareAsyncisAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedIxResponse>>(PrepareAsyncisAnimatedIxRaw(context, request, cq));
    }
    // / Evaluates the item's attributes
    virtual ::grpc::Status evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncevaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncevaluateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncevaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncevaluateRaw(context, request, cq));
    }
    // / Expands all items owned by the pins of the node or by the input linkers of the node graph
    virtual ::grpc::Status expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> Asyncexpand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncexpandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncexpand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncexpandRaw(context, request, cq));
    }
    // / Expands the current item out of its owner pin
    virtual ::grpc::Status expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::octaneapi::ApiItem_expandOutOfPinResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_expandOutOfPinResponse>> AsyncexpandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_expandOutOfPinResponse>>(AsyncexpandOutOfPinRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_expandOutOfPinResponse>> PrepareAsyncexpandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_expandOutOfPinResponse>>(PrepareAsyncexpandOutOfPinRaw(context, request, cq));
    }
    // / Collapse this node item down into all destination pins
    virtual ::grpc::Status collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::octaneapi::ApiItem_collapseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collapseResponse>> Asynccollapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collapseResponse>>(AsynccollapseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collapseResponse>> PrepareAsynccollapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collapseResponse>>(PrepareAsynccollapseRaw(context, request, cq));
    }
    // / Dump all attributes of this item to a text file
    virtual ::grpc::Status dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdumpAttributesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdumpAttributesRaw(context, request, cq));
    }
    // Scalar getters
    virtual ::grpc::Status getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::octaneapi::ApiItem_getValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>> AsyncgetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>>(AsyncgetByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>> PrepareAsyncgetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>>(PrepareAsyncgetByAttrIDRaw(context, request, cq));
    }
    virtual ::grpc::Status getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::octaneapi::ApiItem_getValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>> AsyncgetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>>(AsyncgetByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>> PrepareAsyncgetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>>(PrepareAsyncgetByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::octaneapi::ApiItem_getValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>> AsyncgetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>>(AsyncgetByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>> PrepareAsyncgetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>>(PrepareAsyncgetByIxRaw(context, request, cq));
    }
    // Array getters
    virtual ::grpc::Status getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>> AsyncgetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>>(AsyncgetArrayByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>> PrepareAsyncgetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>>(PrepareAsyncgetArrayByAttrIDRaw(context, request, cq));
    }
    virtual ::grpc::Status getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>> AsyncgetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>>(AsyncgetArrayByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>> PrepareAsyncgetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>>(PrepareAsyncgetArrayByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>> AsyncgetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>>(AsyncgetArrayByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>> PrepareAsyncgetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>>(PrepareAsyncgetArrayByIxRaw(context, request, cq));
    }
    // Scalar setters
    virtual ::grpc::Status setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::octaneapi::ApiItem_setValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>> AsyncsetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>>(AsyncsetByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>> PrepareAsyncsetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>>(PrepareAsyncsetByAttrIDRaw(context, request, cq));
    }
    virtual ::grpc::Status setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::octaneapi::ApiItem_setValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>> AsyncsetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>>(AsyncsetByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>> PrepareAsyncsetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>>(PrepareAsyncsetByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::octaneapi::ApiItem_setValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>> AsyncsetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>>(AsyncsetByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>> PrepareAsyncsetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>>(PrepareAsyncsetByIxRaw(context, request, cq));
    }
    // Array setters
    virtual ::grpc::Status setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>> AsyncsetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>>(AsyncsetArrayByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>> PrepareAsyncsetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>>(PrepareAsyncsetArrayByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>> AsyncsetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>>(AsyncsetArrayByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>> PrepareAsyncsetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>>(PrepareAsyncsetArrayByAttrIDRaw(context, request, cq));
    }
    virtual ::grpc::Status setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>> AsyncsetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>>(AsyncsetArrayByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>> PrepareAsyncsetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>>(PrepareAsyncsetArrayByIxRaw(context, request, cq));
    }
    // Anim getters
    virtual ::grpc::Status getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>> AsyncgetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>>(AsyncgetAnimByAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>> PrepareAsyncgetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>>(PrepareAsyncgetAnimByAttrRaw(context, request, cq));
    }
    virtual ::grpc::Status getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>> AsyncgetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>>(AsyncgetAnimByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>> PrepareAsyncgetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>>(PrepareAsyncgetAnimByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>> AsyncgetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>>(AsyncgetAnimByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>> PrepareAsyncgetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>>(PrepareAsyncgetAnimByIxRaw(context, request, cq));
    }
    // Anim setters
    virtual ::grpc::Status setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>> AsyncsetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>>(AsyncsetAnimByAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>> PrepareAsyncsetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>>(PrepareAsyncsetAnimByAttrRaw(context, request, cq));
    }
    virtual ::grpc::Status setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>> AsyncsetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>>(AsyncsetAnimByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>> PrepareAsyncsetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>>(PrepareAsyncsetAnimByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>> AsyncsetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>>(AsyncsetAnimByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>> PrepareAsyncsetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>>(PrepareAsyncsetAnimByIxRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // / Destroys this item
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the name of this item
      virtual void name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the name of this item
      virtual void setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the position of the item inside its owner
      virtual void position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the position of this item
      virtual void setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Adds a UI operation flag to this node item and this flags will be only used when making a 
      // / direct interaction from UI
      virtual void setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the UI operation flags of this node item
      virtual void uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Sets the node item to selected state (for the window opened using ApiNodeGraph::showWindow())
      virtual void select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the current time of this item
      virtual void time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the output type for this item
      virtual void outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the persistent ID of the node item
      virtual void persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the unique ID of the node item
      virtual void uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Collects all items that are connected to this node item
      virtual void collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / If the item is owned by a node graph, this function will remove all items owned by that node
      // / graph that are not directly/indirectly connected with the item
      virtual void deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / If this item stores file data that has been provided by plugins directly, this function
      // / will export that data into a file with the specified name
      virtual void switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the version of the item
      virtual void version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if this item is a graph
      virtual void isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if this item is a node
      virtual void isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the item is an input/output linker node
      virtual void isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the item is an input linker node
      virtual void isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the item is an output linker node
      virtual void isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Downcasts this item to a graph
      virtual void toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Downcasts this item to a node
      virtual void toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Downcasts this item to a graph
      virtual void toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Downcasts this item to a node
      virtual void toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if this item has an owner (graph or pin), usually always TRUE with the
      // / exception of root node graphs, which never have an owner
      virtual void hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if this item is owned by a graph
      virtual void graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if this item is owned by a pin
      virtual void pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Gets the graph owner (if any)
      virtual void graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Gets the pin owner (if any)
      virtual void pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the root node graph which contains this node item
      virtual void rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the root node graph which contains this node item
      virtual void rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the number of attributes of this item
      virtual void attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if an attribute with the specified ID exists
      virtual void hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if an attribute with the specified name exists
      virtual void hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if an attribute with this ID exists and returns its index in "foundIndex"
      virtual void findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if an attribute with this name exists and returns its index in "foundIndex"
      virtual void findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the ID of attribute provided by it's name
      virtual void attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the ID of the attribute at index
      virtual void attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the name of the attribute at the provided ID or "unknown" if there's no such attribute
      virtual void attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the name of the attribute at the index or "unknown" if there's no such attribute
      virtual void attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the type of the attribute identified by it's ID
      virtual void attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the type of the attribute identified by it's name
      virtual void attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the type of the attribute at the index
      virtual void attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the info for the attribute identified by the ID
      virtual void attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the info for the attribute identified by the name
      virtual void attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns the info for the attribute at index
      virtual void attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if any of the attributes are flagged dirty
      virtual void attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the attribute is flagged dirty
      virtual void isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the attribute is flagged dirty
      virtual void isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the attribute is flagged dirty
      virtual void isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies another item's attribute value into this item's attribute
      virtual void copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies the attribute into our attribute, specified by its name
      virtual void copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies the attribute into our attribute, specified by its index
      virtual void copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Copies all matching attributes from another item into this item
      virtual void copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Clears all attributes
      virtual void clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Clears the attribute specified by its ID
      virtual void clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Clears the attribute specified by its name
      virtual void clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Clears the attribute specified by its index
      virtual void clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes any animation from an attribute (if it has one)
      virtual void clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes any animation from an attribute (if it has one)
      virtual void clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Removes any animation from an attribute (if it has one)
      virtual void clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the attribute has an animator object assigned to it
      virtual void isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the attribute has an animator object assigned to it
      virtual void isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Returns TRUE if the attribute has an animator object assigned to it
      virtual void isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Evaluates the item's attributes
      virtual void evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Expands all items owned by the pins of the node or by the input linkers of the node graph
      virtual void expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Expands the current item out of its owner pin
      virtual void expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Collapse this node item down into all destination pins
      virtual void collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // / Dump all attributes of this item to a text file
      virtual void dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Scalar getters
      virtual void getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Array getters
      virtual void getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Scalar setters
      virtual void setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Array setters
      virtual void setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Anim getters
      virtual void getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Anim setters
      virtual void setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_nameResponse>* AsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_nameResponse>* PrepareAsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_positionResponse>* AsyncpositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_positionResponse>* PrepareAsyncpositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetPositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetPositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncsetUIOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncsetUIOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uiOperationFlagsResponse>* AsyncuiOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uiOperationFlagsResponse>* PrepareAsyncuiOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncselectRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncselectRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_timeResponse>* AsynctimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_timeResponse>* PrepareAsynctimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_outTypeResponse>* AsyncoutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_outTypeResponse>* PrepareAsyncoutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_persistentIdResponse>* AsyncpersistentIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_persistentIdResponse>* PrepareAsyncpersistentIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uniqueIdResponse>* AsyncuniqueIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_uniqueIdResponse>* PrepareAsyncuniqueIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collectItemTreeResponse>* AsynccollectItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collectItemTreeResponse>* PrepareAsynccollectItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdeleteUnconnectedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdeleteUnconnectedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncswitchToFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncswitchToFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_versionResponse>* AsyncversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_versionResponse>* PrepareAsyncversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isGraphResponse>* AsyncisGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isGraphResponse>* PrepareAsyncisGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isNodeResponse>* AsyncisNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isNodeResponse>* PrepareAsyncisNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isLinkerResponse>* AsyncisLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isLinkerResponse>* PrepareAsyncisLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isInputLinkerResponse>* AsyncisInputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isInputLinkerResponse>* PrepareAsyncisInputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isOutputLinkerResponse>* AsyncisOutputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isOutputLinkerResponse>* PrepareAsyncisOutputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraphResponse>* AsynctoGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraphResponse>* PrepareAsynctoGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNodeResponse>* AsynctoNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNodeResponse>* PrepareAsynctoNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraph1Response>* AsynctoGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toGraph1Response>* PrepareAsynctoGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNode1Response>* AsynctoNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_toNode1Response>* PrepareAsynctoNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasOwnerResponse>* AsynchasOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasOwnerResponse>* PrepareAsynchasOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnedResponse>* AsyncgraphOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnedResponse>* PrepareAsyncgraphOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnedResponse>* AsyncpinOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnedResponse>* PrepareAsyncpinOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnerResponse>* AsyncgraphOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_graphOwnerResponse>* PrepareAsyncgraphOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnerResponse>* AsyncpinOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_pinOwnerResponse>* PrepareAsyncpinOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraphResponse>* AsyncrootGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraphResponse>* PrepareAsyncrootGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraph1Response>* AsyncrootGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_rootGraph1Response>* PrepareAsyncrootGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrCountResponse>* AsyncattrCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrCountResponse>* PrepareAsyncattrCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttrResponse>* AsynchasAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttrResponse>* PrepareAsynchasAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttr1Response>* AsynchasAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_hasAttr1Response>* PrepareAsynchasAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttrResponse>* AsyncfindAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttrResponse>* PrepareAsyncfindAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttr1Response>* AsyncfindAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_findAttr1Response>* PrepareAsyncfindAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdResponse>* AsyncattrIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdResponse>* PrepareAsyncattrIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdIxResponse>* AsyncattrIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrIdIxResponse>* PrepareAsyncattrIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameResponse>* AsyncattrNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameResponse>* PrepareAsyncattrNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameIxResponse>* AsyncattrNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrNameIxResponse>* PrepareAsyncattrNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeResponse>* AsyncattrTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeResponse>* PrepareAsyncattrTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrType1Response>* AsyncattrType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrType1Response>* PrepareAsyncattrType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeIxResponse>* AsyncattrTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrTypeIxResponse>* PrepareAsyncattrTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoResponse>* AsyncattrInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoResponse>* PrepareAsyncattrInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfo1Response>* AsyncattrInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfo1Response>* PrepareAsyncattrInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoIxResponse>* AsyncattrInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrInfoIxResponse>* PrepareAsyncattrInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrAreDirtyResponse>* AsyncattrAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_attrAreDirtyResponse>* PrepareAsyncattrAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrResponse>* AsyncisDirtyAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrResponse>* PrepareAsyncisDirtyAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttr1Response>* AsyncisDirtyAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttr1Response>* PrepareAsyncisDirtyAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrIxResponse>* AsyncisDirtyAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isDirtyAttrIxResponse>* PrepareAsyncisDirtyAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynccopyAttrFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynccopyAttrFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynccopyAttrFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynccopyAttrFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynccopyAttrFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynccopyAttrFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsynccopyAttrFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsynccopyAttrFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearAllAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearAllAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearAnimRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearAnimRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearAnim1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearAnim1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncclearAnimIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncclearAnimIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedResponse>* AsyncisAnimatedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedResponse>* PrepareAsyncisAnimatedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimated1Response>* AsyncisAnimated1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimated1Response>* PrepareAsyncisAnimated1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedIxResponse>* AsyncisAnimatedIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_isAnimatedIxResponse>* PrepareAsyncisAnimatedIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncevaluateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncevaluateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncexpandRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncexpandRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_expandOutOfPinResponse>* AsyncexpandOutOfPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_expandOutOfPinResponse>* PrepareAsyncexpandOutOfPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collapseResponse>* AsynccollapseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_collapseResponse>* PrepareAsynccollapseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdumpAttributesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdumpAttributesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>* AsyncgetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>* PrepareAsyncgetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>* AsyncgetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>* PrepareAsyncgetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>* AsyncgetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getValueResponse>* PrepareAsyncgetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>* AsyncgetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>* PrepareAsyncgetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>* AsyncgetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>* PrepareAsyncgetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>* AsyncgetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getArrayResponse>* PrepareAsyncgetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>* AsyncsetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>* PrepareAsyncsetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>* AsyncsetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>* PrepareAsyncsetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>* AsyncsetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setValueResponse>* PrepareAsyncsetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>* AsyncsetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>* PrepareAsyncsetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>* AsyncsetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>* PrepareAsyncsetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>* AsyncsetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setArrayResponse>* PrepareAsyncsetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>* AsyncgetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>* PrepareAsyncgetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>* AsyncgetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>* PrepareAsyncgetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>* AsyncgetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_getAnimArrayResponse>* PrepareAsyncgetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>* AsyncsetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>* PrepareAsyncsetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>* AsyncsetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>* PrepareAsyncsetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>* AsyncsetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::octaneapi::ApiItem_setAnimArrayResponse>* PrepareAsyncsetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdestroyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdestroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdestroyRaw(context, request, cq));
    }
    ::grpc::Status name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::octaneapi::ApiItem_nameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>> Asyncname(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>>(AsyncnameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>> PrepareAsyncname(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>>(PrepareAsyncnameRaw(context, request, cq));
    }
    ::grpc::Status setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetNameRaw(context, request, cq));
    }
    ::grpc::Status position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::octaneapi::ApiItem_positionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>> Asyncposition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>>(AsyncpositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>> PrepareAsyncposition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>>(PrepareAsyncpositionRaw(context, request, cq));
    }
    ::grpc::Status setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetPositionRaw(context, request, cq));
    }
    ::grpc::Status setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncsetUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncsetUIOperationFlagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncsetUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncsetUIOperationFlagsRaw(context, request, cq));
    }
    ::grpc::Status uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>> AsyncuiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>>(AsyncuiOperationFlagsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>> PrepareAsyncuiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>>(PrepareAsyncuiOperationFlagsRaw(context, request, cq));
    }
    ::grpc::Status select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncselect(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncselectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncselect(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncselectRaw(context, request, cq));
    }
    ::grpc::Status time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::octaneapi::ApiItem_timeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>> Asynctime(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>>(AsynctimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>> PrepareAsynctime(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>>(PrepareAsynctimeRaw(context, request, cq));
    }
    ::grpc::Status outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::octaneapi::ApiItem_outTypeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>> AsyncoutType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>>(AsyncoutTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>> PrepareAsyncoutType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>>(PrepareAsyncoutTypeRaw(context, request, cq));
    }
    ::grpc::Status persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::octaneapi::ApiItem_persistentIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>> AsyncpersistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>>(AsyncpersistentIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>> PrepareAsyncpersistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>>(PrepareAsyncpersistentIdRaw(context, request, cq));
    }
    ::grpc::Status uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::octaneapi::ApiItem_uniqueIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>> AsyncuniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>>(AsyncuniqueIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>> PrepareAsyncuniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>>(PrepareAsyncuniqueIdRaw(context, request, cq));
    }
    ::grpc::Status collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::octaneapi::ApiItem_collectItemTreeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>> AsynccollectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>>(AsynccollectItemTreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>> PrepareAsynccollectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>>(PrepareAsynccollectItemTreeRaw(context, request, cq));
    }
    ::grpc::Status deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdeleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdeleteUnconnectedItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdeleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdeleteUnconnectedItemsRaw(context, request, cq));
    }
    ::grpc::Status switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncswitchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncswitchToFileDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncswitchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncswitchToFileDataRaw(context, request, cq));
    }
    ::grpc::Status version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::octaneapi::ApiItem_versionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>> Asyncversion(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>>(AsyncversionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>> PrepareAsyncversion(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>>(PrepareAsyncversionRaw(context, request, cq));
    }
    ::grpc::Status isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::octaneapi::ApiItem_isGraphResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>> AsyncisGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>>(AsyncisGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>> PrepareAsyncisGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>>(PrepareAsyncisGraphRaw(context, request, cq));
    }
    ::grpc::Status isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::octaneapi::ApiItem_isNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>> AsyncisNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>>(AsyncisNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>> PrepareAsyncisNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>>(PrepareAsyncisNodeRaw(context, request, cq));
    }
    ::grpc::Status isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::octaneapi::ApiItem_isLinkerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>> AsyncisLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>>(AsyncisLinkerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>> PrepareAsyncisLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>>(PrepareAsyncisLinkerRaw(context, request, cq));
    }
    ::grpc::Status isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::octaneapi::ApiItem_isInputLinkerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>> AsyncisInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>>(AsyncisInputLinkerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>> PrepareAsyncisInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>>(PrepareAsyncisInputLinkerRaw(context, request, cq));
    }
    ::grpc::Status isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::octaneapi::ApiItem_isOutputLinkerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>> AsyncisOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>>(AsyncisOutputLinkerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>> PrepareAsyncisOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>>(PrepareAsyncisOutputLinkerRaw(context, request, cq));
    }
    ::grpc::Status toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::octaneapi::ApiItem_toGraphResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>> AsynctoGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>>(AsynctoGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>> PrepareAsynctoGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>>(PrepareAsynctoGraphRaw(context, request, cq));
    }
    ::grpc::Status toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::octaneapi::ApiItem_toNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>> AsynctoNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>>(AsynctoNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>> PrepareAsynctoNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>>(PrepareAsynctoNodeRaw(context, request, cq));
    }
    ::grpc::Status toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::octaneapi::ApiItem_toGraph1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>> AsynctoGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>>(AsynctoGraph1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>> PrepareAsynctoGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>>(PrepareAsynctoGraph1Raw(context, request, cq));
    }
    ::grpc::Status toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::octaneapi::ApiItem_toNode1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>> AsynctoNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>>(AsynctoNode1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>> PrepareAsynctoNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>>(PrepareAsynctoNode1Raw(context, request, cq));
    }
    ::grpc::Status hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::octaneapi::ApiItem_hasOwnerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>> AsynchasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>>(AsynchasOwnerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>> PrepareAsynchasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>>(PrepareAsynchasOwnerRaw(context, request, cq));
    }
    ::grpc::Status graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::octaneapi::ApiItem_graphOwnedResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>> AsyncgraphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>>(AsyncgraphOwnedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>> PrepareAsyncgraphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>>(PrepareAsyncgraphOwnedRaw(context, request, cq));
    }
    ::grpc::Status pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::octaneapi::ApiItem_pinOwnedResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>> AsyncpinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>>(AsyncpinOwnedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>> PrepareAsyncpinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>>(PrepareAsyncpinOwnedRaw(context, request, cq));
    }
    ::grpc::Status graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::octaneapi::ApiItem_graphOwnerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>> AsyncgraphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>>(AsyncgraphOwnerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>> PrepareAsyncgraphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>>(PrepareAsyncgraphOwnerRaw(context, request, cq));
    }
    ::grpc::Status pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::octaneapi::ApiItem_pinOwnerResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>> AsyncpinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>>(AsyncpinOwnerRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>> PrepareAsyncpinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>>(PrepareAsyncpinOwnerRaw(context, request, cq));
    }
    ::grpc::Status rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::octaneapi::ApiItem_rootGraphResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>> AsyncrootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>>(AsyncrootGraphRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>> PrepareAsyncrootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>>(PrepareAsyncrootGraphRaw(context, request, cq));
    }
    ::grpc::Status rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::octaneapi::ApiItem_rootGraph1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>> AsyncrootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>>(AsyncrootGraph1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>> PrepareAsyncrootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>>(PrepareAsyncrootGraph1Raw(context, request, cq));
    }
    ::grpc::Status attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::octaneapi::ApiItem_attrCountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>> AsyncattrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>>(AsyncattrCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>> PrepareAsyncattrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>>(PrepareAsyncattrCountRaw(context, request, cq));
    }
    ::grpc::Status hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::octaneapi::ApiItem_hasAttrResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>> AsynchasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>>(AsynchasAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>> PrepareAsynchasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>>(PrepareAsynchasAttrRaw(context, request, cq));
    }
    ::grpc::Status hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::octaneapi::ApiItem_hasAttr1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>> AsynchasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>>(AsynchasAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>> PrepareAsynchasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>>(PrepareAsynchasAttr1Raw(context, request, cq));
    }
    ::grpc::Status findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::octaneapi::ApiItem_findAttrResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>> AsyncfindAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>>(AsyncfindAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>> PrepareAsyncfindAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>>(PrepareAsyncfindAttrRaw(context, request, cq));
    }
    ::grpc::Status findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::octaneapi::ApiItem_findAttr1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>> AsyncfindAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>>(AsyncfindAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>> PrepareAsyncfindAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>>(PrepareAsyncfindAttr1Raw(context, request, cq));
    }
    ::grpc::Status attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::octaneapi::ApiItem_attrIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>> AsyncattrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>>(AsyncattrIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>> PrepareAsyncattrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>>(PrepareAsyncattrIdRaw(context, request, cq));
    }
    ::grpc::Status attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::octaneapi::ApiItem_attrIdIxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>> AsyncattrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>>(AsyncattrIdIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>> PrepareAsyncattrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>>(PrepareAsyncattrIdIxRaw(context, request, cq));
    }
    ::grpc::Status attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::octaneapi::ApiItem_attrNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>> AsyncattrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>>(AsyncattrNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>> PrepareAsyncattrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>>(PrepareAsyncattrNameRaw(context, request, cq));
    }
    ::grpc::Status attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::octaneapi::ApiItem_attrNameIxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>> AsyncattrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>>(AsyncattrNameIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>> PrepareAsyncattrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>>(PrepareAsyncattrNameIxRaw(context, request, cq));
    }
    ::grpc::Status attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::octaneapi::ApiItem_attrTypeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>> AsyncattrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>>(AsyncattrTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>> PrepareAsyncattrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>>(PrepareAsyncattrTypeRaw(context, request, cq));
    }
    ::grpc::Status attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::octaneapi::ApiItem_attrType1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>> AsyncattrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>>(AsyncattrType1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>> PrepareAsyncattrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>>(PrepareAsyncattrType1Raw(context, request, cq));
    }
    ::grpc::Status attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::octaneapi::ApiItem_attrTypeIxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>> AsyncattrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>>(AsyncattrTypeIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>> PrepareAsyncattrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>>(PrepareAsyncattrTypeIxRaw(context, request, cq));
    }
    ::grpc::Status attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::octaneapi::ApiItem_attrInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>> AsyncattrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>>(AsyncattrInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>> PrepareAsyncattrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>>(PrepareAsyncattrInfoRaw(context, request, cq));
    }
    ::grpc::Status attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::octaneapi::ApiItem_attrInfo1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>> AsyncattrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>>(AsyncattrInfo1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>> PrepareAsyncattrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>>(PrepareAsyncattrInfo1Raw(context, request, cq));
    }
    ::grpc::Status attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::octaneapi::ApiItem_attrInfoIxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>> AsyncattrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>>(AsyncattrInfoIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>> PrepareAsyncattrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>>(PrepareAsyncattrInfoIxRaw(context, request, cq));
    }
    ::grpc::Status attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::octaneapi::ApiItem_attrAreDirtyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>> AsyncattrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>>(AsyncattrAreDirtyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>> PrepareAsyncattrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>>(PrepareAsyncattrAreDirtyRaw(context, request, cq));
    }
    ::grpc::Status isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::octaneapi::ApiItem_isDirtyAttrResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>> AsyncisDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>>(AsyncisDirtyAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>> PrepareAsyncisDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>>(PrepareAsyncisDirtyAttrRaw(context, request, cq));
    }
    ::grpc::Status isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::octaneapi::ApiItem_isDirtyAttr1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>> AsyncisDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>>(AsyncisDirtyAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>> PrepareAsyncisDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>>(PrepareAsyncisDirtyAttr1Raw(context, request, cq));
    }
    ::grpc::Status isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>> AsyncisDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>>(AsyncisDirtyAttrIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>> PrepareAsyncisDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>>(PrepareAsyncisDirtyAttrIxRaw(context, request, cq));
    }
    ::grpc::Status copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsynccopyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynccopyAttrFromRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynccopyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFromRaw(context, request, cq));
    }
    ::grpc::Status copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsynccopyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynccopyAttrFrom1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynccopyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFrom1Raw(context, request, cq));
    }
    ::grpc::Status copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsynccopyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynccopyAttrFromIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynccopyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFromIxRaw(context, request, cq));
    }
    ::grpc::Status copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsynccopyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsynccopyAttrFrom2Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsynccopyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsynccopyAttrFrom2Raw(context, request, cq));
    }
    ::grpc::Status clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearAllAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearAllAttrRaw(context, request, cq));
    }
    ::grpc::Status clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearAttrRaw(context, request, cq));
    }
    ::grpc::Status clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearAttr1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearAttr1Raw(context, request, cq));
    }
    ::grpc::Status clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearAttrIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearAttrIxRaw(context, request, cq));
    }
    ::grpc::Status clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearAnimRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearAnimRaw(context, request, cq));
    }
    ::grpc::Status clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearAnim1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearAnim1Raw(context, request, cq));
    }
    ::grpc::Status clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncclearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncclearAnimIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncclearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncclearAnimIxRaw(context, request, cq));
    }
    ::grpc::Status isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::octaneapi::ApiItem_isAnimatedResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>> AsyncisAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>>(AsyncisAnimatedRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>> PrepareAsyncisAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>>(PrepareAsyncisAnimatedRaw(context, request, cq));
    }
    ::grpc::Status isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::octaneapi::ApiItem_isAnimated1Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>> AsyncisAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>>(AsyncisAnimated1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>> PrepareAsyncisAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>>(PrepareAsyncisAnimated1Raw(context, request, cq));
    }
    ::grpc::Status isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::octaneapi::ApiItem_isAnimatedIxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>> AsyncisAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>>(AsyncisAnimatedIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>> PrepareAsyncisAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>>(PrepareAsyncisAnimatedIxRaw(context, request, cq));
    }
    ::grpc::Status evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncevaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncevaluateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncevaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncevaluateRaw(context, request, cq));
    }
    ::grpc::Status expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> Asyncexpand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncexpandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncexpand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncexpandRaw(context, request, cq));
    }
    ::grpc::Status expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::octaneapi::ApiItem_expandOutOfPinResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>> AsyncexpandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>>(AsyncexpandOutOfPinRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>> PrepareAsyncexpandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>>(PrepareAsyncexpandOutOfPinRaw(context, request, cq));
    }
    ::grpc::Status collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::octaneapi::ApiItem_collapseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>> Asynccollapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>>(AsynccollapseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>> PrepareAsynccollapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>>(PrepareAsynccollapseRaw(context, request, cq));
    }
    ::grpc::Status dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdumpAttributesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdumpAttributesRaw(context, request, cq));
    }
    ::grpc::Status getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::octaneapi::ApiItem_getValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>> AsyncgetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>>(AsyncgetByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>> PrepareAsyncgetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>>(PrepareAsyncgetByAttrIDRaw(context, request, cq));
    }
    ::grpc::Status getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::octaneapi::ApiItem_getValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>> AsyncgetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>>(AsyncgetByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>> PrepareAsyncgetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>>(PrepareAsyncgetByNameRaw(context, request, cq));
    }
    ::grpc::Status getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::octaneapi::ApiItem_getValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>> AsyncgetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>>(AsyncgetByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>> PrepareAsyncgetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>>(PrepareAsyncgetByIxRaw(context, request, cq));
    }
    ::grpc::Status getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>> AsyncgetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>>(AsyncgetArrayByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>> PrepareAsyncgetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>>(PrepareAsyncgetArrayByAttrIDRaw(context, request, cq));
    }
    ::grpc::Status getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>> AsyncgetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>>(AsyncgetArrayByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>> PrepareAsyncgetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>>(PrepareAsyncgetArrayByNameRaw(context, request, cq));
    }
    ::grpc::Status getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::octaneapi::ApiItem_getArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>> AsyncgetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>>(AsyncgetArrayByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>> PrepareAsyncgetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>>(PrepareAsyncgetArrayByIxRaw(context, request, cq));
    }
    ::grpc::Status setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::octaneapi::ApiItem_setValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>> AsyncsetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>>(AsyncsetByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>> PrepareAsyncsetByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>>(PrepareAsyncsetByAttrIDRaw(context, request, cq));
    }
    ::grpc::Status setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::octaneapi::ApiItem_setValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>> AsyncsetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>>(AsyncsetByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>> PrepareAsyncsetByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>>(PrepareAsyncsetByNameRaw(context, request, cq));
    }
    ::grpc::Status setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::octaneapi::ApiItem_setValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>> AsyncsetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>>(AsyncsetByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>> PrepareAsyncsetByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>>(PrepareAsyncsetByIxRaw(context, request, cq));
    }
    ::grpc::Status setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>> AsyncsetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>>(AsyncsetArrayByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>> PrepareAsyncsetArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>>(PrepareAsyncsetArrayByNameRaw(context, request, cq));
    }
    ::grpc::Status setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>> AsyncsetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>>(AsyncsetArrayByAttrIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>> PrepareAsyncsetArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>>(PrepareAsyncsetArrayByAttrIDRaw(context, request, cq));
    }
    ::grpc::Status setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::octaneapi::ApiItem_setArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>> AsyncsetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>>(AsyncsetArrayByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>> PrepareAsyncsetArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>>(PrepareAsyncsetArrayByIxRaw(context, request, cq));
    }
    ::grpc::Status getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>> AsyncgetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>>(AsyncgetAnimByAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>> PrepareAsyncgetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>>(PrepareAsyncgetAnimByAttrRaw(context, request, cq));
    }
    ::grpc::Status getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>> AsyncgetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>>(AsyncgetAnimByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>> PrepareAsyncgetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>>(PrepareAsyncgetAnimByNameRaw(context, request, cq));
    }
    ::grpc::Status getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::octaneapi::ApiItem_getAnimArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>> AsyncgetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>>(AsyncgetAnimByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>> PrepareAsyncgetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>>(PrepareAsyncgetAnimByIxRaw(context, request, cq));
    }
    ::grpc::Status setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>> AsyncsetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>>(AsyncsetAnimByAttrRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>> PrepareAsyncsetAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>>(PrepareAsyncsetAnimByAttrRaw(context, request, cq));
    }
    ::grpc::Status setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>> AsyncsetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>>(AsyncsetAnimByNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>> PrepareAsyncsetAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>>(PrepareAsyncsetAnimByNameRaw(context, request, cq));
    }
    ::grpc::Status setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::octaneapi::ApiItem_setAnimArrayResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>> AsyncsetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>>(AsyncsetAnimByIxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>> PrepareAsyncsetAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>>(PrepareAsyncsetAnimByIxRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void destroy(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response, std::function<void(::grpc::Status)>) override;
      void name(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response, std::function<void(::grpc::Status)>) override;
      void position(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setPosition(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void setUIOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response, std::function<void(::grpc::Status)>) override;
      void uiOperationFlags(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void select(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response, std::function<void(::grpc::Status)>) override;
      void time(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response, std::function<void(::grpc::Status)>) override;
      void outType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response, std::function<void(::grpc::Status)>) override;
      void persistentId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response, std::function<void(::grpc::Status)>) override;
      void uniqueId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response, std::function<void(::grpc::Status)>) override;
      void collectItemTree(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void deleteUnconnectedItems(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void switchToFileData(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response, std::function<void(::grpc::Status)>) override;
      void version(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response, std::function<void(::grpc::Status)>) override;
      void isGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void isNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response, std::function<void(::grpc::Status)>) override;
      void isLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response, std::function<void(::grpc::Status)>) override;
      void isInputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response, std::function<void(::grpc::Status)>) override;
      void isOutputLinker(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response, std::function<void(::grpc::Status)>) override;
      void toGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void toNode(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response, std::function<void(::grpc::Status)>) override;
      void toGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response, std::function<void(::grpc::Status)>) override;
      void toNode1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response, std::function<void(::grpc::Status)>) override;
      void hasOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response, std::function<void(::grpc::Status)>) override;
      void graphOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response, std::function<void(::grpc::Status)>) override;
      void pinOwned(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response, std::function<void(::grpc::Status)>) override;
      void graphOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response, std::function<void(::grpc::Status)>) override;
      void pinOwner(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response, std::function<void(::grpc::Status)>) override;
      void rootGraph(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response, std::function<void(::grpc::Status)>) override;
      void rootGraph1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response, std::function<void(::grpc::Status)>) override;
      void attrCount(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response, std::function<void(::grpc::Status)>) override;
      void hasAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response, std::function<void(::grpc::Status)>) override;
      void hasAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response, std::function<void(::grpc::Status)>) override;
      void findAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response, std::function<void(::grpc::Status)>) override;
      void findAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response, std::function<void(::grpc::Status)>) override;
      void attrId(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response, std::function<void(::grpc::Status)>) override;
      void attrIdIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response, std::function<void(::grpc::Status)>) override;
      void attrName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response, std::function<void(::grpc::Status)>) override;
      void attrNameIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response, std::function<void(::grpc::Status)>) override;
      void attrType(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response, std::function<void(::grpc::Status)>) override;
      void attrType1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response, std::function<void(::grpc::Status)>) override;
      void attrTypeIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void attrInfo(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response, std::function<void(::grpc::Status)>) override;
      void attrInfo1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response, std::function<void(::grpc::Status)>) override;
      void attrInfoIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response, std::function<void(::grpc::Status)>) override;
      void attrAreDirty(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response, std::function<void(::grpc::Status)>) override;
      void isDirtyAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response, std::function<void(::grpc::Status)>) override;
      void isDirtyAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response, std::function<void(::grpc::Status)>) override;
      void isDirtyAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void copyAttrFrom(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void copyAttrFrom1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void copyAttrFromIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void copyAttrFrom2(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearAllAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearAttr1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearAttrIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearAnim(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearAnim1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void clearAnimIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response, std::function<void(::grpc::Status)>) override;
      void isAnimated(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response, std::function<void(::grpc::Status)>) override;
      void isAnimated1(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response, std::function<void(::grpc::Status)>) override;
      void isAnimatedIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void evaluate(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void expand(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response, std::function<void(::grpc::Status)>) override;
      void expandOutOfPin(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response, std::function<void(::grpc::Status)>) override;
      void collapse(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void dumpAttributes(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)>) override;
      void getByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)>) override;
      void getByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response, std::function<void(::grpc::Status)>) override;
      void getByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void getArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void getArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void getArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)>) override;
      void setByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)>) override;
      void setByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response, std::function<void(::grpc::Status)>) override;
      void setByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void setArrayByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void setArrayByAttrID(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void setArrayByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void getAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void getAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void getAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void setAnimByAttr(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void setAnimByName(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, std::function<void(::grpc::Status)>) override;
      void setAnimByIx(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdestroyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_destroyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>* AsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_nameResponse>* PrepareAsyncnameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_nameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>* AsyncpositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_positionResponse>* PrepareAsyncpositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_positionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetPositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetPositionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncsetUIOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncsetUIOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>* AsyncuiOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uiOperationFlagsResponse>* PrepareAsyncuiOperationFlagsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncselectRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncselectRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_selectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>* AsynctimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_timeResponse>* PrepareAsynctimeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_timeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>* AsyncoutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_outTypeResponse>* PrepareAsyncoutTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_outTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>* AsyncpersistentIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_persistentIdResponse>* PrepareAsyncpersistentIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_persistentIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>* AsyncuniqueIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_uniqueIdResponse>* PrepareAsyncuniqueIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_uniqueIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>* AsynccollectItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collectItemTreeResponse>* PrepareAsynccollectItemTreeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdeleteUnconnectedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdeleteUnconnectedItemsRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncswitchToFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncswitchToFileDataRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>* AsyncversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_versionResponse>* PrepareAsyncversionRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_versionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>* AsyncisGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isGraphResponse>* PrepareAsyncisGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>* AsyncisNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isNodeResponse>* PrepareAsyncisNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>* AsyncisLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isLinkerResponse>* PrepareAsyncisLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isLinkerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>* AsyncisInputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isInputLinkerResponse>* PrepareAsyncisInputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>* AsyncisOutputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isOutputLinkerResponse>* PrepareAsyncisOutputLinkerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>* AsynctoGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraphResponse>* PrepareAsynctoGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>* AsynctoNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNodeResponse>* PrepareAsynctoNodeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>* AsynctoGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toGraph1Response>* PrepareAsynctoGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toGraph1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>* AsynctoNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_toNode1Response>* PrepareAsynctoNode1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_toNode1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>* AsynchasOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasOwnerResponse>* PrepareAsynchasOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasOwnerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>* AsyncgraphOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnedResponse>* PrepareAsyncgraphOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>* AsyncpinOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnedResponse>* PrepareAsyncpinOwnedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>* AsyncgraphOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_graphOwnerResponse>* PrepareAsyncgraphOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_graphOwnerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>* AsyncpinOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_pinOwnerResponse>* PrepareAsyncpinOwnerRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_pinOwnerRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>* AsyncrootGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraphResponse>* PrepareAsyncrootGraphRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraphRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>* AsyncrootGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_rootGraph1Response>* PrepareAsyncrootGraph1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_rootGraph1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>* AsyncattrCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrCountResponse>* PrepareAsyncattrCountRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>* AsynchasAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttrResponse>* PrepareAsynchasAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>* AsynchasAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_hasAttr1Response>* PrepareAsynchasAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_hasAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>* AsyncfindAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttrResponse>* PrepareAsyncfindAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>* AsyncfindAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_findAttr1Response>* PrepareAsyncfindAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_findAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>* AsyncattrIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdResponse>* PrepareAsyncattrIdRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>* AsyncattrIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrIdIxResponse>* PrepareAsyncattrIdIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrIdIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>* AsyncattrNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameResponse>* PrepareAsyncattrNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>* AsyncattrNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrNameIxResponse>* PrepareAsyncattrNameIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrNameIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>* AsyncattrTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeResponse>* PrepareAsyncattrTypeRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>* AsyncattrType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrType1Response>* PrepareAsyncattrType1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrType1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>* AsyncattrTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrTypeIxResponse>* PrepareAsyncattrTypeIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>* AsyncattrInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoResponse>* PrepareAsyncattrInfoRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>* AsyncattrInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfo1Response>* PrepareAsyncattrInfo1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfo1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>* AsyncattrInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrInfoIxResponse>* PrepareAsyncattrInfoIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>* AsyncattrAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_attrAreDirtyResponse>* PrepareAsyncattrAreDirtyRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>* AsyncisDirtyAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrResponse>* PrepareAsyncisDirtyAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>* AsyncisDirtyAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttr1Response>* PrepareAsyncisDirtyAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>* AsyncisDirtyAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isDirtyAttrIxResponse>* PrepareAsyncisDirtyAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynccopyAttrFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynccopyAttrFromRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynccopyAttrFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynccopyAttrFrom1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynccopyAttrFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynccopyAttrFromIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsynccopyAttrFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsynccopyAttrFrom2Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearAllAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearAllAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearAttr1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttr1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearAttrIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearAnimRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearAnimRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearAnim1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearAnim1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnim1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncclearAnimIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncclearAnimIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>* AsyncisAnimatedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedResponse>* PrepareAsyncisAnimatedRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>* AsyncisAnimated1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimated1Response>* PrepareAsyncisAnimated1Raw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimated1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>* AsyncisAnimatedIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_isAnimatedIxResponse>* PrepareAsyncisAnimatedIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncevaluateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncevaluateRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_evaluateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncexpandRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncexpandRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>* AsyncexpandOutOfPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_expandOutOfPinResponse>* PrepareAsyncexpandOutOfPinRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>* AsynccollapseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_collapseResponse>* PrepareAsynccollapseRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_collapseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdumpAttributesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdumpAttributesRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* AsyncgetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* PrepareAsyncgetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* AsyncgetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* PrepareAsyncgetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* AsyncgetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getValueResponse>* PrepareAsyncgetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getValueByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* AsyncgetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* PrepareAsyncgetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* AsyncgetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* PrepareAsyncgetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* AsyncgetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getArrayResponse>* PrepareAsyncgetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* AsyncsetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* PrepareAsyncsetByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* AsyncsetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* PrepareAsyncsetByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* AsyncsetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setValueResponse>* PrepareAsyncsetByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setValueByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* AsyncsetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* PrepareAsyncsetArrayByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* AsyncsetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* PrepareAsyncsetArrayByAttrIDRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* AsyncsetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setArrayResponse>* PrepareAsyncsetArrayByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* AsyncgetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* PrepareAsyncgetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* AsyncgetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* PrepareAsyncgetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* AsyncgetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_getAnimArrayResponse>* PrepareAsyncgetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* AsyncsetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* PrepareAsyncsetAnimByAttrRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* AsyncsetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* PrepareAsyncsetAnimByNameRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* AsyncsetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::octaneapi::ApiItem_setAnimArrayResponse>* PrepareAsyncsetAnimByIxRaw(::grpc::ClientContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_destroy_;
    const ::grpc::internal::RpcMethod rpcmethod_name_;
    const ::grpc::internal::RpcMethod rpcmethod_setName_;
    const ::grpc::internal::RpcMethod rpcmethod_position_;
    const ::grpc::internal::RpcMethod rpcmethod_setPosition_;
    const ::grpc::internal::RpcMethod rpcmethod_setUIOperationFlags_;
    const ::grpc::internal::RpcMethod rpcmethod_uiOperationFlags_;
    const ::grpc::internal::RpcMethod rpcmethod_select_;
    const ::grpc::internal::RpcMethod rpcmethod_time_;
    const ::grpc::internal::RpcMethod rpcmethod_outType_;
    const ::grpc::internal::RpcMethod rpcmethod_persistentId_;
    const ::grpc::internal::RpcMethod rpcmethod_uniqueId_;
    const ::grpc::internal::RpcMethod rpcmethod_collectItemTree_;
    const ::grpc::internal::RpcMethod rpcmethod_deleteUnconnectedItems_;
    const ::grpc::internal::RpcMethod rpcmethod_switchToFileData_;
    const ::grpc::internal::RpcMethod rpcmethod_version_;
    const ::grpc::internal::RpcMethod rpcmethod_isGraph_;
    const ::grpc::internal::RpcMethod rpcmethod_isNode_;
    const ::grpc::internal::RpcMethod rpcmethod_isLinker_;
    const ::grpc::internal::RpcMethod rpcmethod_isInputLinker_;
    const ::grpc::internal::RpcMethod rpcmethod_isOutputLinker_;
    const ::grpc::internal::RpcMethod rpcmethod_toGraph_;
    const ::grpc::internal::RpcMethod rpcmethod_toNode_;
    const ::grpc::internal::RpcMethod rpcmethod_toGraph1_;
    const ::grpc::internal::RpcMethod rpcmethod_toNode1_;
    const ::grpc::internal::RpcMethod rpcmethod_hasOwner_;
    const ::grpc::internal::RpcMethod rpcmethod_graphOwned_;
    const ::grpc::internal::RpcMethod rpcmethod_pinOwned_;
    const ::grpc::internal::RpcMethod rpcmethod_graphOwner_;
    const ::grpc::internal::RpcMethod rpcmethod_pinOwner_;
    const ::grpc::internal::RpcMethod rpcmethod_rootGraph_;
    const ::grpc::internal::RpcMethod rpcmethod_rootGraph1_;
    const ::grpc::internal::RpcMethod rpcmethod_attrCount_;
    const ::grpc::internal::RpcMethod rpcmethod_hasAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_hasAttr1_;
    const ::grpc::internal::RpcMethod rpcmethod_findAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_findAttr1_;
    const ::grpc::internal::RpcMethod rpcmethod_attrId_;
    const ::grpc::internal::RpcMethod rpcmethod_attrIdIx_;
    const ::grpc::internal::RpcMethod rpcmethod_attrName_;
    const ::grpc::internal::RpcMethod rpcmethod_attrNameIx_;
    const ::grpc::internal::RpcMethod rpcmethod_attrType_;
    const ::grpc::internal::RpcMethod rpcmethod_attrType1_;
    const ::grpc::internal::RpcMethod rpcmethod_attrTypeIx_;
    const ::grpc::internal::RpcMethod rpcmethod_attrInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_attrInfo1_;
    const ::grpc::internal::RpcMethod rpcmethod_attrInfoIx_;
    const ::grpc::internal::RpcMethod rpcmethod_attrAreDirty_;
    const ::grpc::internal::RpcMethod rpcmethod_isDirtyAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_isDirtyAttr1_;
    const ::grpc::internal::RpcMethod rpcmethod_isDirtyAttrIx_;
    const ::grpc::internal::RpcMethod rpcmethod_copyAttrFrom_;
    const ::grpc::internal::RpcMethod rpcmethod_copyAttrFrom1_;
    const ::grpc::internal::RpcMethod rpcmethod_copyAttrFromIx_;
    const ::grpc::internal::RpcMethod rpcmethod_copyAttrFrom2_;
    const ::grpc::internal::RpcMethod rpcmethod_clearAllAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_clearAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_clearAttr1_;
    const ::grpc::internal::RpcMethod rpcmethod_clearAttrIx_;
    const ::grpc::internal::RpcMethod rpcmethod_clearAnim_;
    const ::grpc::internal::RpcMethod rpcmethod_clearAnim1_;
    const ::grpc::internal::RpcMethod rpcmethod_clearAnimIx_;
    const ::grpc::internal::RpcMethod rpcmethod_isAnimated_;
    const ::grpc::internal::RpcMethod rpcmethod_isAnimated1_;
    const ::grpc::internal::RpcMethod rpcmethod_isAnimatedIx_;
    const ::grpc::internal::RpcMethod rpcmethod_evaluate_;
    const ::grpc::internal::RpcMethod rpcmethod_expand_;
    const ::grpc::internal::RpcMethod rpcmethod_expandOutOfPin_;
    const ::grpc::internal::RpcMethod rpcmethod_collapse_;
    const ::grpc::internal::RpcMethod rpcmethod_dumpAttributes_;
    const ::grpc::internal::RpcMethod rpcmethod_getByAttrID_;
    const ::grpc::internal::RpcMethod rpcmethod_getByName_;
    const ::grpc::internal::RpcMethod rpcmethod_getByIx_;
    const ::grpc::internal::RpcMethod rpcmethod_getArrayByAttrID_;
    const ::grpc::internal::RpcMethod rpcmethod_getArrayByName_;
    const ::grpc::internal::RpcMethod rpcmethod_getArrayByIx_;
    const ::grpc::internal::RpcMethod rpcmethod_setByAttrID_;
    const ::grpc::internal::RpcMethod rpcmethod_setByName_;
    const ::grpc::internal::RpcMethod rpcmethod_setByIx_;
    const ::grpc::internal::RpcMethod rpcmethod_setArrayByName_;
    const ::grpc::internal::RpcMethod rpcmethod_setArrayByAttrID_;
    const ::grpc::internal::RpcMethod rpcmethod_setArrayByIx_;
    const ::grpc::internal::RpcMethod rpcmethod_getAnimByAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_getAnimByName_;
    const ::grpc::internal::RpcMethod rpcmethod_getAnimByIx_;
    const ::grpc::internal::RpcMethod rpcmethod_setAnimByAttr_;
    const ::grpc::internal::RpcMethod rpcmethod_setAnimByName_;
    const ::grpc::internal::RpcMethod rpcmethod_setAnimByIx_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / Destroys this item
    virtual ::grpc::Status destroy(::grpc::ServerContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response);
    // / Returns the name of this item
    virtual ::grpc::Status name(::grpc::ServerContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response);
    // / Sets the name of this item
    virtual ::grpc::Status setName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response);
    // / Returns the position of the item inside its owner
    virtual ::grpc::Status position(::grpc::ServerContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response);
    // / Sets the position of this item
    virtual ::grpc::Status setPosition(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response);
    // / Adds a UI operation flag to this node item and this flags will be only used when making a 
    // / direct interaction from UI
    virtual ::grpc::Status setUIOperationFlags(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response);
    // / Returns the UI operation flags of this node item
    virtual ::grpc::Status uiOperationFlags(::grpc::ServerContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response);
    // / Sets the node item to selected state (for the window opened using ApiNodeGraph::showWindow())
    virtual ::grpc::Status select(::grpc::ServerContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response);
    // / Returns the current time of this item
    virtual ::grpc::Status time(::grpc::ServerContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response);
    // / Returns the output type for this item
    virtual ::grpc::Status outType(::grpc::ServerContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response);
    // / Returns the persistent ID of the node item
    virtual ::grpc::Status persistentId(::grpc::ServerContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response);
    // / Returns the unique ID of the node item
    virtual ::grpc::Status uniqueId(::grpc::ServerContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response);
    // / Collects all items that are connected to this node item
    virtual ::grpc::Status collectItemTree(::grpc::ServerContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response);
    // / If the item is owned by a node graph, this function will remove all items owned by that node
    // / graph that are not directly/indirectly connected with the item
    virtual ::grpc::Status deleteUnconnectedItems(::grpc::ServerContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response);
    // / If this item stores file data that has been provided by plugins directly, this function
    // / will export that data into a file with the specified name
    virtual ::grpc::Status switchToFileData(::grpc::ServerContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response);
    // / Returns the version of the item
    virtual ::grpc::Status version(::grpc::ServerContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response);
    // / Returns TRUE if this item is a graph
    virtual ::grpc::Status isGraph(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response);
    // / Returns TRUE if this item is a node
    virtual ::grpc::Status isNode(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response);
    // / Returns TRUE if the item is an input/output linker node
    virtual ::grpc::Status isLinker(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response);
    // / Returns TRUE if the item is an input linker node
    virtual ::grpc::Status isInputLinker(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response);
    // / Returns TRUE if the item is an output linker node
    virtual ::grpc::Status isOutputLinker(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response);
    // / Downcasts this item to a graph
    virtual ::grpc::Status toGraph(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response);
    // / Downcasts this item to a node
    virtual ::grpc::Status toNode(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response);
    // / Downcasts this item to a graph
    virtual ::grpc::Status toGraph1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response);
    // / Downcasts this item to a node
    virtual ::grpc::Status toNode1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response);
    // / Returns TRUE if this item has an owner (graph or pin), usually always TRUE with the
    // / exception of root node graphs, which never have an owner
    virtual ::grpc::Status hasOwner(::grpc::ServerContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response);
    // / Returns TRUE if this item is owned by a graph
    virtual ::grpc::Status graphOwned(::grpc::ServerContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response);
    // / Returns TRUE if this item is owned by a pin
    virtual ::grpc::Status pinOwned(::grpc::ServerContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response);
    // / Gets the graph owner (if any)
    virtual ::grpc::Status graphOwner(::grpc::ServerContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response);
    // / Gets the pin owner (if any)
    virtual ::grpc::Status pinOwner(::grpc::ServerContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response);
    // / Returns the root node graph which contains this node item
    virtual ::grpc::Status rootGraph(::grpc::ServerContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response);
    // / Returns the root node graph which contains this node item
    virtual ::grpc::Status rootGraph1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response);
    // / Returns the number of attributes of this item
    virtual ::grpc::Status attrCount(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response);
    // / Returns TRUE if an attribute with the specified ID exists
    virtual ::grpc::Status hasAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response);
    // / Returns TRUE if an attribute with the specified name exists
    virtual ::grpc::Status hasAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response);
    // / Returns TRUE if an attribute with this ID exists and returns its index in "foundIndex"
    virtual ::grpc::Status findAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response);
    // / Returns TRUE if an attribute with this name exists and returns its index in "foundIndex"
    virtual ::grpc::Status findAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response);
    // / Returns the ID of attribute provided by it's name
    virtual ::grpc::Status attrId(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response);
    // / Returns the ID of the attribute at index
    virtual ::grpc::Status attrIdIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response);
    // / Returns the name of the attribute at the provided ID or "unknown" if there's no such attribute
    virtual ::grpc::Status attrName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response);
    // / Returns the name of the attribute at the index or "unknown" if there's no such attribute
    virtual ::grpc::Status attrNameIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response);
    // / Returns the type of the attribute identified by it's ID
    virtual ::grpc::Status attrType(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response);
    // / Returns the type of the attribute identified by it's name
    virtual ::grpc::Status attrType1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response);
    // / Returns the type of the attribute at the index
    virtual ::grpc::Status attrTypeIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response);
    // / Returns the info for the attribute identified by the ID
    virtual ::grpc::Status attrInfo(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response);
    // / Returns the info for the attribute identified by the name
    virtual ::grpc::Status attrInfo1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response);
    // / Returns the info for the attribute at index
    virtual ::grpc::Status attrInfoIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response);
    // / Returns TRUE if any of the attributes are flagged dirty
    virtual ::grpc::Status attrAreDirty(::grpc::ServerContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response);
    // / Returns TRUE if the attribute is flagged dirty
    virtual ::grpc::Status isDirtyAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response);
    // / Returns TRUE if the attribute is flagged dirty
    virtual ::grpc::Status isDirtyAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response);
    // / Returns TRUE if the attribute is flagged dirty
    virtual ::grpc::Status isDirtyAttrIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response);
    // / Copies another item's attribute value into this item's attribute
    virtual ::grpc::Status copyAttrFrom(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response);
    // / Copies the attribute into our attribute, specified by its name
    virtual ::grpc::Status copyAttrFrom1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response);
    // / Copies the attribute into our attribute, specified by its index
    virtual ::grpc::Status copyAttrFromIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response);
    // / Copies all matching attributes from another item into this item
    virtual ::grpc::Status copyAttrFrom2(::grpc::ServerContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response);
    // / Clears all attributes
    virtual ::grpc::Status clearAllAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response);
    // / Clears the attribute specified by its ID
    virtual ::grpc::Status clearAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response);
    // / Clears the attribute specified by its name
    virtual ::grpc::Status clearAttr1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response);
    // / Clears the attribute specified by its index
    virtual ::grpc::Status clearAttrIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response);
    // / Removes any animation from an attribute (if it has one)
    virtual ::grpc::Status clearAnim(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response);
    // / Removes any animation from an attribute (if it has one)
    virtual ::grpc::Status clearAnim1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response);
    // / Removes any animation from an attribute (if it has one)
    virtual ::grpc::Status clearAnimIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response);
    // / Returns TRUE if the attribute has an animator object assigned to it
    virtual ::grpc::Status isAnimated(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response);
    // / Returns TRUE if the attribute has an animator object assigned to it
    virtual ::grpc::Status isAnimated1(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response);
    // / Returns TRUE if the attribute has an animator object assigned to it
    virtual ::grpc::Status isAnimatedIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response);
    // / Evaluates the item's attributes
    virtual ::grpc::Status evaluate(::grpc::ServerContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response);
    // / Expands all items owned by the pins of the node or by the input linkers of the node graph
    virtual ::grpc::Status expand(::grpc::ServerContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response);
    // / Expands the current item out of its owner pin
    virtual ::grpc::Status expandOutOfPin(::grpc::ServerContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response);
    // / Collapse this node item down into all destination pins
    virtual ::grpc::Status collapse(::grpc::ServerContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response);
    // / Dump all attributes of this item to a text file
    virtual ::grpc::Status dumpAttributes(::grpc::ServerContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response);
    // Scalar getters
    virtual ::grpc::Status getByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response);
    virtual ::grpc::Status getByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response);
    virtual ::grpc::Status getByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response);
    // Array getters
    virtual ::grpc::Status getArrayByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response);
    virtual ::grpc::Status getArrayByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response);
    virtual ::grpc::Status getArrayByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response);
    // Scalar setters
    virtual ::grpc::Status setByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response);
    virtual ::grpc::Status setByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response);
    virtual ::grpc::Status setByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response);
    // Array setters
    virtual ::grpc::Status setArrayByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response);
    virtual ::grpc::Status setArrayByAttrID(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response);
    virtual ::grpc::Status setArrayByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response);
    // Anim getters
    virtual ::grpc::Status getAnimByAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response);
    virtual ::grpc::Status getAnimByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response);
    virtual ::grpc::Status getAnimByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response);
    // Anim setters
    virtual ::grpc::Status setAnimByAttr(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response);
    virtual ::grpc::Status setAnimByName(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response);
    virtual ::grpc::Status setAnimByIx(::grpc::ServerContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_destroy() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::octaneapi::ApiItem_destroyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_name() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_nameRequest* /*request*/, ::octaneapi::ApiItem_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestname(::grpc::ServerContext* context, ::octaneapi::ApiItem_nameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_nameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setName() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_setName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setNameRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetName(::grpc::ServerContext* context, ::octaneapi::ApiItem_setNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_position : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_position() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_position() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status position(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_positionRequest* /*request*/, ::octaneapi::ApiItem_positionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestposition(::grpc::ServerContext* context, ::octaneapi::ApiItem_positionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_positionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setPosition() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_setPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setPosition(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setPositionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetPosition(::grpc::ServerContext* context, ::octaneapi::ApiItem_setPositionRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setUIOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setUIOperationFlags() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_setUIOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setUIOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetUIOperationFlags(::grpc::ServerContext* context, ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_uiOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_uiOperationFlags() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_uiOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uiOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uiOperationFlagsRequest* /*request*/, ::octaneapi::ApiItem_uiOperationFlagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestuiOperationFlags(::grpc::ServerContext* context, ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_uiOperationFlagsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_select : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_select() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_select() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status select(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_selectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestselect(::grpc::ServerContext* context, ::octaneapi::ApiItem_selectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_time : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_time() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_time() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status time(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_timeRequest* /*request*/, ::octaneapi::ApiItem_timeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttime(::grpc::ServerContext* context, ::octaneapi::ApiItem_timeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_timeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_outType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_outType() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_outType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status outType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_outTypeRequest* /*request*/, ::octaneapi::ApiItem_outTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestoutType(::grpc::ServerContext* context, ::octaneapi::ApiItem_outTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_outTypeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_persistentId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_persistentId() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_persistentId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status persistentId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_persistentIdRequest* /*request*/, ::octaneapi::ApiItem_persistentIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpersistentId(::grpc::ServerContext* context, ::octaneapi::ApiItem_persistentIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_persistentIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_uniqueId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_uniqueId() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_uniqueId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uniqueId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uniqueIdRequest* /*request*/, ::octaneapi::ApiItem_uniqueIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestuniqueId(::grpc::ServerContext* context, ::octaneapi::ApiItem_uniqueIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_uniqueIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_collectItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_collectItemTree() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_collectItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collectItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collectItemTreeRequest* /*request*/, ::octaneapi::ApiItem_collectItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcollectItemTree(::grpc::ServerContext* context, ::octaneapi::ApiItem_collectItemTreeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_collectItemTreeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_deleteUnconnectedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_deleteUnconnectedItems() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_deleteUnconnectedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteUnconnectedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteUnconnectedItems(::grpc::ServerContext* context, ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_switchToFileData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_switchToFileData() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_switchToFileData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status switchToFileData(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_switchToFileDataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestswitchToFileData(::grpc::ServerContext* context, ::octaneapi::ApiItem_switchToFileDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_version() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status version(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_versionRequest* /*request*/, ::octaneapi::ApiItem_versionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestversion(::grpc::ServerContext* context, ::octaneapi::ApiItem_versionRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_versionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isGraph() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_isGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isGraphRequest* /*request*/, ::octaneapi::ApiItem_isGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisGraph(::grpc::ServerContext* context, ::octaneapi::ApiItem_isGraphRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isGraphResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isNode() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_isNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isNodeRequest* /*request*/, ::octaneapi::ApiItem_isNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisNode(::grpc::ServerContext* context, ::octaneapi::ApiItem_isNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isLinker() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_isLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isLinkerRequest* /*request*/, ::octaneapi::ApiItem_isLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisLinker(::grpc::ServerContext* context, ::octaneapi::ApiItem_isLinkerRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isLinkerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isInputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isInputLinker() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_isInputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isInputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isInputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isInputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisInputLinker(::grpc::ServerContext* context, ::octaneapi::ApiItem_isInputLinkerRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isInputLinkerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isOutputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isOutputLinker() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_isOutputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isOutputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isOutputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isOutputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisOutputLinker(::grpc::ServerContext* context, ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isOutputLinkerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_toGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_toGraph() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_toGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraphRequest* /*request*/, ::octaneapi::ApiItem_toGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoGraph(::grpc::ServerContext* context, ::octaneapi::ApiItem_toGraphRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_toGraphResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_toNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_toNode() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_toNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNodeRequest* /*request*/, ::octaneapi::ApiItem_toNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoNode(::grpc::ServerContext* context, ::octaneapi::ApiItem_toNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_toNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_toGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_toGraph1() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_toGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraph1Request* /*request*/, ::octaneapi::ApiItem_toGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoGraph1(::grpc::ServerContext* context, ::octaneapi::ApiItem_toGraph1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_toGraph1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_toNode1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_toNode1() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_toNode1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNode1Request* /*request*/, ::octaneapi::ApiItem_toNode1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoNode1(::grpc::ServerContext* context, ::octaneapi::ApiItem_toNode1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_toNode1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_hasOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_hasOwner() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_hasOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasOwnerRequest* /*request*/, ::octaneapi::ApiItem_hasOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasOwner(::grpc::ServerContext* context, ::octaneapi::ApiItem_hasOwnerRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_hasOwnerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_graphOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_graphOwned() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_graphOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnedRequest* /*request*/, ::octaneapi::ApiItem_graphOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgraphOwned(::grpc::ServerContext* context, ::octaneapi::ApiItem_graphOwnedRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_graphOwnedResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_pinOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_pinOwned() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_pinOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnedRequest* /*request*/, ::octaneapi::ApiItem_pinOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpinOwned(::grpc::ServerContext* context, ::octaneapi::ApiItem_pinOwnedRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_pinOwnedResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_graphOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_graphOwner() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_graphOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnerRequest* /*request*/, ::octaneapi::ApiItem_graphOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgraphOwner(::grpc::ServerContext* context, ::octaneapi::ApiItem_graphOwnerRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_graphOwnerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_pinOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_pinOwner() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_pinOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnerRequest* /*request*/, ::octaneapi::ApiItem_pinOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpinOwner(::grpc::ServerContext* context, ::octaneapi::ApiItem_pinOwnerRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_pinOwnerResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_rootGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_rootGraph() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_rootGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraphRequest* /*request*/, ::octaneapi::ApiItem_rootGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrootGraph(::grpc::ServerContext* context, ::octaneapi::ApiItem_rootGraphRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_rootGraphResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_rootGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_rootGraph1() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_rootGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraph1Request* /*request*/, ::octaneapi::ApiItem_rootGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrootGraph1(::grpc::ServerContext* context, ::octaneapi::ApiItem_rootGraph1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_rootGraph1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrCount() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_attrCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrCountRequest* /*request*/, ::octaneapi::ApiItem_attrCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrCount(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrCountRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrCountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_hasAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_hasAttr() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_hasAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttrRequest* /*request*/, ::octaneapi::ApiItem_hasAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasAttr(::grpc::ServerContext* context, ::octaneapi::ApiItem_hasAttrRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_hasAttrResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_hasAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_hasAttr1() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_hasAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttr1Request* /*request*/, ::octaneapi::ApiItem_hasAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasAttr1(::grpc::ServerContext* context, ::octaneapi::ApiItem_hasAttr1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_hasAttr1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_findAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_findAttr() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_findAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttrRequest* /*request*/, ::octaneapi::ApiItem_findAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindAttr(::grpc::ServerContext* context, ::octaneapi::ApiItem_findAttrRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_findAttrResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_findAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_findAttr1() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_findAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttr1Request* /*request*/, ::octaneapi::ApiItem_findAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindAttr1(::grpc::ServerContext* context, ::octaneapi::ApiItem_findAttr1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_findAttr1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrId() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_attrId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdRequest* /*request*/, ::octaneapi::ApiItem_attrIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrId(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrIdIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrIdIx() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_attrIdIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrIdIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdIxRequest* /*request*/, ::octaneapi::ApiItem_attrIdIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrIdIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrIdIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrIdIxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrName() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_attrName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameRequest* /*request*/, ::octaneapi::ApiItem_attrNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrName(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrNameIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrNameIx() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_attrNameIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrNameIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameIxRequest* /*request*/, ::octaneapi::ApiItem_attrNameIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrNameIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrNameIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrNameIxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrType() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_attrType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeRequest* /*request*/, ::octaneapi::ApiItem_attrTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrType(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrTypeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrType1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrType1() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_attrType1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrType1Request* /*request*/, ::octaneapi::ApiItem_attrType1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrType1(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrType1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrType1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrTypeIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrTypeIx() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_attrTypeIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrTypeIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeIxRequest* /*request*/, ::octaneapi::ApiItem_attrTypeIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrTypeIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrTypeIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrTypeIxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrInfo() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_attrInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoRequest* /*request*/, ::octaneapi::ApiItem_attrInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrInfo(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrInfo1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrInfo1() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_attrInfo1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfo1Request* /*request*/, ::octaneapi::ApiItem_attrInfo1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrInfo1(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrInfo1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrInfo1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrInfoIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrInfoIx() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_attrInfoIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfoIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoIxRequest* /*request*/, ::octaneapi::ApiItem_attrInfoIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrInfoIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrInfoIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrInfoIxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_attrAreDirty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_attrAreDirty() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_attrAreDirty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrAreDirty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrAreDirtyRequest* /*request*/, ::octaneapi::ApiItem_attrAreDirtyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrAreDirty(::grpc::ServerContext* context, ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_attrAreDirtyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isDirtyAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isDirtyAttr() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_isDirtyAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisDirtyAttr(::grpc::ServerContext* context, ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isDirtyAttrResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isDirtyAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isDirtyAttr1() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_isDirtyAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttr1Request* /*request*/, ::octaneapi::ApiItem_isDirtyAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisDirtyAttr1(::grpc::ServerContext* context, ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isDirtyAttr1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isDirtyAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isDirtyAttrIx() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_isDirtyAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisDirtyAttrIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isDirtyAttrIxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyAttrFrom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyAttrFrom() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_copyAttrFrom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFrom(::grpc::ServerContext* context, ::octaneapi::ApiItem_copyAttrFromRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyAttrFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyAttrFrom1() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_copyAttrFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFrom1(::grpc::ServerContext* context, ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyAttrFromIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyAttrFromIx() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_copyAttrFromIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFromIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFromIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_copyAttrFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_copyAttrFrom2() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_copyAttrFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFrom2(::grpc::ServerContext* context, ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearAllAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearAllAttr() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_clearAllAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAllAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAllAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAllAttr(::grpc::ServerContext* context, ::octaneapi::ApiItem_clearAllAttrRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearAttr() {
      ::grpc::Service::MarkMethodAsync(56);
    }
    ~WithAsyncMethod_clearAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAttr(::grpc::ServerContext* context, ::octaneapi::ApiItem_clearAttrRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearAttr1() {
      ::grpc::Service::MarkMethodAsync(57);
    }
    ~WithAsyncMethod_clearAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttr1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAttr1(::grpc::ServerContext* context, ::octaneapi::ApiItem_clearAttr1Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearAttrIx() {
      ::grpc::Service::MarkMethodAsync(58);
    }
    ~WithAsyncMethod_clearAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAttrIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_clearAttrIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearAnim : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearAnim() {
      ::grpc::Service::MarkMethodAsync(59);
    }
    ~WithAsyncMethod_clearAnim() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAnim(::grpc::ServerContext* context, ::octaneapi::ApiItem_clearAnimRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearAnim1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearAnim1() {
      ::grpc::Service::MarkMethodAsync(60);
    }
    ~WithAsyncMethod_clearAnim1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnim1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAnim1(::grpc::ServerContext* context, ::octaneapi::ApiItem_clearAnim1Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(60, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_clearAnimIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_clearAnimIx() {
      ::grpc::Service::MarkMethodAsync(61);
    }
    ~WithAsyncMethod_clearAnimIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnimIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAnimIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_clearAnimIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(61, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isAnimated : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isAnimated() {
      ::grpc::Service::MarkMethodAsync(62);
    }
    ~WithAsyncMethod_isAnimated() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisAnimated(::grpc::ServerContext* context, ::octaneapi::ApiItem_isAnimatedRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isAnimatedResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(62, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isAnimated1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isAnimated1() {
      ::grpc::Service::MarkMethodAsync(63);
    }
    ~WithAsyncMethod_isAnimated1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimated1Request* /*request*/, ::octaneapi::ApiItem_isAnimated1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisAnimated1(::grpc::ServerContext* context, ::octaneapi::ApiItem_isAnimated1Request* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isAnimated1Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(63, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_isAnimatedIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isAnimatedIx() {
      ::grpc::Service::MarkMethodAsync(64);
    }
    ~WithAsyncMethod_isAnimatedIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimatedIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedIxRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisAnimatedIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_isAnimatedIxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(64, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_evaluate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_evaluate() {
      ::grpc::Service::MarkMethodAsync(65);
    }
    ~WithAsyncMethod_evaluate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status evaluate(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_evaluateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestevaluate(::grpc::ServerContext* context, ::octaneapi::ApiItem_evaluateRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(65, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_expand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_expand() {
      ::grpc::Service::MarkMethodAsync(66);
    }
    ~WithAsyncMethod_expand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expand(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestexpand(::grpc::ServerContext* context, ::octaneapi::ApiItem_expandRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(66, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_expandOutOfPin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_expandOutOfPin() {
      ::grpc::Service::MarkMethodAsync(67);
    }
    ~WithAsyncMethod_expandOutOfPin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expandOutOfPin(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandOutOfPinRequest* /*request*/, ::octaneapi::ApiItem_expandOutOfPinResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestexpandOutOfPin(::grpc::ServerContext* context, ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_expandOutOfPinResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(67, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_collapse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_collapse() {
      ::grpc::Service::MarkMethodAsync(68);
    }
    ~WithAsyncMethod_collapse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collapse(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collapseRequest* /*request*/, ::octaneapi::ApiItem_collapseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcollapse(::grpc::ServerContext* context, ::octaneapi::ApiItem_collapseRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_collapseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(68, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_dumpAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_dumpAttributes() {
      ::grpc::Service::MarkMethodAsync(69);
    }
    ~WithAsyncMethod_dumpAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dumpAttributes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_dumpAttributesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdumpAttributes(::grpc::ServerContext* context, ::octaneapi::ApiItem_dumpAttributesRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(69, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getByAttrID() {
      ::grpc::Service::MarkMethodAsync(70);
    }
    ~WithAsyncMethod_getByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIDRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetByAttrID(::grpc::ServerContext* context, ::octaneapi::ApiItem_getValueByIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(70, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getByName() {
      ::grpc::Service::MarkMethodAsync(71);
    }
    ~WithAsyncMethod_getByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByNameRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetByName(::grpc::ServerContext* context, ::octaneapi::ApiItem_getValueByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(71, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getByIx() {
      ::grpc::Service::MarkMethodAsync(72);
    }
    ~WithAsyncMethod_getByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIxRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetByIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_getValueByIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(72, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getArrayByAttrID() {
      ::grpc::Service::MarkMethodAsync(73);
    }
    ~WithAsyncMethod_getArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetArrayByAttrID(::grpc::ServerContext* context, ::octaneapi::ApiItem_getArrayByIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(73, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getArrayByName() {
      ::grpc::Service::MarkMethodAsync(74);
    }
    ~WithAsyncMethod_getArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetArrayByName(::grpc::ServerContext* context, ::octaneapi::ApiItem_getArrayByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(74, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getArrayByIx() {
      ::grpc::Service::MarkMethodAsync(75);
    }
    ~WithAsyncMethod_getArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetArrayByIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_getArrayByIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(75, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setByAttrID() {
      ::grpc::Service::MarkMethodAsync(76);
    }
    ~WithAsyncMethod_setByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIDRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetByAttrID(::grpc::ServerContext* context, ::octaneapi::ApiItem_setValueByIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(76, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setByName() {
      ::grpc::Service::MarkMethodAsync(77);
    }
    ~WithAsyncMethod_setByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByNameRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetByName(::grpc::ServerContext* context, ::octaneapi::ApiItem_setValueByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(77, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setByIx() {
      ::grpc::Service::MarkMethodAsync(78);
    }
    ~WithAsyncMethod_setByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIxRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetByIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_setValueByIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(78, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setArrayByName() {
      ::grpc::Service::MarkMethodAsync(79);
    }
    ~WithAsyncMethod_setArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetArrayByName(::grpc::ServerContext* context, ::octaneapi::ApiItem_setArrayByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(79, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setArrayByAttrID() {
      ::grpc::Service::MarkMethodAsync(80);
    }
    ~WithAsyncMethod_setArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetArrayByAttrID(::grpc::ServerContext* context, ::octaneapi::ApiItem_setArrayByIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(80, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setArrayByIx() {
      ::grpc::Service::MarkMethodAsync(81);
    }
    ~WithAsyncMethod_setArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetArrayByIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_setArrayByIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(81, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getAnimByAttr() {
      ::grpc::Service::MarkMethodAsync(82);
    }
    ~WithAsyncMethod_getAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAnimByAttr(::grpc::ServerContext* context, ::octaneapi::ApiItem_getAnimByIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getAnimArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(82, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getAnimByName() {
      ::grpc::Service::MarkMethodAsync(83);
    }
    ~WithAsyncMethod_getAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAnimByName(::grpc::ServerContext* context, ::octaneapi::ApiItem_getAnimByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getAnimArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(83, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getAnimByIx() {
      ::grpc::Service::MarkMethodAsync(84);
    }
    ~WithAsyncMethod_getAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAnimByIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_getAnimByIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_getAnimArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(84, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setAnimByAttr() {
      ::grpc::Service::MarkMethodAsync(85);
    }
    ~WithAsyncMethod_setAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAnimByAttr(::grpc::ServerContext* context, ::octaneapi::ApiItem_setAnimByIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setAnimArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(85, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setAnimByName() {
      ::grpc::Service::MarkMethodAsync(86);
    }
    ~WithAsyncMethod_setAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAnimByName(::grpc::ServerContext* context, ::octaneapi::ApiItem_setAnimByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setAnimArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(86, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_setAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_setAnimByIx() {
      ::grpc::Service::MarkMethodAsync(87);
    }
    ~WithAsyncMethod_setAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAnimByIx(::grpc::ServerContext* context, ::octaneapi::ApiItem_setAnimByIxRequest* request, ::grpc::ServerAsyncResponseWriter< ::octaneapi::ApiItem_setAnimArrayResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(87, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_destroy<WithAsyncMethod_name<WithAsyncMethod_setName<WithAsyncMethod_position<WithAsyncMethod_setPosition<WithAsyncMethod_setUIOperationFlags<WithAsyncMethod_uiOperationFlags<WithAsyncMethod_select<WithAsyncMethod_time<WithAsyncMethod_outType<WithAsyncMethod_persistentId<WithAsyncMethod_uniqueId<WithAsyncMethod_collectItemTree<WithAsyncMethod_deleteUnconnectedItems<WithAsyncMethod_switchToFileData<WithAsyncMethod_version<WithAsyncMethod_isGraph<WithAsyncMethod_isNode<WithAsyncMethod_isLinker<WithAsyncMethod_isInputLinker<WithAsyncMethod_isOutputLinker<WithAsyncMethod_toGraph<WithAsyncMethod_toNode<WithAsyncMethod_toGraph1<WithAsyncMethod_toNode1<WithAsyncMethod_hasOwner<WithAsyncMethod_graphOwned<WithAsyncMethod_pinOwned<WithAsyncMethod_graphOwner<WithAsyncMethod_pinOwner<WithAsyncMethod_rootGraph<WithAsyncMethod_rootGraph1<WithAsyncMethod_attrCount<WithAsyncMethod_hasAttr<WithAsyncMethod_hasAttr1<WithAsyncMethod_findAttr<WithAsyncMethod_findAttr1<WithAsyncMethod_attrId<WithAsyncMethod_attrIdIx<WithAsyncMethod_attrName<WithAsyncMethod_attrNameIx<WithAsyncMethod_attrType<WithAsyncMethod_attrType1<WithAsyncMethod_attrTypeIx<WithAsyncMethod_attrInfo<WithAsyncMethod_attrInfo1<WithAsyncMethod_attrInfoIx<WithAsyncMethod_attrAreDirty<WithAsyncMethod_isDirtyAttr<WithAsyncMethod_isDirtyAttr1<WithAsyncMethod_isDirtyAttrIx<WithAsyncMethod_copyAttrFrom<WithAsyncMethod_copyAttrFrom1<WithAsyncMethod_copyAttrFromIx<WithAsyncMethod_copyAttrFrom2<WithAsyncMethod_clearAllAttr<WithAsyncMethod_clearAttr<WithAsyncMethod_clearAttr1<WithAsyncMethod_clearAttrIx<WithAsyncMethod_clearAnim<WithAsyncMethod_clearAnim1<WithAsyncMethod_clearAnimIx<WithAsyncMethod_isAnimated<WithAsyncMethod_isAnimated1<WithAsyncMethod_isAnimatedIx<WithAsyncMethod_evaluate<WithAsyncMethod_expand<WithAsyncMethod_expandOutOfPin<WithAsyncMethod_collapse<WithAsyncMethod_dumpAttributes<WithAsyncMethod_getByAttrID<WithAsyncMethod_getByName<WithAsyncMethod_getByIx<WithAsyncMethod_getArrayByAttrID<WithAsyncMethod_getArrayByName<WithAsyncMethod_getArrayByIx<WithAsyncMethod_setByAttrID<WithAsyncMethod_setByName<WithAsyncMethod_setByIx<WithAsyncMethod_setArrayByName<WithAsyncMethod_setArrayByAttrID<WithAsyncMethod_setArrayByIx<WithAsyncMethod_getAnimByAttr<WithAsyncMethod_getAnimByName<WithAsyncMethod_getAnimByIx<WithAsyncMethod_setAnimByAttr<WithAsyncMethod_setAnimByName<WithAsyncMethod_setAnimByIx<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_destroyRequest* request, ::google::protobuf::Empty* response) { return this->destroy(context, request, response); }));}
    void SetMessageAllocatorFor_destroy(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_name() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_nameRequest* request, ::octaneapi::ApiItem_nameResponse* response) { return this->name(context, request, response); }));}
    void SetMessageAllocatorFor_name(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_nameRequest* /*request*/, ::octaneapi::ApiItem_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* name(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_nameRequest* /*request*/, ::octaneapi::ApiItem_nameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setName() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setNameRequest* request, ::google::protobuf::Empty* response) { return this->setName(context, request, response); }));}
    void SetMessageAllocatorFor_setName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setNameRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setNameRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_position : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_position() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_positionRequest* request, ::octaneapi::ApiItem_positionResponse* response) { return this->position(context, request, response); }));}
    void SetMessageAllocatorFor_position(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_position() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status position(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_positionRequest* /*request*/, ::octaneapi::ApiItem_positionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* position(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_positionRequest* /*request*/, ::octaneapi::ApiItem_positionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setPosition() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setPositionRequest* request, ::google::protobuf::Empty* response) { return this->setPosition(context, request, response); }));}
    void SetMessageAllocatorFor_setPosition(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setPosition(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setPositionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setPositionRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setUIOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setUIOperationFlags() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* request, ::google::protobuf::Empty* response) { return this->setUIOperationFlags(context, request, response); }));}
    void SetMessageAllocatorFor_setUIOperationFlags(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setUIOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setUIOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setUIOperationFlags(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_uiOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_uiOperationFlags() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_uiOperationFlagsRequest* request, ::octaneapi::ApiItem_uiOperationFlagsResponse* response) { return this->uiOperationFlags(context, request, response); }));}
    void SetMessageAllocatorFor_uiOperationFlags(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_uiOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uiOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uiOperationFlagsRequest* /*request*/, ::octaneapi::ApiItem_uiOperationFlagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* uiOperationFlags(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_uiOperationFlagsRequest* /*request*/, ::octaneapi::ApiItem_uiOperationFlagsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_select : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_select() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_selectRequest* request, ::google::protobuf::Empty* response) { return this->select(context, request, response); }));}
    void SetMessageAllocatorFor_select(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_select() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status select(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_selectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* select(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_selectRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_time : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_time() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_timeRequest* request, ::octaneapi::ApiItem_timeResponse* response) { return this->time(context, request, response); }));}
    void SetMessageAllocatorFor_time(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_time() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status time(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_timeRequest* /*request*/, ::octaneapi::ApiItem_timeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* time(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_timeRequest* /*request*/, ::octaneapi::ApiItem_timeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_outType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_outType() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_outTypeRequest* request, ::octaneapi::ApiItem_outTypeResponse* response) { return this->outType(context, request, response); }));}
    void SetMessageAllocatorFor_outType(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_outType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status outType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_outTypeRequest* /*request*/, ::octaneapi::ApiItem_outTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* outType(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_outTypeRequest* /*request*/, ::octaneapi::ApiItem_outTypeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_persistentId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_persistentId() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_persistentIdRequest* request, ::octaneapi::ApiItem_persistentIdResponse* response) { return this->persistentId(context, request, response); }));}
    void SetMessageAllocatorFor_persistentId(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_persistentId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status persistentId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_persistentIdRequest* /*request*/, ::octaneapi::ApiItem_persistentIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* persistentId(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_persistentIdRequest* /*request*/, ::octaneapi::ApiItem_persistentIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_uniqueId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_uniqueId() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_uniqueIdRequest* request, ::octaneapi::ApiItem_uniqueIdResponse* response) { return this->uniqueId(context, request, response); }));}
    void SetMessageAllocatorFor_uniqueId(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_uniqueId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uniqueId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uniqueIdRequest* /*request*/, ::octaneapi::ApiItem_uniqueIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* uniqueId(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_uniqueIdRequest* /*request*/, ::octaneapi::ApiItem_uniqueIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_collectItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_collectItemTree() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_collectItemTreeRequest* request, ::octaneapi::ApiItem_collectItemTreeResponse* response) { return this->collectItemTree(context, request, response); }));}
    void SetMessageAllocatorFor_collectItemTree(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_collectItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collectItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collectItemTreeRequest* /*request*/, ::octaneapi::ApiItem_collectItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* collectItemTree(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_collectItemTreeRequest* /*request*/, ::octaneapi::ApiItem_collectItemTreeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_deleteUnconnectedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_deleteUnconnectedItems() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* request, ::google::protobuf::Empty* response) { return this->deleteUnconnectedItems(context, request, response); }));}
    void SetMessageAllocatorFor_deleteUnconnectedItems(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_deleteUnconnectedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteUnconnectedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deleteUnconnectedItems(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_switchToFileData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_switchToFileData() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_switchToFileDataRequest* request, ::google::protobuf::Empty* response) { return this->switchToFileData(context, request, response); }));}
    void SetMessageAllocatorFor_switchToFileData(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_switchToFileData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status switchToFileData(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_switchToFileDataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* switchToFileData(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_switchToFileDataRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_version() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_versionRequest* request, ::octaneapi::ApiItem_versionResponse* response) { return this->version(context, request, response); }));}
    void SetMessageAllocatorFor_version(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status version(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_versionRequest* /*request*/, ::octaneapi::ApiItem_versionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* version(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_versionRequest* /*request*/, ::octaneapi::ApiItem_versionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isGraph() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isGraphRequest* request, ::octaneapi::ApiItem_isGraphResponse* response) { return this->isGraph(context, request, response); }));}
    void SetMessageAllocatorFor_isGraph(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isGraphRequest* /*request*/, ::octaneapi::ApiItem_isGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isGraphRequest* /*request*/, ::octaneapi::ApiItem_isGraphResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isNode() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isNodeRequest* request, ::octaneapi::ApiItem_isNodeResponse* response) { return this->isNode(context, request, response); }));}
    void SetMessageAllocatorFor_isNode(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isNodeRequest* /*request*/, ::octaneapi::ApiItem_isNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isNode(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isNodeRequest* /*request*/, ::octaneapi::ApiItem_isNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isLinker() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isLinkerRequest* request, ::octaneapi::ApiItem_isLinkerResponse* response) { return this->isLinker(context, request, response); }));}
    void SetMessageAllocatorFor_isLinker(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isLinkerRequest* /*request*/, ::octaneapi::ApiItem_isLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isLinker(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isLinkerRequest* /*request*/, ::octaneapi::ApiItem_isLinkerResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isInputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isInputLinker() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isInputLinkerRequest* request, ::octaneapi::ApiItem_isInputLinkerResponse* response) { return this->isInputLinker(context, request, response); }));}
    void SetMessageAllocatorFor_isInputLinker(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isInputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isInputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isInputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isInputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isInputLinker(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isInputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isInputLinkerResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isOutputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isOutputLinker() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isOutputLinkerRequest* request, ::octaneapi::ApiItem_isOutputLinkerResponse* response) { return this->isOutputLinker(context, request, response); }));}
    void SetMessageAllocatorFor_isOutputLinker(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isOutputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isOutputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isOutputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isOutputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isOutputLinker(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isOutputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isOutputLinkerResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_toGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_toGraph() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_toGraphRequest* request, ::octaneapi::ApiItem_toGraphResponse* response) { return this->toGraph(context, request, response); }));}
    void SetMessageAllocatorFor_toGraph(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_toGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraphRequest* /*request*/, ::octaneapi::ApiItem_toGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_toGraphRequest* /*request*/, ::octaneapi::ApiItem_toGraphResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_toNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_toNode() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_toNodeRequest* request, ::octaneapi::ApiItem_toNodeResponse* response) { return this->toNode(context, request, response); }));}
    void SetMessageAllocatorFor_toNode(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_toNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNodeRequest* /*request*/, ::octaneapi::ApiItem_toNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toNode(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_toNodeRequest* /*request*/, ::octaneapi::ApiItem_toNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_toGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_toGraph1() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_toGraph1Request* request, ::octaneapi::ApiItem_toGraph1Response* response) { return this->toGraph1(context, request, response); }));}
    void SetMessageAllocatorFor_toGraph1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_toGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraph1Request* /*request*/, ::octaneapi::ApiItem_toGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toGraph1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_toGraph1Request* /*request*/, ::octaneapi::ApiItem_toGraph1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_toNode1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_toNode1() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_toNode1Request* request, ::octaneapi::ApiItem_toNode1Response* response) { return this->toNode1(context, request, response); }));}
    void SetMessageAllocatorFor_toNode1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_toNode1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNode1Request* /*request*/, ::octaneapi::ApiItem_toNode1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toNode1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_toNode1Request* /*request*/, ::octaneapi::ApiItem_toNode1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_hasOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_hasOwner() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_hasOwnerRequest* request, ::octaneapi::ApiItem_hasOwnerResponse* response) { return this->hasOwner(context, request, response); }));}
    void SetMessageAllocatorFor_hasOwner(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_hasOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasOwnerRequest* /*request*/, ::octaneapi::ApiItem_hasOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasOwner(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_hasOwnerRequest* /*request*/, ::octaneapi::ApiItem_hasOwnerResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_graphOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_graphOwned() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_graphOwnedRequest* request, ::octaneapi::ApiItem_graphOwnedResponse* response) { return this->graphOwned(context, request, response); }));}
    void SetMessageAllocatorFor_graphOwned(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_graphOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnedRequest* /*request*/, ::octaneapi::ApiItem_graphOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* graphOwned(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnedRequest* /*request*/, ::octaneapi::ApiItem_graphOwnedResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_pinOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_pinOwned() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_pinOwnedRequest* request, ::octaneapi::ApiItem_pinOwnedResponse* response) { return this->pinOwned(context, request, response); }));}
    void SetMessageAllocatorFor_pinOwned(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_pinOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnedRequest* /*request*/, ::octaneapi::ApiItem_pinOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* pinOwned(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnedRequest* /*request*/, ::octaneapi::ApiItem_pinOwnedResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_graphOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_graphOwner() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_graphOwnerRequest* request, ::octaneapi::ApiItem_graphOwnerResponse* response) { return this->graphOwner(context, request, response); }));}
    void SetMessageAllocatorFor_graphOwner(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_graphOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnerRequest* /*request*/, ::octaneapi::ApiItem_graphOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* graphOwner(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnerRequest* /*request*/, ::octaneapi::ApiItem_graphOwnerResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_pinOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_pinOwner() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_pinOwnerRequest* request, ::octaneapi::ApiItem_pinOwnerResponse* response) { return this->pinOwner(context, request, response); }));}
    void SetMessageAllocatorFor_pinOwner(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_pinOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnerRequest* /*request*/, ::octaneapi::ApiItem_pinOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* pinOwner(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnerRequest* /*request*/, ::octaneapi::ApiItem_pinOwnerResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_rootGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_rootGraph() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_rootGraphRequest* request, ::octaneapi::ApiItem_rootGraphResponse* response) { return this->rootGraph(context, request, response); }));}
    void SetMessageAllocatorFor_rootGraph(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_rootGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraphRequest* /*request*/, ::octaneapi::ApiItem_rootGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* rootGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraphRequest* /*request*/, ::octaneapi::ApiItem_rootGraphResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_rootGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_rootGraph1() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_rootGraph1Request* request, ::octaneapi::ApiItem_rootGraph1Response* response) { return this->rootGraph1(context, request, response); }));}
    void SetMessageAllocatorFor_rootGraph1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_rootGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraph1Request* /*request*/, ::octaneapi::ApiItem_rootGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* rootGraph1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraph1Request* /*request*/, ::octaneapi::ApiItem_rootGraph1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrCount() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrCountRequest* request, ::octaneapi::ApiItem_attrCountResponse* response) { return this->attrCount(context, request, response); }));}
    void SetMessageAllocatorFor_attrCount(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrCountRequest* /*request*/, ::octaneapi::ApiItem_attrCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrCount(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrCountRequest* /*request*/, ::octaneapi::ApiItem_attrCountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_hasAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_hasAttr() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_hasAttrRequest* request, ::octaneapi::ApiItem_hasAttrResponse* response) { return this->hasAttr(context, request, response); }));}
    void SetMessageAllocatorFor_hasAttr(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_hasAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttrRequest* /*request*/, ::octaneapi::ApiItem_hasAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttrRequest* /*request*/, ::octaneapi::ApiItem_hasAttrResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_hasAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_hasAttr1() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_hasAttr1Request* request, ::octaneapi::ApiItem_hasAttr1Response* response) { return this->hasAttr1(context, request, response); }));}
    void SetMessageAllocatorFor_hasAttr1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_hasAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttr1Request* /*request*/, ::octaneapi::ApiItem_hasAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttr1Request* /*request*/, ::octaneapi::ApiItem_hasAttr1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_findAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_findAttr() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_findAttrRequest* request, ::octaneapi::ApiItem_findAttrResponse* response) { return this->findAttr(context, request, response); }));}
    void SetMessageAllocatorFor_findAttr(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_findAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttrRequest* /*request*/, ::octaneapi::ApiItem_findAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_findAttrRequest* /*request*/, ::octaneapi::ApiItem_findAttrResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_findAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_findAttr1() {
      ::grpc::Service::MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_findAttr1Request* request, ::octaneapi::ApiItem_findAttr1Response* response) { return this->findAttr1(context, request, response); }));}
    void SetMessageAllocatorFor_findAttr1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_findAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttr1Request* /*request*/, ::octaneapi::ApiItem_findAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_findAttr1Request* /*request*/, ::octaneapi::ApiItem_findAttr1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrId() {
      ::grpc::Service::MarkMethodCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrIdRequest* request, ::octaneapi::ApiItem_attrIdResponse* response) { return this->attrId(context, request, response); }));}
    void SetMessageAllocatorFor_attrId(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdRequest* /*request*/, ::octaneapi::ApiItem_attrIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrId(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdRequest* /*request*/, ::octaneapi::ApiItem_attrIdResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrIdIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrIdIx() {
      ::grpc::Service::MarkMethodCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrIdIxRequest* request, ::octaneapi::ApiItem_attrIdIxResponse* response) { return this->attrIdIx(context, request, response); }));}
    void SetMessageAllocatorFor_attrIdIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrIdIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrIdIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdIxRequest* /*request*/, ::octaneapi::ApiItem_attrIdIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrIdIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdIxRequest* /*request*/, ::octaneapi::ApiItem_attrIdIxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrName() {
      ::grpc::Service::MarkMethodCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrNameRequest* request, ::octaneapi::ApiItem_attrNameResponse* response) { return this->attrName(context, request, response); }));}
    void SetMessageAllocatorFor_attrName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(39);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameRequest* /*request*/, ::octaneapi::ApiItem_attrNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameRequest* /*request*/, ::octaneapi::ApiItem_attrNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrNameIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrNameIx() {
      ::grpc::Service::MarkMethodCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrNameIxRequest* request, ::octaneapi::ApiItem_attrNameIxResponse* response) { return this->attrNameIx(context, request, response); }));}
    void SetMessageAllocatorFor_attrNameIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrNameIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrNameIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameIxRequest* /*request*/, ::octaneapi::ApiItem_attrNameIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrNameIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameIxRequest* /*request*/, ::octaneapi::ApiItem_attrNameIxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrType() {
      ::grpc::Service::MarkMethodCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrTypeRequest* request, ::octaneapi::ApiItem_attrTypeResponse* response) { return this->attrType(context, request, response); }));}
    void SetMessageAllocatorFor_attrType(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeRequest* /*request*/, ::octaneapi::ApiItem_attrTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrType(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeRequest* /*request*/, ::octaneapi::ApiItem_attrTypeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrType1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrType1() {
      ::grpc::Service::MarkMethodCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrType1Request* request, ::octaneapi::ApiItem_attrType1Response* response) { return this->attrType1(context, request, response); }));}
    void SetMessageAllocatorFor_attrType1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(42);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrType1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrType1Request* /*request*/, ::octaneapi::ApiItem_attrType1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrType1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrType1Request* /*request*/, ::octaneapi::ApiItem_attrType1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrTypeIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrTypeIx() {
      ::grpc::Service::MarkMethodCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrTypeIxRequest* request, ::octaneapi::ApiItem_attrTypeIxResponse* response) { return this->attrTypeIx(context, request, response); }));}
    void SetMessageAllocatorFor_attrTypeIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(43);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrTypeIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrTypeIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeIxRequest* /*request*/, ::octaneapi::ApiItem_attrTypeIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrTypeIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeIxRequest* /*request*/, ::octaneapi::ApiItem_attrTypeIxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrInfo() {
      ::grpc::Service::MarkMethodCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrInfoRequest* request, ::octaneapi::ApiItem_attrInfoResponse* response) { return this->attrInfo(context, request, response); }));}
    void SetMessageAllocatorFor_attrInfo(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(44);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoRequest* /*request*/, ::octaneapi::ApiItem_attrInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoRequest* /*request*/, ::octaneapi::ApiItem_attrInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrInfo1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrInfo1() {
      ::grpc::Service::MarkMethodCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrInfo1Request* request, ::octaneapi::ApiItem_attrInfo1Response* response) { return this->attrInfo1(context, request, response); }));}
    void SetMessageAllocatorFor_attrInfo1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(45);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrInfo1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfo1Request* /*request*/, ::octaneapi::ApiItem_attrInfo1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrInfo1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfo1Request* /*request*/, ::octaneapi::ApiItem_attrInfo1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrInfoIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrInfoIx() {
      ::grpc::Service::MarkMethodCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrInfoIxRequest* request, ::octaneapi::ApiItem_attrInfoIxResponse* response) { return this->attrInfoIx(context, request, response); }));}
    void SetMessageAllocatorFor_attrInfoIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(46);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrInfoIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfoIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoIxRequest* /*request*/, ::octaneapi::ApiItem_attrInfoIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrInfoIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoIxRequest* /*request*/, ::octaneapi::ApiItem_attrInfoIxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_attrAreDirty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_attrAreDirty() {
      ::grpc::Service::MarkMethodCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_attrAreDirtyRequest* request, ::octaneapi::ApiItem_attrAreDirtyResponse* response) { return this->attrAreDirty(context, request, response); }));}
    void SetMessageAllocatorFor_attrAreDirty(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(47);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_attrAreDirty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrAreDirty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrAreDirtyRequest* /*request*/, ::octaneapi::ApiItem_attrAreDirtyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrAreDirty(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_attrAreDirtyRequest* /*request*/, ::octaneapi::ApiItem_attrAreDirtyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isDirtyAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isDirtyAttr() {
      ::grpc::Service::MarkMethodCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isDirtyAttrRequest* request, ::octaneapi::ApiItem_isDirtyAttrResponse* response) { return this->isDirtyAttr(context, request, response); }));}
    void SetMessageAllocatorFor_isDirtyAttr(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(48);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isDirtyAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isDirtyAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isDirtyAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isDirtyAttr1() {
      ::grpc::Service::MarkMethodCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isDirtyAttr1Request* request, ::octaneapi::ApiItem_isDirtyAttr1Response* response) { return this->isDirtyAttr1(context, request, response); }));}
    void SetMessageAllocatorFor_isDirtyAttr1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(49);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isDirtyAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttr1Request* /*request*/, ::octaneapi::ApiItem_isDirtyAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isDirtyAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttr1Request* /*request*/, ::octaneapi::ApiItem_isDirtyAttr1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isDirtyAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isDirtyAttrIx() {
      ::grpc::Service::MarkMethodCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* request, ::octaneapi::ApiItem_isDirtyAttrIxResponse* response) { return this->isDirtyAttrIx(context, request, response); }));}
    void SetMessageAllocatorFor_isDirtyAttrIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(50);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isDirtyAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isDirtyAttrIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrIxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyAttrFrom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyAttrFrom() {
      ::grpc::Service::MarkMethodCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_copyAttrFromRequest* request, ::google::protobuf::Empty* response) { return this->copyAttrFrom(context, request, response); }));}
    void SetMessageAllocatorFor_copyAttrFrom(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(51);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyAttrFrom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFrom(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyAttrFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyAttrFrom1() {
      ::grpc::Service::MarkMethodCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_copyAttrFrom1Request* request, ::google::protobuf::Empty* response) { return this->copyAttrFrom1(context, request, response); }));}
    void SetMessageAllocatorFor_copyAttrFrom1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(52);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyAttrFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFrom1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom1Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyAttrFromIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyAttrFromIx() {
      ::grpc::Service::MarkMethodCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_copyAttrFromIxRequest* request, ::google::protobuf::Empty* response) { return this->copyAttrFromIx(context, request, response); }));}
    void SetMessageAllocatorFor_copyAttrFromIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(53);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyAttrFromIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFromIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFromIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_copyAttrFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_copyAttrFrom2() {
      ::grpc::Service::MarkMethodCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_copyAttrFrom2Request* request, ::google::protobuf::Empty* response) { return this->copyAttrFrom2(context, request, response); }));}
    void SetMessageAllocatorFor_copyAttrFrom2(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(54);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_copyAttrFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFrom2(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom2Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearAllAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearAllAttr() {
      ::grpc::Service::MarkMethodCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_clearAllAttrRequest* request, ::google::protobuf::Empty* response) { return this->clearAllAttr(context, request, response); }));}
    void SetMessageAllocatorFor_clearAllAttr(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(55);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearAllAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAllAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAllAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAllAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_clearAllAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearAttr() {
      ::grpc::Service::MarkMethodCallback(56,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_clearAttrRequest* request, ::google::protobuf::Empty* response) { return this->clearAttr(context, request, response); }));}
    void SetMessageAllocatorFor_clearAttr(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(56);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearAttr1() {
      ::grpc::Service::MarkMethodCallback(57,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_clearAttr1Request* request, ::google::protobuf::Empty* response) { return this->clearAttr1(context, request, response); }));}
    void SetMessageAllocatorFor_clearAttr1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(57);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttr1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttr1Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearAttrIx() {
      ::grpc::Service::MarkMethodCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_clearAttrIxRequest* request, ::google::protobuf::Empty* response) { return this->clearAttrIx(context, request, response); }));}
    void SetMessageAllocatorFor_clearAttrIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(58);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAttrIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearAnim : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearAnim() {
      ::grpc::Service::MarkMethodCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_clearAnimRequest* request, ::google::protobuf::Empty* response) { return this->clearAnim(context, request, response); }));}
    void SetMessageAllocatorFor_clearAnim(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(59);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearAnim() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAnim(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearAnim1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearAnim1() {
      ::grpc::Service::MarkMethodCallback(60,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_clearAnim1Request* request, ::google::protobuf::Empty* response) { return this->clearAnim1(context, request, response); }));}
    void SetMessageAllocatorFor_clearAnim1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(60);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearAnim1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnim1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAnim1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnim1Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_clearAnimIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_clearAnimIx() {
      ::grpc::Service::MarkMethodCallback(61,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_clearAnimIxRequest* request, ::google::protobuf::Empty* response) { return this->clearAnimIx(context, request, response); }));}
    void SetMessageAllocatorFor_clearAnimIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(61);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_clearAnimIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnimIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAnimIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isAnimated : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isAnimated() {
      ::grpc::Service::MarkMethodCallback(62,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isAnimatedRequest* request, ::octaneapi::ApiItem_isAnimatedResponse* response) { return this->isAnimated(context, request, response); }));}
    void SetMessageAllocatorFor_isAnimated(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(62);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isAnimated() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isAnimated(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isAnimated1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isAnimated1() {
      ::grpc::Service::MarkMethodCallback(63,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isAnimated1Request* request, ::octaneapi::ApiItem_isAnimated1Response* response) { return this->isAnimated1(context, request, response); }));}
    void SetMessageAllocatorFor_isAnimated1(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(63);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isAnimated1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimated1Request* /*request*/, ::octaneapi::ApiItem_isAnimated1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isAnimated1(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimated1Request* /*request*/, ::octaneapi::ApiItem_isAnimated1Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_isAnimatedIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isAnimatedIx() {
      ::grpc::Service::MarkMethodCallback(64,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_isAnimatedIxRequest* request, ::octaneapi::ApiItem_isAnimatedIxResponse* response) { return this->isAnimatedIx(context, request, response); }));}
    void SetMessageAllocatorFor_isAnimatedIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(64);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isAnimatedIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimatedIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedIxRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isAnimatedIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedIxRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedIxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_evaluate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_evaluate() {
      ::grpc::Service::MarkMethodCallback(65,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_evaluateRequest* request, ::google::protobuf::Empty* response) { return this->evaluate(context, request, response); }));}
    void SetMessageAllocatorFor_evaluate(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(65);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_evaluate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status evaluate(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_evaluateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* evaluate(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_evaluateRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_expand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_expand() {
      ::grpc::Service::MarkMethodCallback(66,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_expandRequest* request, ::google::protobuf::Empty* response) { return this->expand(context, request, response); }));}
    void SetMessageAllocatorFor_expand(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(66);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_expand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expand(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* expand(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_expandRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_expandOutOfPin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_expandOutOfPin() {
      ::grpc::Service::MarkMethodCallback(67,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_expandOutOfPinRequest* request, ::octaneapi::ApiItem_expandOutOfPinResponse* response) { return this->expandOutOfPin(context, request, response); }));}
    void SetMessageAllocatorFor_expandOutOfPin(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(67);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_expandOutOfPin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expandOutOfPin(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandOutOfPinRequest* /*request*/, ::octaneapi::ApiItem_expandOutOfPinResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* expandOutOfPin(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_expandOutOfPinRequest* /*request*/, ::octaneapi::ApiItem_expandOutOfPinResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_collapse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_collapse() {
      ::grpc::Service::MarkMethodCallback(68,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_collapseRequest* request, ::octaneapi::ApiItem_collapseResponse* response) { return this->collapse(context, request, response); }));}
    void SetMessageAllocatorFor_collapse(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(68);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_collapse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collapse(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collapseRequest* /*request*/, ::octaneapi::ApiItem_collapseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* collapse(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_collapseRequest* /*request*/, ::octaneapi::ApiItem_collapseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_dumpAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_dumpAttributes() {
      ::grpc::Service::MarkMethodCallback(69,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_dumpAttributesRequest* request, ::google::protobuf::Empty* response) { return this->dumpAttributes(context, request, response); }));}
    void SetMessageAllocatorFor_dumpAttributes(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(69);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_dumpAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dumpAttributes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_dumpAttributesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* dumpAttributes(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_dumpAttributesRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getByAttrID() {
      ::grpc::Service::MarkMethodCallback(70,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getValueByIDRequest* request, ::octaneapi::ApiItem_getValueResponse* response) { return this->getByAttrID(context, request, response); }));}
    void SetMessageAllocatorFor_getByAttrID(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(70);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIDRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIDRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getByName() {
      ::grpc::Service::MarkMethodCallback(71,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getValueByNameRequest* request, ::octaneapi::ApiItem_getValueResponse* response) { return this->getByName(context, request, response); }));}
    void SetMessageAllocatorFor_getByName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(71);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByNameRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getByName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByNameRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getByIx() {
      ::grpc::Service::MarkMethodCallback(72,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getValueByIxRequest* request, ::octaneapi::ApiItem_getValueResponse* response) { return this->getByIx(context, request, response); }));}
    void SetMessageAllocatorFor_getByIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(72);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIxRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIxRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getArrayByAttrID() {
      ::grpc::Service::MarkMethodCallback(73,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getArrayByIDRequest* request, ::octaneapi::ApiItem_getArrayResponse* response) { return this->getArrayByAttrID(context, request, response); }));}
    void SetMessageAllocatorFor_getArrayByAttrID(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(73);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getArrayByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getArrayByName() {
      ::grpc::Service::MarkMethodCallback(74,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getArrayByNameRequest* request, ::octaneapi::ApiItem_getArrayResponse* response) { return this->getArrayByName(context, request, response); }));}
    void SetMessageAllocatorFor_getArrayByName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(74);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getArrayByName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getArrayByIx() {
      ::grpc::Service::MarkMethodCallback(75,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getArrayByIxRequest* request, ::octaneapi::ApiItem_getArrayResponse* response) { return this->getArrayByIx(context, request, response); }));}
    void SetMessageAllocatorFor_getArrayByIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(75);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getArrayByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setByAttrID() {
      ::grpc::Service::MarkMethodCallback(76,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setValueByIDRequest* request, ::octaneapi::ApiItem_setValueResponse* response) { return this->setByAttrID(context, request, response); }));}
    void SetMessageAllocatorFor_setByAttrID(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(76);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIDRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIDRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setByName() {
      ::grpc::Service::MarkMethodCallback(77,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setValueByNameRequest* request, ::octaneapi::ApiItem_setValueResponse* response) { return this->setByName(context, request, response); }));}
    void SetMessageAllocatorFor_setByName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(77);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByNameRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setByName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByNameRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setByIx() {
      ::grpc::Service::MarkMethodCallback(78,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setValueByIxRequest* request, ::octaneapi::ApiItem_setValueResponse* response) { return this->setByIx(context, request, response); }));}
    void SetMessageAllocatorFor_setByIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(78);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIxRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIxRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setArrayByName() {
      ::grpc::Service::MarkMethodCallback(79,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setArrayByNameRequest* request, ::octaneapi::ApiItem_setArrayResponse* response) { return this->setArrayByName(context, request, response); }));}
    void SetMessageAllocatorFor_setArrayByName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(79);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setArrayByName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setArrayByAttrID() {
      ::grpc::Service::MarkMethodCallback(80,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setArrayByIDRequest* request, ::octaneapi::ApiItem_setArrayResponse* response) { return this->setArrayByAttrID(context, request, response); }));}
    void SetMessageAllocatorFor_setArrayByAttrID(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(80);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setArrayByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setArrayByIx() {
      ::grpc::Service::MarkMethodCallback(81,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setArrayByIxRequest* request, ::octaneapi::ApiItem_setArrayResponse* response) { return this->setArrayByIx(context, request, response); }));}
    void SetMessageAllocatorFor_setArrayByIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(81);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setArrayByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getAnimByAttr() {
      ::grpc::Service::MarkMethodCallback(82,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getAnimByIDRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response) { return this->getAnimByAttr(context, request, response); }));}
    void SetMessageAllocatorFor_getAnimByAttr(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(82);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAnimByAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getAnimByName() {
      ::grpc::Service::MarkMethodCallback(83,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getAnimByNameRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response) { return this->getAnimByName(context, request, response); }));}
    void SetMessageAllocatorFor_getAnimByName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(83);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAnimByName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getAnimByIx() {
      ::grpc::Service::MarkMethodCallback(84,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_getAnimByIxRequest* request, ::octaneapi::ApiItem_getAnimArrayResponse* response) { return this->getAnimByIx(context, request, response); }));}
    void SetMessageAllocatorFor_getAnimByIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(84);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAnimByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setAnimByAttr() {
      ::grpc::Service::MarkMethodCallback(85,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setAnimByIDRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response) { return this->setAnimByAttr(context, request, response); }));}
    void SetMessageAllocatorFor_setAnimByAttr(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(85);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setAnimByAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setAnimByName() {
      ::grpc::Service::MarkMethodCallback(86,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setAnimByNameRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response) { return this->setAnimByName(context, request, response); }));}
    void SetMessageAllocatorFor_setAnimByName(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(86);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setAnimByName(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_setAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_setAnimByIx() {
      ::grpc::Service::MarkMethodCallback(87,
          new ::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::octaneapi::ApiItem_setAnimByIxRequest* request, ::octaneapi::ApiItem_setAnimArrayResponse* response) { return this->setAnimByIx(context, request, response); }));}
    void SetMessageAllocatorFor_setAnimByIx(
        ::grpc::MessageAllocator< ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(87);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_setAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setAnimByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_destroy<WithCallbackMethod_name<WithCallbackMethod_setName<WithCallbackMethod_position<WithCallbackMethod_setPosition<WithCallbackMethod_setUIOperationFlags<WithCallbackMethod_uiOperationFlags<WithCallbackMethod_select<WithCallbackMethod_time<WithCallbackMethod_outType<WithCallbackMethod_persistentId<WithCallbackMethod_uniqueId<WithCallbackMethod_collectItemTree<WithCallbackMethod_deleteUnconnectedItems<WithCallbackMethod_switchToFileData<WithCallbackMethod_version<WithCallbackMethod_isGraph<WithCallbackMethod_isNode<WithCallbackMethod_isLinker<WithCallbackMethod_isInputLinker<WithCallbackMethod_isOutputLinker<WithCallbackMethod_toGraph<WithCallbackMethod_toNode<WithCallbackMethod_toGraph1<WithCallbackMethod_toNode1<WithCallbackMethod_hasOwner<WithCallbackMethod_graphOwned<WithCallbackMethod_pinOwned<WithCallbackMethod_graphOwner<WithCallbackMethod_pinOwner<WithCallbackMethod_rootGraph<WithCallbackMethod_rootGraph1<WithCallbackMethod_attrCount<WithCallbackMethod_hasAttr<WithCallbackMethod_hasAttr1<WithCallbackMethod_findAttr<WithCallbackMethod_findAttr1<WithCallbackMethod_attrId<WithCallbackMethod_attrIdIx<WithCallbackMethod_attrName<WithCallbackMethod_attrNameIx<WithCallbackMethod_attrType<WithCallbackMethod_attrType1<WithCallbackMethod_attrTypeIx<WithCallbackMethod_attrInfo<WithCallbackMethod_attrInfo1<WithCallbackMethod_attrInfoIx<WithCallbackMethod_attrAreDirty<WithCallbackMethod_isDirtyAttr<WithCallbackMethod_isDirtyAttr1<WithCallbackMethod_isDirtyAttrIx<WithCallbackMethod_copyAttrFrom<WithCallbackMethod_copyAttrFrom1<WithCallbackMethod_copyAttrFromIx<WithCallbackMethod_copyAttrFrom2<WithCallbackMethod_clearAllAttr<WithCallbackMethod_clearAttr<WithCallbackMethod_clearAttr1<WithCallbackMethod_clearAttrIx<WithCallbackMethod_clearAnim<WithCallbackMethod_clearAnim1<WithCallbackMethod_clearAnimIx<WithCallbackMethod_isAnimated<WithCallbackMethod_isAnimated1<WithCallbackMethod_isAnimatedIx<WithCallbackMethod_evaluate<WithCallbackMethod_expand<WithCallbackMethod_expandOutOfPin<WithCallbackMethod_collapse<WithCallbackMethod_dumpAttributes<WithCallbackMethod_getByAttrID<WithCallbackMethod_getByName<WithCallbackMethod_getByIx<WithCallbackMethod_getArrayByAttrID<WithCallbackMethod_getArrayByName<WithCallbackMethod_getArrayByIx<WithCallbackMethod_setByAttrID<WithCallbackMethod_setByName<WithCallbackMethod_setByIx<WithCallbackMethod_setArrayByName<WithCallbackMethod_setArrayByAttrID<WithCallbackMethod_setArrayByIx<WithCallbackMethod_getAnimByAttr<WithCallbackMethod_getAnimByName<WithCallbackMethod_getAnimByIx<WithCallbackMethod_setAnimByAttr<WithCallbackMethod_setAnimByName<WithCallbackMethod_setAnimByIx<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_destroy() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_name() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_nameRequest* /*request*/, ::octaneapi::ApiItem_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setName() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_setName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setNameRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_position : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_position() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_position() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status position(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_positionRequest* /*request*/, ::octaneapi::ApiItem_positionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setPosition() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_setPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setPosition(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setPositionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setUIOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setUIOperationFlags() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_setUIOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setUIOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_uiOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_uiOperationFlags() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_uiOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uiOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uiOperationFlagsRequest* /*request*/, ::octaneapi::ApiItem_uiOperationFlagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_select : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_select() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_select() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status select(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_selectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_time : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_time() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_time() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status time(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_timeRequest* /*request*/, ::octaneapi::ApiItem_timeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_outType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_outType() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_outType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status outType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_outTypeRequest* /*request*/, ::octaneapi::ApiItem_outTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_persistentId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_persistentId() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_persistentId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status persistentId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_persistentIdRequest* /*request*/, ::octaneapi::ApiItem_persistentIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_uniqueId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_uniqueId() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_uniqueId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uniqueId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uniqueIdRequest* /*request*/, ::octaneapi::ApiItem_uniqueIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_collectItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_collectItemTree() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_collectItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collectItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collectItemTreeRequest* /*request*/, ::octaneapi::ApiItem_collectItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_deleteUnconnectedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_deleteUnconnectedItems() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_deleteUnconnectedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteUnconnectedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_switchToFileData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_switchToFileData() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_switchToFileData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status switchToFileData(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_switchToFileDataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_version() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status version(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_versionRequest* /*request*/, ::octaneapi::ApiItem_versionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isGraph() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_isGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isGraphRequest* /*request*/, ::octaneapi::ApiItem_isGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isNode() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_isNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isNodeRequest* /*request*/, ::octaneapi::ApiItem_isNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isLinker() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_isLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isLinkerRequest* /*request*/, ::octaneapi::ApiItem_isLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isInputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isInputLinker() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_isInputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isInputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isInputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isInputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isOutputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isOutputLinker() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_isOutputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isOutputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isOutputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isOutputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_toGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_toGraph() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_toGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraphRequest* /*request*/, ::octaneapi::ApiItem_toGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_toNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_toNode() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_toNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNodeRequest* /*request*/, ::octaneapi::ApiItem_toNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_toGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_toGraph1() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_toGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraph1Request* /*request*/, ::octaneapi::ApiItem_toGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_toNode1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_toNode1() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_toNode1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNode1Request* /*request*/, ::octaneapi::ApiItem_toNode1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_hasOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_hasOwner() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_hasOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasOwnerRequest* /*request*/, ::octaneapi::ApiItem_hasOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_graphOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_graphOwned() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_graphOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnedRequest* /*request*/, ::octaneapi::ApiItem_graphOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_pinOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_pinOwned() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_pinOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnedRequest* /*request*/, ::octaneapi::ApiItem_pinOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_graphOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_graphOwner() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_graphOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnerRequest* /*request*/, ::octaneapi::ApiItem_graphOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_pinOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_pinOwner() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_pinOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnerRequest* /*request*/, ::octaneapi::ApiItem_pinOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_rootGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_rootGraph() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_rootGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraphRequest* /*request*/, ::octaneapi::ApiItem_rootGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_rootGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_rootGraph1() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_rootGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraph1Request* /*request*/, ::octaneapi::ApiItem_rootGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrCount() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_attrCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrCountRequest* /*request*/, ::octaneapi::ApiItem_attrCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_hasAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_hasAttr() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_hasAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttrRequest* /*request*/, ::octaneapi::ApiItem_hasAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_hasAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_hasAttr1() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_hasAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttr1Request* /*request*/, ::octaneapi::ApiItem_hasAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_findAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_findAttr() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_findAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttrRequest* /*request*/, ::octaneapi::ApiItem_findAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_findAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_findAttr1() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_findAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttr1Request* /*request*/, ::octaneapi::ApiItem_findAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrId() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_attrId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdRequest* /*request*/, ::octaneapi::ApiItem_attrIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrIdIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrIdIx() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_attrIdIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrIdIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdIxRequest* /*request*/, ::octaneapi::ApiItem_attrIdIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrName() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_attrName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameRequest* /*request*/, ::octaneapi::ApiItem_attrNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrNameIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrNameIx() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_attrNameIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrNameIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameIxRequest* /*request*/, ::octaneapi::ApiItem_attrNameIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrType() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_attrType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeRequest* /*request*/, ::octaneapi::ApiItem_attrTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrType1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrType1() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_attrType1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrType1Request* /*request*/, ::octaneapi::ApiItem_attrType1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrTypeIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrTypeIx() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_attrTypeIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrTypeIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeIxRequest* /*request*/, ::octaneapi::ApiItem_attrTypeIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrInfo() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_attrInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoRequest* /*request*/, ::octaneapi::ApiItem_attrInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrInfo1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrInfo1() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_attrInfo1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfo1Request* /*request*/, ::octaneapi::ApiItem_attrInfo1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrInfoIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrInfoIx() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_attrInfoIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfoIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoIxRequest* /*request*/, ::octaneapi::ApiItem_attrInfoIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_attrAreDirty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_attrAreDirty() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_attrAreDirty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrAreDirty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrAreDirtyRequest* /*request*/, ::octaneapi::ApiItem_attrAreDirtyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isDirtyAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isDirtyAttr() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_isDirtyAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isDirtyAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isDirtyAttr1() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_isDirtyAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttr1Request* /*request*/, ::octaneapi::ApiItem_isDirtyAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isDirtyAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isDirtyAttrIx() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_isDirtyAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyAttrFrom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyAttrFrom() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_copyAttrFrom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyAttrFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyAttrFrom1() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_copyAttrFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyAttrFromIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyAttrFromIx() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_copyAttrFromIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFromIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_copyAttrFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_copyAttrFrom2() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_copyAttrFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearAllAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearAllAttr() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_clearAllAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAllAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAllAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearAttr() {
      ::grpc::Service::MarkMethodGeneric(56);
    }
    ~WithGenericMethod_clearAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearAttr1() {
      ::grpc::Service::MarkMethodGeneric(57);
    }
    ~WithGenericMethod_clearAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttr1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearAttrIx() {
      ::grpc::Service::MarkMethodGeneric(58);
    }
    ~WithGenericMethod_clearAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearAnim : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearAnim() {
      ::grpc::Service::MarkMethodGeneric(59);
    }
    ~WithGenericMethod_clearAnim() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearAnim1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearAnim1() {
      ::grpc::Service::MarkMethodGeneric(60);
    }
    ~WithGenericMethod_clearAnim1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnim1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_clearAnimIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_clearAnimIx() {
      ::grpc::Service::MarkMethodGeneric(61);
    }
    ~WithGenericMethod_clearAnimIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnimIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isAnimated : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isAnimated() {
      ::grpc::Service::MarkMethodGeneric(62);
    }
    ~WithGenericMethod_isAnimated() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isAnimated1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isAnimated1() {
      ::grpc::Service::MarkMethodGeneric(63);
    }
    ~WithGenericMethod_isAnimated1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimated1Request* /*request*/, ::octaneapi::ApiItem_isAnimated1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_isAnimatedIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isAnimatedIx() {
      ::grpc::Service::MarkMethodGeneric(64);
    }
    ~WithGenericMethod_isAnimatedIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimatedIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedIxRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_evaluate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_evaluate() {
      ::grpc::Service::MarkMethodGeneric(65);
    }
    ~WithGenericMethod_evaluate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status evaluate(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_evaluateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_expand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_expand() {
      ::grpc::Service::MarkMethodGeneric(66);
    }
    ~WithGenericMethod_expand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expand(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_expandOutOfPin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_expandOutOfPin() {
      ::grpc::Service::MarkMethodGeneric(67);
    }
    ~WithGenericMethod_expandOutOfPin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expandOutOfPin(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandOutOfPinRequest* /*request*/, ::octaneapi::ApiItem_expandOutOfPinResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_collapse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_collapse() {
      ::grpc::Service::MarkMethodGeneric(68);
    }
    ~WithGenericMethod_collapse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collapse(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collapseRequest* /*request*/, ::octaneapi::ApiItem_collapseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_dumpAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_dumpAttributes() {
      ::grpc::Service::MarkMethodGeneric(69);
    }
    ~WithGenericMethod_dumpAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dumpAttributes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_dumpAttributesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getByAttrID() {
      ::grpc::Service::MarkMethodGeneric(70);
    }
    ~WithGenericMethod_getByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIDRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getByName() {
      ::grpc::Service::MarkMethodGeneric(71);
    }
    ~WithGenericMethod_getByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByNameRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getByIx() {
      ::grpc::Service::MarkMethodGeneric(72);
    }
    ~WithGenericMethod_getByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIxRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getArrayByAttrID() {
      ::grpc::Service::MarkMethodGeneric(73);
    }
    ~WithGenericMethod_getArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getArrayByName() {
      ::grpc::Service::MarkMethodGeneric(74);
    }
    ~WithGenericMethod_getArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getArrayByIx() {
      ::grpc::Service::MarkMethodGeneric(75);
    }
    ~WithGenericMethod_getArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setByAttrID() {
      ::grpc::Service::MarkMethodGeneric(76);
    }
    ~WithGenericMethod_setByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIDRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setByName() {
      ::grpc::Service::MarkMethodGeneric(77);
    }
    ~WithGenericMethod_setByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByNameRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setByIx() {
      ::grpc::Service::MarkMethodGeneric(78);
    }
    ~WithGenericMethod_setByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIxRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setArrayByName() {
      ::grpc::Service::MarkMethodGeneric(79);
    }
    ~WithGenericMethod_setArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setArrayByAttrID() {
      ::grpc::Service::MarkMethodGeneric(80);
    }
    ~WithGenericMethod_setArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setArrayByIx() {
      ::grpc::Service::MarkMethodGeneric(81);
    }
    ~WithGenericMethod_setArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getAnimByAttr() {
      ::grpc::Service::MarkMethodGeneric(82);
    }
    ~WithGenericMethod_getAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getAnimByName() {
      ::grpc::Service::MarkMethodGeneric(83);
    }
    ~WithGenericMethod_getAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getAnimByIx() {
      ::grpc::Service::MarkMethodGeneric(84);
    }
    ~WithGenericMethod_getAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setAnimByAttr() {
      ::grpc::Service::MarkMethodGeneric(85);
    }
    ~WithGenericMethod_setAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setAnimByName() {
      ::grpc::Service::MarkMethodGeneric(86);
    }
    ~WithGenericMethod_setAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_setAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_setAnimByIx() {
      ::grpc::Service::MarkMethodGeneric(87);
    }
    ~WithGenericMethod_setAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_destroy() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestdestroy(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_name() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_nameRequest* /*request*/, ::octaneapi::ApiItem_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestname(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setName() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_setName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setNameRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_position : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_position() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_position() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status position(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_positionRequest* /*request*/, ::octaneapi::ApiItem_positionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestposition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setPosition() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_setPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setPosition(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setPositionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetPosition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setUIOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setUIOperationFlags() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_setUIOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setUIOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetUIOperationFlags(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_uiOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_uiOperationFlags() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_uiOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uiOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uiOperationFlagsRequest* /*request*/, ::octaneapi::ApiItem_uiOperationFlagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestuiOperationFlags(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_select : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_select() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_select() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status select(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_selectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestselect(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_time : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_time() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_time() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status time(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_timeRequest* /*request*/, ::octaneapi::ApiItem_timeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requesttime(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_outType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_outType() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_outType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status outType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_outTypeRequest* /*request*/, ::octaneapi::ApiItem_outTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestoutType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_persistentId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_persistentId() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_persistentId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status persistentId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_persistentIdRequest* /*request*/, ::octaneapi::ApiItem_persistentIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpersistentId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_uniqueId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_uniqueId() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_uniqueId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uniqueId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uniqueIdRequest* /*request*/, ::octaneapi::ApiItem_uniqueIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestuniqueId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_collectItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_collectItemTree() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_collectItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collectItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collectItemTreeRequest* /*request*/, ::octaneapi::ApiItem_collectItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcollectItemTree(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_deleteUnconnectedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_deleteUnconnectedItems() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_deleteUnconnectedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteUnconnectedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdeleteUnconnectedItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_switchToFileData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_switchToFileData() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_switchToFileData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status switchToFileData(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_switchToFileDataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestswitchToFileData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_version() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status version(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_versionRequest* /*request*/, ::octaneapi::ApiItem_versionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestversion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isGraph() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_isGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isGraphRequest* /*request*/, ::octaneapi::ApiItem_isGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisGraph(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isNode() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_isNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isNodeRequest* /*request*/, ::octaneapi::ApiItem_isNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isLinker() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_isLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isLinkerRequest* /*request*/, ::octaneapi::ApiItem_isLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisLinker(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isInputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isInputLinker() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_isInputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isInputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isInputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isInputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisInputLinker(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isOutputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isOutputLinker() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_isOutputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isOutputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isOutputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isOutputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisOutputLinker(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_toGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_toGraph() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_toGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraphRequest* /*request*/, ::octaneapi::ApiItem_toGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoGraph(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_toNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_toNode() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_toNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNodeRequest* /*request*/, ::octaneapi::ApiItem_toNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_toGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_toGraph1() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_toGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraph1Request* /*request*/, ::octaneapi::ApiItem_toGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoGraph1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_toNode1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_toNode1() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_toNode1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNode1Request* /*request*/, ::octaneapi::ApiItem_toNode1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttoNode1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_hasOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_hasOwner() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_hasOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasOwnerRequest* /*request*/, ::octaneapi::ApiItem_hasOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasOwner(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_graphOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_graphOwned() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_graphOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnedRequest* /*request*/, ::octaneapi::ApiItem_graphOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgraphOwned(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_pinOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_pinOwned() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_pinOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnedRequest* /*request*/, ::octaneapi::ApiItem_pinOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpinOwned(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_graphOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_graphOwner() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_graphOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnerRequest* /*request*/, ::octaneapi::ApiItem_graphOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgraphOwner(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_pinOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_pinOwner() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_pinOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnerRequest* /*request*/, ::octaneapi::ApiItem_pinOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestpinOwner(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_rootGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_rootGraph() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_rootGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraphRequest* /*request*/, ::octaneapi::ApiItem_rootGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrootGraph(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_rootGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_rootGraph1() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_rootGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraph1Request* /*request*/, ::octaneapi::ApiItem_rootGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestrootGraph1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrCount() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_attrCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrCountRequest* /*request*/, ::octaneapi::ApiItem_attrCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrCount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_hasAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_hasAttr() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_hasAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttrRequest* /*request*/, ::octaneapi::ApiItem_hasAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_hasAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_hasAttr1() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_hasAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttr1Request* /*request*/, ::octaneapi::ApiItem_hasAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesthasAttr1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_findAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_findAttr() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_findAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttrRequest* /*request*/, ::octaneapi::ApiItem_findAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_findAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_findAttr1() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_findAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttr1Request* /*request*/, ::octaneapi::ApiItem_findAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestfindAttr1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrId() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_attrId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdRequest* /*request*/, ::octaneapi::ApiItem_attrIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrId(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrIdIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrIdIx() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_attrIdIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrIdIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdIxRequest* /*request*/, ::octaneapi::ApiItem_attrIdIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrIdIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrName() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_attrName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameRequest* /*request*/, ::octaneapi::ApiItem_attrNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrNameIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrNameIx() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_attrNameIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrNameIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameIxRequest* /*request*/, ::octaneapi::ApiItem_attrNameIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrNameIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrType() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_attrType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeRequest* /*request*/, ::octaneapi::ApiItem_attrTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrType1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrType1() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_attrType1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrType1Request* /*request*/, ::octaneapi::ApiItem_attrType1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrType1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrTypeIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrTypeIx() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_attrTypeIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrTypeIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeIxRequest* /*request*/, ::octaneapi::ApiItem_attrTypeIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrTypeIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrInfo() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_attrInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoRequest* /*request*/, ::octaneapi::ApiItem_attrInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrInfo1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrInfo1() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_attrInfo1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfo1Request* /*request*/, ::octaneapi::ApiItem_attrInfo1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrInfo1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrInfoIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrInfoIx() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_attrInfoIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfoIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoIxRequest* /*request*/, ::octaneapi::ApiItem_attrInfoIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrInfoIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_attrAreDirty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_attrAreDirty() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_attrAreDirty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrAreDirty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrAreDirtyRequest* /*request*/, ::octaneapi::ApiItem_attrAreDirtyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestattrAreDirty(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isDirtyAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isDirtyAttr() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_isDirtyAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisDirtyAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isDirtyAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isDirtyAttr1() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_isDirtyAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttr1Request* /*request*/, ::octaneapi::ApiItem_isDirtyAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisDirtyAttr1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isDirtyAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isDirtyAttrIx() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_isDirtyAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisDirtyAttrIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyAttrFrom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyAttrFrom() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_copyAttrFrom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFrom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyAttrFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyAttrFrom1() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_copyAttrFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFrom1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyAttrFromIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyAttrFromIx() {
      ::grpc::Service::MarkMethodRaw(53);
    }
    ~WithRawMethod_copyAttrFromIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFromIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFromIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_copyAttrFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_copyAttrFrom2() {
      ::grpc::Service::MarkMethodRaw(54);
    }
    ~WithRawMethod_copyAttrFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestcopyAttrFrom2(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearAllAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearAllAttr() {
      ::grpc::Service::MarkMethodRaw(55);
    }
    ~WithRawMethod_clearAllAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAllAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAllAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAllAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearAttr() {
      ::grpc::Service::MarkMethodRaw(56);
    }
    ~WithRawMethod_clearAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearAttr1() {
      ::grpc::Service::MarkMethodRaw(57);
    }
    ~WithRawMethod_clearAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttr1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAttr1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearAttrIx() {
      ::grpc::Service::MarkMethodRaw(58);
    }
    ~WithRawMethod_clearAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAttrIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearAnim : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearAnim() {
      ::grpc::Service::MarkMethodRaw(59);
    }
    ~WithRawMethod_clearAnim() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAnim(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearAnim1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearAnim1() {
      ::grpc::Service::MarkMethodRaw(60);
    }
    ~WithRawMethod_clearAnim1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnim1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAnim1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(60, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_clearAnimIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_clearAnimIx() {
      ::grpc::Service::MarkMethodRaw(61);
    }
    ~WithRawMethod_clearAnimIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnimIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestclearAnimIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(61, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isAnimated : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isAnimated() {
      ::grpc::Service::MarkMethodRaw(62);
    }
    ~WithRawMethod_isAnimated() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisAnimated(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(62, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isAnimated1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isAnimated1() {
      ::grpc::Service::MarkMethodRaw(63);
    }
    ~WithRawMethod_isAnimated1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimated1Request* /*request*/, ::octaneapi::ApiItem_isAnimated1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisAnimated1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(63, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_isAnimatedIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isAnimatedIx() {
      ::grpc::Service::MarkMethodRaw(64);
    }
    ~WithRawMethod_isAnimatedIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimatedIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedIxRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisAnimatedIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(64, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_evaluate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_evaluate() {
      ::grpc::Service::MarkMethodRaw(65);
    }
    ~WithRawMethod_evaluate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status evaluate(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_evaluateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestevaluate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(65, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_expand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_expand() {
      ::grpc::Service::MarkMethodRaw(66);
    }
    ~WithRawMethod_expand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expand(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestexpand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(66, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_expandOutOfPin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_expandOutOfPin() {
      ::grpc::Service::MarkMethodRaw(67);
    }
    ~WithRawMethod_expandOutOfPin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expandOutOfPin(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandOutOfPinRequest* /*request*/, ::octaneapi::ApiItem_expandOutOfPinResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestexpandOutOfPin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(67, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_collapse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_collapse() {
      ::grpc::Service::MarkMethodRaw(68);
    }
    ~WithRawMethod_collapse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collapse(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collapseRequest* /*request*/, ::octaneapi::ApiItem_collapseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void Requestcollapse(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(68, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_dumpAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_dumpAttributes() {
      ::grpc::Service::MarkMethodRaw(69);
    }
    ~WithRawMethod_dumpAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dumpAttributes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_dumpAttributesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdumpAttributes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(69, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getByAttrID() {
      ::grpc::Service::MarkMethodRaw(70);
    }
    ~WithRawMethod_getByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIDRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetByAttrID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(70, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getByName() {
      ::grpc::Service::MarkMethodRaw(71);
    }
    ~WithRawMethod_getByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByNameRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(71, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getByIx() {
      ::grpc::Service::MarkMethodRaw(72);
    }
    ~WithRawMethod_getByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIxRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetByIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(72, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getArrayByAttrID() {
      ::grpc::Service::MarkMethodRaw(73);
    }
    ~WithRawMethod_getArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetArrayByAttrID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(73, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getArrayByName() {
      ::grpc::Service::MarkMethodRaw(74);
    }
    ~WithRawMethod_getArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetArrayByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(74, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getArrayByIx() {
      ::grpc::Service::MarkMethodRaw(75);
    }
    ~WithRawMethod_getArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetArrayByIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(75, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setByAttrID() {
      ::grpc::Service::MarkMethodRaw(76);
    }
    ~WithRawMethod_setByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIDRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetByAttrID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(76, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setByName() {
      ::grpc::Service::MarkMethodRaw(77);
    }
    ~WithRawMethod_setByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByNameRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(77, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setByIx() {
      ::grpc::Service::MarkMethodRaw(78);
    }
    ~WithRawMethod_setByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIxRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetByIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(78, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setArrayByName() {
      ::grpc::Service::MarkMethodRaw(79);
    }
    ~WithRawMethod_setArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetArrayByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(79, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setArrayByAttrID() {
      ::grpc::Service::MarkMethodRaw(80);
    }
    ~WithRawMethod_setArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetArrayByAttrID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(80, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setArrayByIx() {
      ::grpc::Service::MarkMethodRaw(81);
    }
    ~WithRawMethod_setArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetArrayByIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(81, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getAnimByAttr() {
      ::grpc::Service::MarkMethodRaw(82);
    }
    ~WithRawMethod_getAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAnimByAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(82, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getAnimByName() {
      ::grpc::Service::MarkMethodRaw(83);
    }
    ~WithRawMethod_getAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAnimByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(83, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getAnimByIx() {
      ::grpc::Service::MarkMethodRaw(84);
    }
    ~WithRawMethod_getAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetAnimByIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(84, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setAnimByAttr() {
      ::grpc::Service::MarkMethodRaw(85);
    }
    ~WithRawMethod_setAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAnimByAttr(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(85, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setAnimByName() {
      ::grpc::Service::MarkMethodRaw(86);
    }
    ~WithRawMethod_setAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAnimByName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(86, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_setAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_setAnimByIx() {
      ::grpc::Service::MarkMethodRaw(87);
    }
    ~WithRawMethod_setAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestsetAnimByIx(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(87, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_destroy() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->destroy(context, request, response); }));
    }
    ~WithRawCallbackMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* destroy(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_name() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->name(context, request, response); }));
    }
    ~WithRawCallbackMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_nameRequest* /*request*/, ::octaneapi::ApiItem_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* name(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setName() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setName(context, request, response); }));
    }
    ~WithRawCallbackMethod_setName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setNameRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_position : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_position() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->position(context, request, response); }));
    }
    ~WithRawCallbackMethod_position() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status position(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_positionRequest* /*request*/, ::octaneapi::ApiItem_positionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* position(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setPosition() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setPosition(context, request, response); }));
    }
    ~WithRawCallbackMethod_setPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setPosition(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setPositionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setUIOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setUIOperationFlags() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setUIOperationFlags(context, request, response); }));
    }
    ~WithRawCallbackMethod_setUIOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setUIOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setUIOperationFlags(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_uiOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_uiOperationFlags() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->uiOperationFlags(context, request, response); }));
    }
    ~WithRawCallbackMethod_uiOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uiOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uiOperationFlagsRequest* /*request*/, ::octaneapi::ApiItem_uiOperationFlagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* uiOperationFlags(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_select : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_select() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->select(context, request, response); }));
    }
    ~WithRawCallbackMethod_select() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status select(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_selectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* select(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_time : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_time() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->time(context, request, response); }));
    }
    ~WithRawCallbackMethod_time() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status time(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_timeRequest* /*request*/, ::octaneapi::ApiItem_timeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* time(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_outType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_outType() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->outType(context, request, response); }));
    }
    ~WithRawCallbackMethod_outType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status outType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_outTypeRequest* /*request*/, ::octaneapi::ApiItem_outTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* outType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_persistentId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_persistentId() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->persistentId(context, request, response); }));
    }
    ~WithRawCallbackMethod_persistentId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status persistentId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_persistentIdRequest* /*request*/, ::octaneapi::ApiItem_persistentIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* persistentId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_uniqueId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_uniqueId() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->uniqueId(context, request, response); }));
    }
    ~WithRawCallbackMethod_uniqueId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status uniqueId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uniqueIdRequest* /*request*/, ::octaneapi::ApiItem_uniqueIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* uniqueId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_collectItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_collectItemTree() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->collectItemTree(context, request, response); }));
    }
    ~WithRawCallbackMethod_collectItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collectItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collectItemTreeRequest* /*request*/, ::octaneapi::ApiItem_collectItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* collectItemTree(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_deleteUnconnectedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_deleteUnconnectedItems() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->deleteUnconnectedItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_deleteUnconnectedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status deleteUnconnectedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* deleteUnconnectedItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_switchToFileData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_switchToFileData() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->switchToFileData(context, request, response); }));
    }
    ~WithRawCallbackMethod_switchToFileData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status switchToFileData(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_switchToFileDataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* switchToFileData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_version() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->version(context, request, response); }));
    }
    ~WithRawCallbackMethod_version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status version(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_versionRequest* /*request*/, ::octaneapi::ApiItem_versionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* version(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isGraph() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isGraph(context, request, response); }));
    }
    ~WithRawCallbackMethod_isGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isGraphRequest* /*request*/, ::octaneapi::ApiItem_isGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isNode() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_isNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isNodeRequest* /*request*/, ::octaneapi::ApiItem_isNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isLinker() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isLinker(context, request, response); }));
    }
    ~WithRawCallbackMethod_isLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isLinkerRequest* /*request*/, ::octaneapi::ApiItem_isLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isLinker(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isInputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isInputLinker() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isInputLinker(context, request, response); }));
    }
    ~WithRawCallbackMethod_isInputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isInputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isInputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isInputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isInputLinker(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isOutputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isOutputLinker() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isOutputLinker(context, request, response); }));
    }
    ~WithRawCallbackMethod_isOutputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isOutputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isOutputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isOutputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isOutputLinker(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_toGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_toGraph() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->toGraph(context, request, response); }));
    }
    ~WithRawCallbackMethod_toGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraphRequest* /*request*/, ::octaneapi::ApiItem_toGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_toNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_toNode() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->toNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_toNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNodeRequest* /*request*/, ::octaneapi::ApiItem_toNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_toGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_toGraph1() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->toGraph1(context, request, response); }));
    }
    ~WithRawCallbackMethod_toGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraph1Request* /*request*/, ::octaneapi::ApiItem_toGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toGraph1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_toNode1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_toNode1() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->toNode1(context, request, response); }));
    }
    ~WithRawCallbackMethod_toNode1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status toNode1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNode1Request* /*request*/, ::octaneapi::ApiItem_toNode1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* toNode1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_hasOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_hasOwner() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->hasOwner(context, request, response); }));
    }
    ~WithRawCallbackMethod_hasOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasOwnerRequest* /*request*/, ::octaneapi::ApiItem_hasOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasOwner(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_graphOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_graphOwned() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->graphOwned(context, request, response); }));
    }
    ~WithRawCallbackMethod_graphOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnedRequest* /*request*/, ::octaneapi::ApiItem_graphOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* graphOwned(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_pinOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_pinOwned() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->pinOwned(context, request, response); }));
    }
    ~WithRawCallbackMethod_pinOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnedRequest* /*request*/, ::octaneapi::ApiItem_pinOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* pinOwned(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_graphOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_graphOwner() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->graphOwner(context, request, response); }));
    }
    ~WithRawCallbackMethod_graphOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status graphOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnerRequest* /*request*/, ::octaneapi::ApiItem_graphOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* graphOwner(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_pinOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_pinOwner() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->pinOwner(context, request, response); }));
    }
    ~WithRawCallbackMethod_pinOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status pinOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnerRequest* /*request*/, ::octaneapi::ApiItem_pinOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* pinOwner(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_rootGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_rootGraph() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->rootGraph(context, request, response); }));
    }
    ~WithRawCallbackMethod_rootGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraphRequest* /*request*/, ::octaneapi::ApiItem_rootGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* rootGraph(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_rootGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_rootGraph1() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->rootGraph1(context, request, response); }));
    }
    ~WithRawCallbackMethod_rootGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status rootGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraph1Request* /*request*/, ::octaneapi::ApiItem_rootGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* rootGraph1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrCount() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrCount(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrCountRequest* /*request*/, ::octaneapi::ApiItem_attrCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrCount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_hasAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_hasAttr() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->hasAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_hasAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttrRequest* /*request*/, ::octaneapi::ApiItem_hasAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_hasAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_hasAttr1() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->hasAttr1(context, request, response); }));
    }
    ~WithRawCallbackMethod_hasAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status hasAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttr1Request* /*request*/, ::octaneapi::ApiItem_hasAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* hasAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_findAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_findAttr() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->findAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_findAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttrRequest* /*request*/, ::octaneapi::ApiItem_findAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_findAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_findAttr1() {
      ::grpc::Service::MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->findAttr1(context, request, response); }));
    }
    ~WithRawCallbackMethod_findAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status findAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttr1Request* /*request*/, ::octaneapi::ApiItem_findAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* findAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrId() {
      ::grpc::Service::MarkMethodRawCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrId(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdRequest* /*request*/, ::octaneapi::ApiItem_attrIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrId(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrIdIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrIdIx() {
      ::grpc::Service::MarkMethodRawCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrIdIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrIdIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrIdIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdIxRequest* /*request*/, ::octaneapi::ApiItem_attrIdIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrIdIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrName() {
      ::grpc::Service::MarkMethodRawCallback(39,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrName(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameRequest* /*request*/, ::octaneapi::ApiItem_attrNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrNameIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrNameIx() {
      ::grpc::Service::MarkMethodRawCallback(40,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrNameIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrNameIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrNameIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameIxRequest* /*request*/, ::octaneapi::ApiItem_attrNameIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrNameIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrType() {
      ::grpc::Service::MarkMethodRawCallback(41,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrType(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeRequest* /*request*/, ::octaneapi::ApiItem_attrTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrType1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrType1() {
      ::grpc::Service::MarkMethodRawCallback(42,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrType1(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrType1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrType1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrType1Request* /*request*/, ::octaneapi::ApiItem_attrType1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrType1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrTypeIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrTypeIx() {
      ::grpc::Service::MarkMethodRawCallback(43,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrTypeIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrTypeIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrTypeIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeIxRequest* /*request*/, ::octaneapi::ApiItem_attrTypeIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrTypeIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrInfo() {
      ::grpc::Service::MarkMethodRawCallback(44,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoRequest* /*request*/, ::octaneapi::ApiItem_attrInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrInfo1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrInfo1() {
      ::grpc::Service::MarkMethodRawCallback(45,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrInfo1(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrInfo1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfo1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfo1Request* /*request*/, ::octaneapi::ApiItem_attrInfo1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrInfo1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrInfoIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrInfoIx() {
      ::grpc::Service::MarkMethodRawCallback(46,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrInfoIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrInfoIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrInfoIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoIxRequest* /*request*/, ::octaneapi::ApiItem_attrInfoIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrInfoIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_attrAreDirty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_attrAreDirty() {
      ::grpc::Service::MarkMethodRawCallback(47,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->attrAreDirty(context, request, response); }));
    }
    ~WithRawCallbackMethod_attrAreDirty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status attrAreDirty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrAreDirtyRequest* /*request*/, ::octaneapi::ApiItem_attrAreDirtyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* attrAreDirty(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isDirtyAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isDirtyAttr() {
      ::grpc::Service::MarkMethodRawCallback(48,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isDirtyAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_isDirtyAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isDirtyAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isDirtyAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isDirtyAttr1() {
      ::grpc::Service::MarkMethodRawCallback(49,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isDirtyAttr1(context, request, response); }));
    }
    ~WithRawCallbackMethod_isDirtyAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttr1Request* /*request*/, ::octaneapi::ApiItem_isDirtyAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isDirtyAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isDirtyAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isDirtyAttrIx() {
      ::grpc::Service::MarkMethodRawCallback(50,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isDirtyAttrIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_isDirtyAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isDirtyAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isDirtyAttrIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyAttrFrom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyAttrFrom() {
      ::grpc::Service::MarkMethodRawCallback(51,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyAttrFrom(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyAttrFrom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFrom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyAttrFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyAttrFrom1() {
      ::grpc::Service::MarkMethodRawCallback(52,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyAttrFrom1(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyAttrFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFrom1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyAttrFromIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyAttrFromIx() {
      ::grpc::Service::MarkMethodRawCallback(53,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyAttrFromIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyAttrFromIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFromIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFromIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_copyAttrFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_copyAttrFrom2() {
      ::grpc::Service::MarkMethodRawCallback(54,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->copyAttrFrom2(context, request, response); }));
    }
    ~WithRawCallbackMethod_copyAttrFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status copyAttrFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* copyAttrFrom2(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearAllAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearAllAttr() {
      ::grpc::Service::MarkMethodRawCallback(55,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearAllAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearAllAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAllAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAllAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAllAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearAttr() {
      ::grpc::Service::MarkMethodRawCallback(56,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearAttr1() {
      ::grpc::Service::MarkMethodRawCallback(57,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearAttr1(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttr1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAttr1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearAttrIx() {
      ::grpc::Service::MarkMethodRawCallback(58,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearAttrIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAttrIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearAnim : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearAnim() {
      ::grpc::Service::MarkMethodRawCallback(59,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearAnim(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearAnim() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAnim(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearAnim1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearAnim1() {
      ::grpc::Service::MarkMethodRawCallback(60,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearAnim1(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearAnim1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnim1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnim1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAnim1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_clearAnimIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_clearAnimIx() {
      ::grpc::Service::MarkMethodRawCallback(61,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->clearAnimIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_clearAnimIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status clearAnimIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* clearAnimIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isAnimated : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isAnimated() {
      ::grpc::Service::MarkMethodRawCallback(62,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isAnimated(context, request, response); }));
    }
    ~WithRawCallbackMethod_isAnimated() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isAnimated(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isAnimated1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isAnimated1() {
      ::grpc::Service::MarkMethodRawCallback(63,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isAnimated1(context, request, response); }));
    }
    ~WithRawCallbackMethod_isAnimated1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimated1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimated1Request* /*request*/, ::octaneapi::ApiItem_isAnimated1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isAnimated1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isAnimatedIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isAnimatedIx() {
      ::grpc::Service::MarkMethodRawCallback(64,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isAnimatedIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_isAnimatedIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isAnimatedIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedIxRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isAnimatedIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_evaluate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_evaluate() {
      ::grpc::Service::MarkMethodRawCallback(65,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->evaluate(context, request, response); }));
    }
    ~WithRawCallbackMethod_evaluate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status evaluate(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_evaluateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* evaluate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_expand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_expand() {
      ::grpc::Service::MarkMethodRawCallback(66,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->expand(context, request, response); }));
    }
    ~WithRawCallbackMethod_expand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expand(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* expand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_expandOutOfPin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_expandOutOfPin() {
      ::grpc::Service::MarkMethodRawCallback(67,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->expandOutOfPin(context, request, response); }));
    }
    ~WithRawCallbackMethod_expandOutOfPin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status expandOutOfPin(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandOutOfPinRequest* /*request*/, ::octaneapi::ApiItem_expandOutOfPinResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* expandOutOfPin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_collapse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_collapse() {
      ::grpc::Service::MarkMethodRawCallback(68,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->collapse(context, request, response); }));
    }
    ~WithRawCallbackMethod_collapse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status collapse(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collapseRequest* /*request*/, ::octaneapi::ApiItem_collapseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* collapse(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_dumpAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_dumpAttributes() {
      ::grpc::Service::MarkMethodRawCallback(69,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->dumpAttributes(context, request, response); }));
    }
    ~WithRawCallbackMethod_dumpAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status dumpAttributes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_dumpAttributesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* dumpAttributes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getByAttrID() {
      ::grpc::Service::MarkMethodRawCallback(70,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getByAttrID(context, request, response); }));
    }
    ~WithRawCallbackMethod_getByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIDRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getByName() {
      ::grpc::Service::MarkMethodRawCallback(71,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_getByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByNameRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getByIx() {
      ::grpc::Service::MarkMethodRawCallback(72,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getByIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_getByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIxRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getArrayByAttrID() {
      ::grpc::Service::MarkMethodRawCallback(73,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getArrayByAttrID(context, request, response); }));
    }
    ~WithRawCallbackMethod_getArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getArrayByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getArrayByName() {
      ::grpc::Service::MarkMethodRawCallback(74,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getArrayByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_getArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getArrayByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getArrayByIx() {
      ::grpc::Service::MarkMethodRawCallback(75,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getArrayByIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_getArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getArrayByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setByAttrID() {
      ::grpc::Service::MarkMethodRawCallback(76,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setByAttrID(context, request, response); }));
    }
    ~WithRawCallbackMethod_setByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIDRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setByName() {
      ::grpc::Service::MarkMethodRawCallback(77,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_setByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByNameRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setByIx() {
      ::grpc::Service::MarkMethodRawCallback(78,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setByIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_setByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIxRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setArrayByName() {
      ::grpc::Service::MarkMethodRawCallback(79,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setArrayByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_setArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setArrayByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setArrayByAttrID() {
      ::grpc::Service::MarkMethodRawCallback(80,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setArrayByAttrID(context, request, response); }));
    }
    ~WithRawCallbackMethod_setArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setArrayByAttrID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setArrayByIx() {
      ::grpc::Service::MarkMethodRawCallback(81,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setArrayByIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_setArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setArrayByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getAnimByAttr() {
      ::grpc::Service::MarkMethodRawCallback(82,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getAnimByAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_getAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAnimByAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getAnimByName() {
      ::grpc::Service::MarkMethodRawCallback(83,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getAnimByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_getAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAnimByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getAnimByIx() {
      ::grpc::Service::MarkMethodRawCallback(84,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getAnimByIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_getAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getAnimByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setAnimByAttr() {
      ::grpc::Service::MarkMethodRawCallback(85,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setAnimByAttr(context, request, response); }));
    }
    ~WithRawCallbackMethod_setAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setAnimByAttr(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setAnimByName() {
      ::grpc::Service::MarkMethodRawCallback(86,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setAnimByName(context, request, response); }));
    }
    ~WithRawCallbackMethod_setAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setAnimByName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_setAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_setAnimByIx() {
      ::grpc::Service::MarkMethodRawCallback(87,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->setAnimByIx(context, request, response); }));
    }
    ~WithRawCallbackMethod_setAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status setAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* setAnimByIx(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_destroy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_destroy() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_destroyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streameddestroy(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_destroy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status destroy(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_destroyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streameddestroy(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_destroyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_name : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_name() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_nameRequest, ::octaneapi::ApiItem_nameResponse>* streamer) {
                       return this->Streamedname(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_name() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status name(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_nameRequest* /*request*/, ::octaneapi::ApiItem_nameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedname(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_nameRequest,::octaneapi::ApiItem_nameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setName() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setNameRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setNameRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setNameRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_position : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_position() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_positionRequest, ::octaneapi::ApiItem_positionResponse>* streamer) {
                       return this->Streamedposition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_position() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status position(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_positionRequest* /*request*/, ::octaneapi::ApiItem_positionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedposition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_positionRequest,::octaneapi::ApiItem_positionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setPosition() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setPositionRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetPosition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setPosition(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setPositionRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetPosition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setPositionRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setUIOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setUIOperationFlags() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setUIOperationFlagsRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedsetUIOperationFlags(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setUIOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setUIOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setUIOperationFlagsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetUIOperationFlags(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setUIOperationFlagsRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_uiOperationFlags : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_uiOperationFlags() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_uiOperationFlagsRequest, ::octaneapi::ApiItem_uiOperationFlagsResponse>* streamer) {
                       return this->StreameduiOperationFlags(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_uiOperationFlags() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status uiOperationFlags(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uiOperationFlagsRequest* /*request*/, ::octaneapi::ApiItem_uiOperationFlagsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameduiOperationFlags(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_uiOperationFlagsRequest,::octaneapi::ApiItem_uiOperationFlagsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_select : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_select() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_selectRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedselect(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_select() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status select(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_selectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedselect(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_selectRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_time : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_time() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_timeRequest, ::octaneapi::ApiItem_timeResponse>* streamer) {
                       return this->Streamedtime(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_time() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status time(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_timeRequest* /*request*/, ::octaneapi::ApiItem_timeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedtime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_timeRequest,::octaneapi::ApiItem_timeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_outType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_outType() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_outTypeRequest, ::octaneapi::ApiItem_outTypeResponse>* streamer) {
                       return this->StreamedoutType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_outType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status outType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_outTypeRequest* /*request*/, ::octaneapi::ApiItem_outTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedoutType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_outTypeRequest,::octaneapi::ApiItem_outTypeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_persistentId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_persistentId() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_persistentIdRequest, ::octaneapi::ApiItem_persistentIdResponse>* streamer) {
                       return this->StreamedpersistentId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_persistentId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status persistentId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_persistentIdRequest* /*request*/, ::octaneapi::ApiItem_persistentIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedpersistentId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_persistentIdRequest,::octaneapi::ApiItem_persistentIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_uniqueId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_uniqueId() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_uniqueIdRequest, ::octaneapi::ApiItem_uniqueIdResponse>* streamer) {
                       return this->StreameduniqueId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_uniqueId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status uniqueId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_uniqueIdRequest* /*request*/, ::octaneapi::ApiItem_uniqueIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameduniqueId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_uniqueIdRequest,::octaneapi::ApiItem_uniqueIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_collectItemTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_collectItemTree() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_collectItemTreeRequest, ::octaneapi::ApiItem_collectItemTreeResponse>* streamer) {
                       return this->StreamedcollectItemTree(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_collectItemTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status collectItemTree(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collectItemTreeRequest* /*request*/, ::octaneapi::ApiItem_collectItemTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcollectItemTree(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_collectItemTreeRequest,::octaneapi::ApiItem_collectItemTreeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_deleteUnconnectedItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_deleteUnconnectedItems() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_deleteUnconnectedItemsRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddeleteUnconnectedItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_deleteUnconnectedItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status deleteUnconnectedItems(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_deleteUnconnectedItemsRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddeleteUnconnectedItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_deleteUnconnectedItemsRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_switchToFileData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_switchToFileData() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_switchToFileDataRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedswitchToFileData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_switchToFileData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status switchToFileData(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_switchToFileDataRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedswitchToFileData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_switchToFileDataRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_version() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_versionRequest, ::octaneapi::ApiItem_versionResponse>* streamer) {
                       return this->Streamedversion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status version(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_versionRequest* /*request*/, ::octaneapi::ApiItem_versionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedversion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_versionRequest,::octaneapi::ApiItem_versionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isGraph() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isGraphRequest, ::octaneapi::ApiItem_isGraphResponse>* streamer) {
                       return this->StreamedisGraph(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isGraphRequest* /*request*/, ::octaneapi::ApiItem_isGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisGraph(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isGraphRequest,::octaneapi::ApiItem_isGraphResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isNode() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isNodeRequest, ::octaneapi::ApiItem_isNodeResponse>* streamer) {
                       return this->StreamedisNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isNodeRequest* /*request*/, ::octaneapi::ApiItem_isNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isNodeRequest,::octaneapi::ApiItem_isNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isLinker() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isLinkerRequest, ::octaneapi::ApiItem_isLinkerResponse>* streamer) {
                       return this->StreamedisLinker(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isLinkerRequest* /*request*/, ::octaneapi::ApiItem_isLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisLinker(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isLinkerRequest,::octaneapi::ApiItem_isLinkerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isInputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isInputLinker() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isInputLinkerRequest, ::octaneapi::ApiItem_isInputLinkerResponse>* streamer) {
                       return this->StreamedisInputLinker(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isInputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isInputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isInputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isInputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisInputLinker(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isInputLinkerRequest,::octaneapi::ApiItem_isInputLinkerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isOutputLinker : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isOutputLinker() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isOutputLinkerRequest, ::octaneapi::ApiItem_isOutputLinkerResponse>* streamer) {
                       return this->StreamedisOutputLinker(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isOutputLinker() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isOutputLinker(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isOutputLinkerRequest* /*request*/, ::octaneapi::ApiItem_isOutputLinkerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisOutputLinker(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isOutputLinkerRequest,::octaneapi::ApiItem_isOutputLinkerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_toGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_toGraph() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_toGraphRequest, ::octaneapi::ApiItem_toGraphResponse>* streamer) {
                       return this->StreamedtoGraph(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_toGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status toGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraphRequest* /*request*/, ::octaneapi::ApiItem_toGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtoGraph(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_toGraphRequest,::octaneapi::ApiItem_toGraphResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_toNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_toNode() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_toNodeRequest, ::octaneapi::ApiItem_toNodeResponse>* streamer) {
                       return this->StreamedtoNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_toNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status toNode(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNodeRequest* /*request*/, ::octaneapi::ApiItem_toNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtoNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_toNodeRequest,::octaneapi::ApiItem_toNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_toGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_toGraph1() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_toGraph1Request, ::octaneapi::ApiItem_toGraph1Response>* streamer) {
                       return this->StreamedtoGraph1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_toGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status toGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toGraph1Request* /*request*/, ::octaneapi::ApiItem_toGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtoGraph1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_toGraph1Request,::octaneapi::ApiItem_toGraph1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_toNode1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_toNode1() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_toNode1Request, ::octaneapi::ApiItem_toNode1Response>* streamer) {
                       return this->StreamedtoNode1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_toNode1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status toNode1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_toNode1Request* /*request*/, ::octaneapi::ApiItem_toNode1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtoNode1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_toNode1Request,::octaneapi::ApiItem_toNode1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_hasOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_hasOwner() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_hasOwnerRequest, ::octaneapi::ApiItem_hasOwnerResponse>* streamer) {
                       return this->StreamedhasOwner(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_hasOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status hasOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasOwnerRequest* /*request*/, ::octaneapi::ApiItem_hasOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedhasOwner(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_hasOwnerRequest,::octaneapi::ApiItem_hasOwnerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_graphOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_graphOwned() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_graphOwnedRequest, ::octaneapi::ApiItem_graphOwnedResponse>* streamer) {
                       return this->StreamedgraphOwned(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_graphOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status graphOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnedRequest* /*request*/, ::octaneapi::ApiItem_graphOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgraphOwned(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_graphOwnedRequest,::octaneapi::ApiItem_graphOwnedResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_pinOwned : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_pinOwned() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_pinOwnedRequest, ::octaneapi::ApiItem_pinOwnedResponse>* streamer) {
                       return this->StreamedpinOwned(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_pinOwned() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status pinOwned(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnedRequest* /*request*/, ::octaneapi::ApiItem_pinOwnedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedpinOwned(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_pinOwnedRequest,::octaneapi::ApiItem_pinOwnedResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_graphOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_graphOwner() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_graphOwnerRequest, ::octaneapi::ApiItem_graphOwnerResponse>* streamer) {
                       return this->StreamedgraphOwner(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_graphOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status graphOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_graphOwnerRequest* /*request*/, ::octaneapi::ApiItem_graphOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgraphOwner(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_graphOwnerRequest,::octaneapi::ApiItem_graphOwnerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_pinOwner : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_pinOwner() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_pinOwnerRequest, ::octaneapi::ApiItem_pinOwnerResponse>* streamer) {
                       return this->StreamedpinOwner(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_pinOwner() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status pinOwner(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_pinOwnerRequest* /*request*/, ::octaneapi::ApiItem_pinOwnerResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedpinOwner(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_pinOwnerRequest,::octaneapi::ApiItem_pinOwnerResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_rootGraph : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_rootGraph() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_rootGraphRequest, ::octaneapi::ApiItem_rootGraphResponse>* streamer) {
                       return this->StreamedrootGraph(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_rootGraph() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status rootGraph(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraphRequest* /*request*/, ::octaneapi::ApiItem_rootGraphResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedrootGraph(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_rootGraphRequest,::octaneapi::ApiItem_rootGraphResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_rootGraph1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_rootGraph1() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_rootGraph1Request, ::octaneapi::ApiItem_rootGraph1Response>* streamer) {
                       return this->StreamedrootGraph1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_rootGraph1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status rootGraph1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_rootGraph1Request* /*request*/, ::octaneapi::ApiItem_rootGraph1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedrootGraph1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_rootGraph1Request,::octaneapi::ApiItem_rootGraph1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrCount() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrCountRequest, ::octaneapi::ApiItem_attrCountResponse>* streamer) {
                       return this->StreamedattrCount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrCount(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrCountRequest* /*request*/, ::octaneapi::ApiItem_attrCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrCount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrCountRequest,::octaneapi::ApiItem_attrCountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_hasAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_hasAttr() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_hasAttrRequest, ::octaneapi::ApiItem_hasAttrResponse>* streamer) {
                       return this->StreamedhasAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_hasAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status hasAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttrRequest* /*request*/, ::octaneapi::ApiItem_hasAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedhasAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_hasAttrRequest,::octaneapi::ApiItem_hasAttrResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_hasAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_hasAttr1() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_hasAttr1Request, ::octaneapi::ApiItem_hasAttr1Response>* streamer) {
                       return this->StreamedhasAttr1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_hasAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status hasAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_hasAttr1Request* /*request*/, ::octaneapi::ApiItem_hasAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedhasAttr1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_hasAttr1Request,::octaneapi::ApiItem_hasAttr1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_findAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_findAttr() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_findAttrRequest, ::octaneapi::ApiItem_findAttrResponse>* streamer) {
                       return this->StreamedfindAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_findAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status findAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttrRequest* /*request*/, ::octaneapi::ApiItem_findAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfindAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_findAttrRequest,::octaneapi::ApiItem_findAttrResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_findAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_findAttr1() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_findAttr1Request, ::octaneapi::ApiItem_findAttr1Response>* streamer) {
                       return this->StreamedfindAttr1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_findAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status findAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_findAttr1Request* /*request*/, ::octaneapi::ApiItem_findAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedfindAttr1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_findAttr1Request,::octaneapi::ApiItem_findAttr1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrId() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrIdRequest, ::octaneapi::ApiItem_attrIdResponse>* streamer) {
                       return this->StreamedattrId(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrId(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdRequest* /*request*/, ::octaneapi::ApiItem_attrIdResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrIdRequest,::octaneapi::ApiItem_attrIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrIdIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrIdIx() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrIdIxRequest, ::octaneapi::ApiItem_attrIdIxResponse>* streamer) {
                       return this->StreamedattrIdIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrIdIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrIdIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrIdIxRequest* /*request*/, ::octaneapi::ApiItem_attrIdIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrIdIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrIdIxRequest,::octaneapi::ApiItem_attrIdIxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrName() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrNameRequest, ::octaneapi::ApiItem_attrNameResponse>* streamer) {
                       return this->StreamedattrName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameRequest* /*request*/, ::octaneapi::ApiItem_attrNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrNameRequest,::octaneapi::ApiItem_attrNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrNameIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrNameIx() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrNameIxRequest, ::octaneapi::ApiItem_attrNameIxResponse>* streamer) {
                       return this->StreamedattrNameIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrNameIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrNameIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrNameIxRequest* /*request*/, ::octaneapi::ApiItem_attrNameIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrNameIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrNameIxRequest,::octaneapi::ApiItem_attrNameIxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrType() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrTypeRequest, ::octaneapi::ApiItem_attrTypeResponse>* streamer) {
                       return this->StreamedattrType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrType(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeRequest* /*request*/, ::octaneapi::ApiItem_attrTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrTypeRequest,::octaneapi::ApiItem_attrTypeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrType1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrType1() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrType1Request, ::octaneapi::ApiItem_attrType1Response>* streamer) {
                       return this->StreamedattrType1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrType1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrType1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrType1Request* /*request*/, ::octaneapi::ApiItem_attrType1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrType1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrType1Request,::octaneapi::ApiItem_attrType1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrTypeIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrTypeIx() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrTypeIxRequest, ::octaneapi::ApiItem_attrTypeIxResponse>* streamer) {
                       return this->StreamedattrTypeIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrTypeIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrTypeIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrTypeIxRequest* /*request*/, ::octaneapi::ApiItem_attrTypeIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrTypeIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrTypeIxRequest,::octaneapi::ApiItem_attrTypeIxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrInfo() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrInfoRequest, ::octaneapi::ApiItem_attrInfoResponse>* streamer) {
                       return this->StreamedattrInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrInfo(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoRequest* /*request*/, ::octaneapi::ApiItem_attrInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrInfoRequest,::octaneapi::ApiItem_attrInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrInfo1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrInfo1() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrInfo1Request, ::octaneapi::ApiItem_attrInfo1Response>* streamer) {
                       return this->StreamedattrInfo1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrInfo1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrInfo1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfo1Request* /*request*/, ::octaneapi::ApiItem_attrInfo1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrInfo1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrInfo1Request,::octaneapi::ApiItem_attrInfo1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrInfoIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrInfoIx() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrInfoIxRequest, ::octaneapi::ApiItem_attrInfoIxResponse>* streamer) {
                       return this->StreamedattrInfoIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrInfoIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrInfoIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrInfoIxRequest* /*request*/, ::octaneapi::ApiItem_attrInfoIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrInfoIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrInfoIxRequest,::octaneapi::ApiItem_attrInfoIxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_attrAreDirty : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_attrAreDirty() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_attrAreDirtyRequest, ::octaneapi::ApiItem_attrAreDirtyResponse>* streamer) {
                       return this->StreamedattrAreDirty(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_attrAreDirty() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status attrAreDirty(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_attrAreDirtyRequest* /*request*/, ::octaneapi::ApiItem_attrAreDirtyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedattrAreDirty(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_attrAreDirtyRequest,::octaneapi::ApiItem_attrAreDirtyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isDirtyAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isDirtyAttr() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isDirtyAttrRequest, ::octaneapi::ApiItem_isDirtyAttrResponse>* streamer) {
                       return this->StreamedisDirtyAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isDirtyAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isDirtyAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisDirtyAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isDirtyAttrRequest,::octaneapi::ApiItem_isDirtyAttrResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isDirtyAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isDirtyAttr1() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isDirtyAttr1Request, ::octaneapi::ApiItem_isDirtyAttr1Response>* streamer) {
                       return this->StreamedisDirtyAttr1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isDirtyAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isDirtyAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttr1Request* /*request*/, ::octaneapi::ApiItem_isDirtyAttr1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisDirtyAttr1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isDirtyAttr1Request,::octaneapi::ApiItem_isDirtyAttr1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isDirtyAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isDirtyAttrIx() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isDirtyAttrIxRequest, ::octaneapi::ApiItem_isDirtyAttrIxResponse>* streamer) {
                       return this->StreamedisDirtyAttrIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isDirtyAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isDirtyAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isDirtyAttrIxRequest* /*request*/, ::octaneapi::ApiItem_isDirtyAttrIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisDirtyAttrIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isDirtyAttrIxRequest,::octaneapi::ApiItem_isDirtyAttrIxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyAttrFrom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyAttrFrom() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_copyAttrFromRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedcopyAttrFrom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyAttrFrom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyAttrFrom(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyAttrFrom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_copyAttrFromRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyAttrFrom1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyAttrFrom1() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_copyAttrFrom1Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedcopyAttrFrom1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyAttrFrom1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyAttrFrom1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyAttrFrom1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_copyAttrFrom1Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyAttrFromIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyAttrFromIx() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_copyAttrFromIxRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedcopyAttrFromIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyAttrFromIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyAttrFromIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFromIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyAttrFromIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_copyAttrFromIxRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_copyAttrFrom2 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_copyAttrFrom2() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_copyAttrFrom2Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedcopyAttrFrom2(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_copyAttrFrom2() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status copyAttrFrom2(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_copyAttrFrom2Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedcopyAttrFrom2(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_copyAttrFrom2Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearAllAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearAllAttr() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_clearAllAttrRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearAllAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearAllAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearAllAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAllAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearAllAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_clearAllAttrRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearAttr() {
      ::grpc::Service::MarkMethodStreamed(56,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_clearAttrRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_clearAttrRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearAttr1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearAttr1() {
      ::grpc::Service::MarkMethodStreamed(57,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_clearAttr1Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearAttr1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearAttr1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearAttr1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttr1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearAttr1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_clearAttr1Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearAttrIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearAttrIx() {
      ::grpc::Service::MarkMethodStreamed(58,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_clearAttrIxRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearAttrIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearAttrIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearAttrIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAttrIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearAttrIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_clearAttrIxRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearAnim : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearAnim() {
      ::grpc::Service::MarkMethodStreamed(59,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_clearAnimRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearAnim(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearAnim() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearAnim(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearAnim(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_clearAnimRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearAnim1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearAnim1() {
      ::grpc::Service::MarkMethodStreamed(60,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_clearAnim1Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearAnim1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearAnim1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearAnim1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnim1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearAnim1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_clearAnim1Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_clearAnimIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_clearAnimIx() {
      ::grpc::Service::MarkMethodStreamed(61,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_clearAnimIxRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedclearAnimIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_clearAnimIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status clearAnimIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_clearAnimIxRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedclearAnimIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_clearAnimIxRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isAnimated : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isAnimated() {
      ::grpc::Service::MarkMethodStreamed(62,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isAnimatedRequest, ::octaneapi::ApiItem_isAnimatedResponse>* streamer) {
                       return this->StreamedisAnimated(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isAnimated() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isAnimated(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisAnimated(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isAnimatedRequest,::octaneapi::ApiItem_isAnimatedResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isAnimated1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isAnimated1() {
      ::grpc::Service::MarkMethodStreamed(63,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isAnimated1Request, ::octaneapi::ApiItem_isAnimated1Response>* streamer) {
                       return this->StreamedisAnimated1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isAnimated1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isAnimated1(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimated1Request* /*request*/, ::octaneapi::ApiItem_isAnimated1Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisAnimated1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isAnimated1Request,::octaneapi::ApiItem_isAnimated1Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isAnimatedIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isAnimatedIx() {
      ::grpc::Service::MarkMethodStreamed(64,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_isAnimatedIxRequest, ::octaneapi::ApiItem_isAnimatedIxResponse>* streamer) {
                       return this->StreamedisAnimatedIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isAnimatedIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isAnimatedIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_isAnimatedIxRequest* /*request*/, ::octaneapi::ApiItem_isAnimatedIxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisAnimatedIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_isAnimatedIxRequest,::octaneapi::ApiItem_isAnimatedIxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_evaluate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_evaluate() {
      ::grpc::Service::MarkMethodStreamed(65,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_evaluateRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedevaluate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_evaluate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status evaluate(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_evaluateRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedevaluate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_evaluateRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_expand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_expand() {
      ::grpc::Service::MarkMethodStreamed(66,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_expandRequest, ::google::protobuf::Empty>* streamer) {
                       return this->Streamedexpand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_expand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status expand(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedexpand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_expandRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_expandOutOfPin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_expandOutOfPin() {
      ::grpc::Service::MarkMethodStreamed(67,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_expandOutOfPinRequest, ::octaneapi::ApiItem_expandOutOfPinResponse>* streamer) {
                       return this->StreamedexpandOutOfPin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_expandOutOfPin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status expandOutOfPin(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_expandOutOfPinRequest* /*request*/, ::octaneapi::ApiItem_expandOutOfPinResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedexpandOutOfPin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_expandOutOfPinRequest,::octaneapi::ApiItem_expandOutOfPinResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_collapse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_collapse() {
      ::grpc::Service::MarkMethodStreamed(68,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_collapseRequest, ::octaneapi::ApiItem_collapseResponse>* streamer) {
                       return this->Streamedcollapse(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_collapse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status collapse(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_collapseRequest* /*request*/, ::octaneapi::ApiItem_collapseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status Streamedcollapse(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_collapseRequest,::octaneapi::ApiItem_collapseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_dumpAttributes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_dumpAttributes() {
      ::grpc::Service::MarkMethodStreamed(69,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_dumpAttributesRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddumpAttributes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_dumpAttributes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status dumpAttributes(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_dumpAttributesRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddumpAttributes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_dumpAttributesRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getByAttrID() {
      ::grpc::Service::MarkMethodStreamed(70,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getValueByIDRequest, ::octaneapi::ApiItem_getValueResponse>* streamer) {
                       return this->StreamedgetByAttrID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIDRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetByAttrID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getValueByIDRequest,::octaneapi::ApiItem_getValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getByName() {
      ::grpc::Service::MarkMethodStreamed(71,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getValueByNameRequest, ::octaneapi::ApiItem_getValueResponse>* streamer) {
                       return this->StreamedgetByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByNameRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getValueByNameRequest,::octaneapi::ApiItem_getValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getByIx() {
      ::grpc::Service::MarkMethodStreamed(72,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getValueByIxRequest, ::octaneapi::ApiItem_getValueResponse>* streamer) {
                       return this->StreamedgetByIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getValueByIxRequest* /*request*/, ::octaneapi::ApiItem_getValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetByIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getValueByIxRequest,::octaneapi::ApiItem_getValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getArrayByAttrID() {
      ::grpc::Service::MarkMethodStreamed(73,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getArrayByIDRequest, ::octaneapi::ApiItem_getArrayResponse>* streamer) {
                       return this->StreamedgetArrayByAttrID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetArrayByAttrID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getArrayByIDRequest,::octaneapi::ApiItem_getArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getArrayByName() {
      ::grpc::Service::MarkMethodStreamed(74,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getArrayByNameRequest, ::octaneapi::ApiItem_getArrayResponse>* streamer) {
                       return this->StreamedgetArrayByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetArrayByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getArrayByNameRequest,::octaneapi::ApiItem_getArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getArrayByIx() {
      ::grpc::Service::MarkMethodStreamed(75,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getArrayByIxRequest, ::octaneapi::ApiItem_getArrayResponse>* streamer) {
                       return this->StreamedgetArrayByIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_getArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetArrayByIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getArrayByIxRequest,::octaneapi::ApiItem_getArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setByAttrID() {
      ::grpc::Service::MarkMethodStreamed(76,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setValueByIDRequest, ::octaneapi::ApiItem_setValueResponse>* streamer) {
                       return this->StreamedsetByAttrID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIDRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetByAttrID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setValueByIDRequest,::octaneapi::ApiItem_setValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setByName() {
      ::grpc::Service::MarkMethodStreamed(77,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setValueByNameRequest, ::octaneapi::ApiItem_setValueResponse>* streamer) {
                       return this->StreamedsetByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByNameRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setValueByNameRequest,::octaneapi::ApiItem_setValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setByIx() {
      ::grpc::Service::MarkMethodStreamed(78,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setValueByIxRequest, ::octaneapi::ApiItem_setValueResponse>* streamer) {
                       return this->StreamedsetByIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setValueByIxRequest* /*request*/, ::octaneapi::ApiItem_setValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetByIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setValueByIxRequest,::octaneapi::ApiItem_setValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setArrayByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setArrayByName() {
      ::grpc::Service::MarkMethodStreamed(79,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setArrayByNameRequest, ::octaneapi::ApiItem_setArrayResponse>* streamer) {
                       return this->StreamedsetArrayByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setArrayByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setArrayByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByNameRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetArrayByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setArrayByNameRequest,::octaneapi::ApiItem_setArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setArrayByAttrID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setArrayByAttrID() {
      ::grpc::Service::MarkMethodStreamed(80,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setArrayByIDRequest, ::octaneapi::ApiItem_setArrayResponse>* streamer) {
                       return this->StreamedsetArrayByAttrID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setArrayByAttrID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setArrayByAttrID(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIDRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetArrayByAttrID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setArrayByIDRequest,::octaneapi::ApiItem_setArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setArrayByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setArrayByIx() {
      ::grpc::Service::MarkMethodStreamed(81,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setArrayByIxRequest, ::octaneapi::ApiItem_setArrayResponse>* streamer) {
                       return this->StreamedsetArrayByIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setArrayByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setArrayByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setArrayByIxRequest* /*request*/, ::octaneapi::ApiItem_setArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetArrayByIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setArrayByIxRequest,::octaneapi::ApiItem_setArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getAnimByAttr() {
      ::grpc::Service::MarkMethodStreamed(82,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getAnimByIDRequest, ::octaneapi::ApiItem_getAnimArrayResponse>* streamer) {
                       return this->StreamedgetAnimByAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetAnimByAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getAnimByIDRequest,::octaneapi::ApiItem_getAnimArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getAnimByName() {
      ::grpc::Service::MarkMethodStreamed(83,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getAnimByNameRequest, ::octaneapi::ApiItem_getAnimArrayResponse>* streamer) {
                       return this->StreamedgetAnimByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetAnimByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getAnimByNameRequest,::octaneapi::ApiItem_getAnimArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getAnimByIx() {
      ::grpc::Service::MarkMethodStreamed(84,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_getAnimByIxRequest, ::octaneapi::ApiItem_getAnimArrayResponse>* streamer) {
                       return this->StreamedgetAnimByIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_getAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_getAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetAnimByIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_getAnimByIxRequest,::octaneapi::ApiItem_getAnimArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setAnimByAttr : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setAnimByAttr() {
      ::grpc::Service::MarkMethodStreamed(85,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setAnimByIDRequest, ::octaneapi::ApiItem_setAnimArrayResponse>* streamer) {
                       return this->StreamedsetAnimByAttr(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setAnimByAttr() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setAnimByAttr(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIDRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetAnimByAttr(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setAnimByIDRequest,::octaneapi::ApiItem_setAnimArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setAnimByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setAnimByName() {
      ::grpc::Service::MarkMethodStreamed(86,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setAnimByNameRequest, ::octaneapi::ApiItem_setAnimArrayResponse>* streamer) {
                       return this->StreamedsetAnimByName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setAnimByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setAnimByName(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByNameRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetAnimByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setAnimByNameRequest,::octaneapi::ApiItem_setAnimArrayResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_setAnimByIx : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_setAnimByIx() {
      ::grpc::Service::MarkMethodStreamed(87,
        new ::grpc::internal::StreamedUnaryHandler<
          ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::octaneapi::ApiItem_setAnimByIxRequest, ::octaneapi::ApiItem_setAnimArrayResponse>* streamer) {
                       return this->StreamedsetAnimByIx(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_setAnimByIx() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status setAnimByIx(::grpc::ServerContext* /*context*/, const ::octaneapi::ApiItem_setAnimByIxRequest* /*request*/, ::octaneapi::ApiItem_setAnimArrayResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedsetAnimByIx(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::octaneapi::ApiItem_setAnimByIxRequest,::octaneapi::ApiItem_setAnimArrayResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_name<WithStreamedUnaryMethod_setName<WithStreamedUnaryMethod_position<WithStreamedUnaryMethod_setPosition<WithStreamedUnaryMethod_setUIOperationFlags<WithStreamedUnaryMethod_uiOperationFlags<WithStreamedUnaryMethod_select<WithStreamedUnaryMethod_time<WithStreamedUnaryMethod_outType<WithStreamedUnaryMethod_persistentId<WithStreamedUnaryMethod_uniqueId<WithStreamedUnaryMethod_collectItemTree<WithStreamedUnaryMethod_deleteUnconnectedItems<WithStreamedUnaryMethod_switchToFileData<WithStreamedUnaryMethod_version<WithStreamedUnaryMethod_isGraph<WithStreamedUnaryMethod_isNode<WithStreamedUnaryMethod_isLinker<WithStreamedUnaryMethod_isInputLinker<WithStreamedUnaryMethod_isOutputLinker<WithStreamedUnaryMethod_toGraph<WithStreamedUnaryMethod_toNode<WithStreamedUnaryMethod_toGraph1<WithStreamedUnaryMethod_toNode1<WithStreamedUnaryMethod_hasOwner<WithStreamedUnaryMethod_graphOwned<WithStreamedUnaryMethod_pinOwned<WithStreamedUnaryMethod_graphOwner<WithStreamedUnaryMethod_pinOwner<WithStreamedUnaryMethod_rootGraph<WithStreamedUnaryMethod_rootGraph1<WithStreamedUnaryMethod_attrCount<WithStreamedUnaryMethod_hasAttr<WithStreamedUnaryMethod_hasAttr1<WithStreamedUnaryMethod_findAttr<WithStreamedUnaryMethod_findAttr1<WithStreamedUnaryMethod_attrId<WithStreamedUnaryMethod_attrIdIx<WithStreamedUnaryMethod_attrName<WithStreamedUnaryMethod_attrNameIx<WithStreamedUnaryMethod_attrType<WithStreamedUnaryMethod_attrType1<WithStreamedUnaryMethod_attrTypeIx<WithStreamedUnaryMethod_attrInfo<WithStreamedUnaryMethod_attrInfo1<WithStreamedUnaryMethod_attrInfoIx<WithStreamedUnaryMethod_attrAreDirty<WithStreamedUnaryMethod_isDirtyAttr<WithStreamedUnaryMethod_isDirtyAttr1<WithStreamedUnaryMethod_isDirtyAttrIx<WithStreamedUnaryMethod_copyAttrFrom<WithStreamedUnaryMethod_copyAttrFrom1<WithStreamedUnaryMethod_copyAttrFromIx<WithStreamedUnaryMethod_copyAttrFrom2<WithStreamedUnaryMethod_clearAllAttr<WithStreamedUnaryMethod_clearAttr<WithStreamedUnaryMethod_clearAttr1<WithStreamedUnaryMethod_clearAttrIx<WithStreamedUnaryMethod_clearAnim<WithStreamedUnaryMethod_clearAnim1<WithStreamedUnaryMethod_clearAnimIx<WithStreamedUnaryMethod_isAnimated<WithStreamedUnaryMethod_isAnimated1<WithStreamedUnaryMethod_isAnimatedIx<WithStreamedUnaryMethod_evaluate<WithStreamedUnaryMethod_expand<WithStreamedUnaryMethod_expandOutOfPin<WithStreamedUnaryMethod_collapse<WithStreamedUnaryMethod_dumpAttributes<WithStreamedUnaryMethod_getByAttrID<WithStreamedUnaryMethod_getByName<WithStreamedUnaryMethod_getByIx<WithStreamedUnaryMethod_getArrayByAttrID<WithStreamedUnaryMethod_getArrayByName<WithStreamedUnaryMethod_getArrayByIx<WithStreamedUnaryMethod_setByAttrID<WithStreamedUnaryMethod_setByName<WithStreamedUnaryMethod_setByIx<WithStreamedUnaryMethod_setArrayByName<WithStreamedUnaryMethod_setArrayByAttrID<WithStreamedUnaryMethod_setArrayByIx<WithStreamedUnaryMethod_getAnimByAttr<WithStreamedUnaryMethod_getAnimByName<WithStreamedUnaryMethod_getAnimByIx<WithStreamedUnaryMethod_setAnimByAttr<WithStreamedUnaryMethod_setAnimByName<WithStreamedUnaryMethod_setAnimByIx<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_destroy<WithStreamedUnaryMethod_name<WithStreamedUnaryMethod_setName<WithStreamedUnaryMethod_position<WithStreamedUnaryMethod_setPosition<WithStreamedUnaryMethod_setUIOperationFlags<WithStreamedUnaryMethod_uiOperationFlags<WithStreamedUnaryMethod_select<WithStreamedUnaryMethod_time<WithStreamedUnaryMethod_outType<WithStreamedUnaryMethod_persistentId<WithStreamedUnaryMethod_uniqueId<WithStreamedUnaryMethod_collectItemTree<WithStreamedUnaryMethod_deleteUnconnectedItems<WithStreamedUnaryMethod_switchToFileData<WithStreamedUnaryMethod_version<WithStreamedUnaryMethod_isGraph<WithStreamedUnaryMethod_isNode<WithStreamedUnaryMethod_isLinker<WithStreamedUnaryMethod_isInputLinker<WithStreamedUnaryMethod_isOutputLinker<WithStreamedUnaryMethod_toGraph<WithStreamedUnaryMethod_toNode<WithStreamedUnaryMethod_toGraph1<WithStreamedUnaryMethod_toNode1<WithStreamedUnaryMethod_hasOwner<WithStreamedUnaryMethod_graphOwned<WithStreamedUnaryMethod_pinOwned<WithStreamedUnaryMethod_graphOwner<WithStreamedUnaryMethod_pinOwner<WithStreamedUnaryMethod_rootGraph<WithStreamedUnaryMethod_rootGraph1<WithStreamedUnaryMethod_attrCount<WithStreamedUnaryMethod_hasAttr<WithStreamedUnaryMethod_hasAttr1<WithStreamedUnaryMethod_findAttr<WithStreamedUnaryMethod_findAttr1<WithStreamedUnaryMethod_attrId<WithStreamedUnaryMethod_attrIdIx<WithStreamedUnaryMethod_attrName<WithStreamedUnaryMethod_attrNameIx<WithStreamedUnaryMethod_attrType<WithStreamedUnaryMethod_attrType1<WithStreamedUnaryMethod_attrTypeIx<WithStreamedUnaryMethod_attrInfo<WithStreamedUnaryMethod_attrInfo1<WithStreamedUnaryMethod_attrInfoIx<WithStreamedUnaryMethod_attrAreDirty<WithStreamedUnaryMethod_isDirtyAttr<WithStreamedUnaryMethod_isDirtyAttr1<WithStreamedUnaryMethod_isDirtyAttrIx<WithStreamedUnaryMethod_copyAttrFrom<WithStreamedUnaryMethod_copyAttrFrom1<WithStreamedUnaryMethod_copyAttrFromIx<WithStreamedUnaryMethod_copyAttrFrom2<WithStreamedUnaryMethod_clearAllAttr<WithStreamedUnaryMethod_clearAttr<WithStreamedUnaryMethod_clearAttr1<WithStreamedUnaryMethod_clearAttrIx<WithStreamedUnaryMethod_clearAnim<WithStreamedUnaryMethod_clearAnim1<WithStreamedUnaryMethod_clearAnimIx<WithStreamedUnaryMethod_isAnimated<WithStreamedUnaryMethod_isAnimated1<WithStreamedUnaryMethod_isAnimatedIx<WithStreamedUnaryMethod_evaluate<WithStreamedUnaryMethod_expand<WithStreamedUnaryMethod_expandOutOfPin<WithStreamedUnaryMethod_collapse<WithStreamedUnaryMethod_dumpAttributes<WithStreamedUnaryMethod_getByAttrID<WithStreamedUnaryMethod_getByName<WithStreamedUnaryMethod_getByIx<WithStreamedUnaryMethod_getArrayByAttrID<WithStreamedUnaryMethod_getArrayByName<WithStreamedUnaryMethod_getArrayByIx<WithStreamedUnaryMethod_setByAttrID<WithStreamedUnaryMethod_setByName<WithStreamedUnaryMethod_setByIx<WithStreamedUnaryMethod_setArrayByName<WithStreamedUnaryMethod_setArrayByAttrID<WithStreamedUnaryMethod_setArrayByIx<WithStreamedUnaryMethod_getAnimByAttr<WithStreamedUnaryMethod_getAnimByName<WithStreamedUnaryMethod_getAnimByIx<WithStreamedUnaryMethod_setAnimByAttr<WithStreamedUnaryMethod_setAnimByName<WithStreamedUnaryMethod_setAnimByIx<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};
// / ApiItem

}  // namespace octaneapi


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_apinodesystem_5f3_2eproto__INCLUDED
