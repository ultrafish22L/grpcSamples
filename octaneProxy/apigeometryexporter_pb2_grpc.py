# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import apigeometryexporter_pb2 as apigeometryexporter__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in apigeometryexporter_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ApiGeometryExporterServiceStub(object):
    """GRPC interface definition for class 'ApiGeometryExporter' from 'apigeometryexporter.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.isSupported = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/isSupported',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.isSupportedRequest.SerializeToString,
                response_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.isSupportedResponse.FromString,
                _registered_method=True)
        self.create = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/create',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.createRequest.SerializeToString,
                response_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.createResponse.FromString,
                _registered_method=True)
        self.setAspectRatio = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/setAspectRatio',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.setAspectRatioRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.setFbxOptions = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/setFbxOptions',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.setFbxOptionsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.addItem = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/addItem',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.addItemRequest.SerializeToString,
                response_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.addItemResponse.FromString,
                _registered_method=True)
        self.writeFrame = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/writeFrame',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrameRequest.SerializeToString,
                response_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrameResponse.FromString,
                _registered_method=True)
        self.writeFrame1 = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/writeFrame1',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrame1Request.SerializeToString,
                response_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrame1Response.FromString,
                _registered_method=True)
        self.writeTimeSampling = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/writeTimeSampling',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.writeTimeSamplingRequest.SerializeToString,
                response_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.writeTimeSamplingResponse.FromString,
                _registered_method=True)
        self.createGeometryArchive = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/createGeometryArchive',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.createGeometryArchiveRequest.SerializeToString,
                response_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.createGeometryArchiveResponse.FromString,
                _registered_method=True)
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiGeometryExporterService/destroy',
                request_serializer=apigeometryexporter__pb2.ApiGeometryExporter.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ApiGeometryExporterServiceServicer(object):
    """GRPC interface definition for class 'ApiGeometryExporter' from 'apigeometryexporter.h'
    """

    def isSupported(self, request, context):
        """/ Tells whether 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """/ Creates an exporter to export geometry to a file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setAspectRatio(self, request, context):
        """/ Sets the aspect ratio used for exporting cameras
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setFbxOptions(self, request, context):
        """/ Sets additional FBX options
        /
        / 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addItem(self, request, context):
        """/ Adds an item to this exporter
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def writeFrame(self, request, context):
        """/ Write the current state of the node graph to the file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def writeFrame1(self, request, context):
        """/ Write the current state of the node graph to the file, using an empty interval so no
        / sub frames will be exported for any object
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def writeTimeSampling(self, request, context):
        """/ Saves the time sampling pattern to the file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createGeometryArchive(self, request, context):
        """/ Creates a geometry archive node for this exported geometry, containing all the input pins
        / which will be created when the exported file is loaded into this node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def destroy(self, request, context):
        """/ Closes the file and destroys this exporter
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiGeometryExporterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'isSupported': grpc.unary_unary_rpc_method_handler(
                    servicer.isSupported,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.isSupportedRequest.FromString,
                    response_serializer=apigeometryexporter__pb2.ApiGeometryExporter.isSupportedResponse.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.createRequest.FromString,
                    response_serializer=apigeometryexporter__pb2.ApiGeometryExporter.createResponse.SerializeToString,
            ),
            'setAspectRatio': grpc.unary_unary_rpc_method_handler(
                    servicer.setAspectRatio,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.setAspectRatioRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'setFbxOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.setFbxOptions,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.setFbxOptionsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'addItem': grpc.unary_unary_rpc_method_handler(
                    servicer.addItem,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.addItemRequest.FromString,
                    response_serializer=apigeometryexporter__pb2.ApiGeometryExporter.addItemResponse.SerializeToString,
            ),
            'writeFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.writeFrame,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrameRequest.FromString,
                    response_serializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrameResponse.SerializeToString,
            ),
            'writeFrame1': grpc.unary_unary_rpc_method_handler(
                    servicer.writeFrame1,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrame1Request.FromString,
                    response_serializer=apigeometryexporter__pb2.ApiGeometryExporter.writeFrame1Response.SerializeToString,
            ),
            'writeTimeSampling': grpc.unary_unary_rpc_method_handler(
                    servicer.writeTimeSampling,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.writeTimeSamplingRequest.FromString,
                    response_serializer=apigeometryexporter__pb2.ApiGeometryExporter.writeTimeSamplingResponse.SerializeToString,
            ),
            'createGeometryArchive': grpc.unary_unary_rpc_method_handler(
                    servicer.createGeometryArchive,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.createGeometryArchiveRequest.FromString,
                    response_serializer=apigeometryexporter__pb2.ApiGeometryExporter.createGeometryArchiveResponse.SerializeToString,
            ),
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apigeometryexporter__pb2.ApiGeometryExporter.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiGeometryExporterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiGeometryExporterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiGeometryExporterService(object):
    """GRPC interface definition for class 'ApiGeometryExporter' from 'apigeometryexporter.h'
    """

    @staticmethod
    def isSupported(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/isSupported',
            apigeometryexporter__pb2.ApiGeometryExporter.isSupportedRequest.SerializeToString,
            apigeometryexporter__pb2.ApiGeometryExporter.isSupportedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/create',
            apigeometryexporter__pb2.ApiGeometryExporter.createRequest.SerializeToString,
            apigeometryexporter__pb2.ApiGeometryExporter.createResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setAspectRatio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/setAspectRatio',
            apigeometryexporter__pb2.ApiGeometryExporter.setAspectRatioRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setFbxOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/setFbxOptions',
            apigeometryexporter__pb2.ApiGeometryExporter.setFbxOptionsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/addItem',
            apigeometryexporter__pb2.ApiGeometryExporter.addItemRequest.SerializeToString,
            apigeometryexporter__pb2.ApiGeometryExporter.addItemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def writeFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/writeFrame',
            apigeometryexporter__pb2.ApiGeometryExporter.writeFrameRequest.SerializeToString,
            apigeometryexporter__pb2.ApiGeometryExporter.writeFrameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def writeFrame1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/writeFrame1',
            apigeometryexporter__pb2.ApiGeometryExporter.writeFrame1Request.SerializeToString,
            apigeometryexporter__pb2.ApiGeometryExporter.writeFrame1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def writeTimeSampling(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/writeTimeSampling',
            apigeometryexporter__pb2.ApiGeometryExporter.writeTimeSamplingRequest.SerializeToString,
            apigeometryexporter__pb2.ApiGeometryExporter.writeTimeSamplingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createGeometryArchive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/createGeometryArchive',
            apigeometryexporter__pb2.ApiGeometryExporter.createGeometryArchiveRequest.SerializeToString,
            apigeometryexporter__pb2.ApiGeometryExporter.createGeometryArchiveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiGeometryExporterService/destroy',
            apigeometryexporter__pb2.ApiGeometryExporter.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
