# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import octanenet_pb2 as octanenet__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in octanenet_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NetRenderStatusServiceStub(object):
    """GRPC interface definition for class 'NetDaemonInfo' from 'octanenet.h'

    GRPC interface definition for class 'NetInterfaceInfo' from 'octanenet.h'

    GRPC interface definition for class 'NetRenderSettings' from 'octanenet.h'

    GRPC interface definition for class 'NetRenderStatus' from 'octanenet.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.clear = channel.unary_unary(
                '/octaneapi.NetRenderStatusService/clear',
                request_serializer=octanenet__pb2.NetRenderStatus.clearRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class NetRenderStatusServiceServicer(object):
    """GRPC interface definition for class 'NetDaemonInfo' from 'octanenet.h'

    GRPC interface definition for class 'NetInterfaceInfo' from 'octanenet.h'

    GRPC interface definition for class 'NetRenderSettings' from 'octanenet.h'

    GRPC interface definition for class 'NetRenderStatus' from 'octanenet.h'
    """

    def clear(self, request, context):
        """/ Resets and nullifies everything
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetRenderStatusServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'clear': grpc.unary_unary_rpc_method_handler(
                    servicer.clear,
                    request_deserializer=octanenet__pb2.NetRenderStatus.clearRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.NetRenderStatusService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.NetRenderStatusService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NetRenderStatusService(object):
    """GRPC interface definition for class 'NetDaemonInfo' from 'octanenet.h'

    GRPC interface definition for class 'NetInterfaceInfo' from 'octanenet.h'

    GRPC interface definition for class 'NetRenderSettings' from 'octanenet.h'

    GRPC interface definition for class 'NetRenderStatus' from 'octanenet.h'
    """

    @staticmethod
    def clear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.NetRenderStatusService/clear',
            octanenet__pb2.NetRenderStatus.clearRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class SocketAddressServiceStub(object):
    """GRPC interface definition for class 'SocketAddress' from 'octanenet.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.isValid = channel.unary_unary(
                '/octaneapi.SocketAddressService/isValid',
                request_serializer=octanenet__pb2.SocketAddress.isValidRequest.SerializeToString,
                response_deserializer=octanenet__pb2.SocketAddress.isValidResponse.FromString,
                _registered_method=True)


class SocketAddressServiceServicer(object):
    """GRPC interface definition for class 'SocketAddress' from 'octanenet.h'
    """

    def isValid(self, request, context):
        """/ checks if this address makes sense
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SocketAddressServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'isValid': grpc.unary_unary_rpc_method_handler(
                    servicer.isValid,
                    request_deserializer=octanenet__pb2.SocketAddress.isValidRequest.FromString,
                    response_serializer=octanenet__pb2.SocketAddress.isValidResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.SocketAddressService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.SocketAddressService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SocketAddressService(object):
    """GRPC interface definition for class 'SocketAddress' from 'octanenet.h'
    """

    @staticmethod
    def isValid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.SocketAddressService/isValid',
            octanenet__pb2.SocketAddress.isValidRequest.SerializeToString,
            octanenet__pb2.SocketAddress.isValidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
