# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import apitable_pb2 as apitable__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiTableServiceStub(object):
    """GRPC interface definition for class 'ApiTable' from 'apitable.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/octaneapi.ApiTableService/create',
                request_serializer=apitable__pb2.ApiTable.createRequest.SerializeToString,
                response_deserializer=apitable__pb2.ApiTable.createResponse.FromString,
                _registered_method=True)
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiTableService/destroy',
                request_serializer=apitable__pb2.ApiTable.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.updateContent = channel.unary_unary(
                '/octaneapi.ApiTableService/updateContent',
                request_serializer=apitable__pb2.ApiTable.updateContentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.selectRow = channel.unary_unary(
                '/octaneapi.ApiTableService/selectRow',
                request_serializer=apitable__pb2.ApiTable.selectRowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.selectRangeOfRows = channel.unary_unary(
                '/octaneapi.ApiTableService/selectRangeOfRows',
                request_serializer=apitable__pb2.ApiTable.selectRangeOfRowsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.deselectRow = channel.unary_unary(
                '/octaneapi.ApiTableService/deselectRow',
                request_serializer=apitable__pb2.ApiTable.deselectRowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.deselectAllRows = channel.unary_unary(
                '/octaneapi.ApiTableService/deselectAllRows',
                request_serializer=apitable__pb2.ApiTable.deselectAllRowsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.flipRowSelection = channel.unary_unary(
                '/octaneapi.ApiTableService/flipRowSelection',
                request_serializer=apitable__pb2.ApiTable.flipRowSelectionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.isRowSelected = channel.unary_unary(
                '/octaneapi.ApiTableService/isRowSelected',
                request_serializer=apitable__pb2.ApiTable.isRowSelectedRequest.SerializeToString,
                response_deserializer=apitable__pb2.ApiTable.isRowSelectedResponse.FromString,
                _registered_method=True)
        self.numSelectedRows = channel.unary_unary(
                '/octaneapi.ApiTableService/numSelectedRows',
                request_serializer=apitable__pb2.ApiTable.numSelectedRowsRequest.SerializeToString,
                response_deserializer=apitable__pb2.ApiTable.numSelectedRowsResponse.FromString,
                _registered_method=True)
        self.selectedRow = channel.unary_unary(
                '/octaneapi.ApiTableService/selectedRow',
                request_serializer=apitable__pb2.ApiTable.selectedRowRequest.SerializeToString,
                response_deserializer=apitable__pb2.ApiTable.selectedRowResponse.FromString,
                _registered_method=True)
        self.lastRowSelected = channel.unary_unary(
                '/octaneapi.ApiTableService/lastRowSelected',
                request_serializer=apitable__pb2.ApiTable.lastRowSelectedRequest.SerializeToString,
                response_deserializer=apitable__pb2.ApiTable.lastRowSelectedResponse.FromString,
                _registered_method=True)


class ApiTableServiceServicer(object):
    """GRPC interface definition for class 'ApiTable' from 'apitable.h'
    """

    def create(self, request, context):
        """/ Creates a new table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def destroy(self, request, context):
        """/ Destroys this table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateContent(self, request, context):
        """/ Updates the content of the table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def selectRow(self, request, context):
        """/ Selects a row
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def selectRangeOfRows(self, request, context):
        """/ Selects a set of rows
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deselectRow(self, request, context):
        """/ Deselects a row
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deselectAllRows(self, request, context):
        """/ Deselects any currently selected rows
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def flipRowSelection(self, request, context):
        """/ Selects or deselects a row
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isRowSelected(self, request, context):
        """/ Checks whether a row is selected
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def numSelectedRows(self, request, context):
        """/ Returns the number of rows that are currently selected
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def selectedRow(self, request, context):
        """/ Returns the row number of a selected row
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def lastRowSelected(self, request, context):
        """/ Returns the last row that the user selected
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiTableServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=apitable__pb2.ApiTable.createRequest.FromString,
                    response_serializer=apitable__pb2.ApiTable.createResponse.SerializeToString,
            ),
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apitable__pb2.ApiTable.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'updateContent': grpc.unary_unary_rpc_method_handler(
                    servicer.updateContent,
                    request_deserializer=apitable__pb2.ApiTable.updateContentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'selectRow': grpc.unary_unary_rpc_method_handler(
                    servicer.selectRow,
                    request_deserializer=apitable__pb2.ApiTable.selectRowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'selectRangeOfRows': grpc.unary_unary_rpc_method_handler(
                    servicer.selectRangeOfRows,
                    request_deserializer=apitable__pb2.ApiTable.selectRangeOfRowsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deselectRow': grpc.unary_unary_rpc_method_handler(
                    servicer.deselectRow,
                    request_deserializer=apitable__pb2.ApiTable.deselectRowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'deselectAllRows': grpc.unary_unary_rpc_method_handler(
                    servicer.deselectAllRows,
                    request_deserializer=apitable__pb2.ApiTable.deselectAllRowsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'flipRowSelection': grpc.unary_unary_rpc_method_handler(
                    servicer.flipRowSelection,
                    request_deserializer=apitable__pb2.ApiTable.flipRowSelectionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'isRowSelected': grpc.unary_unary_rpc_method_handler(
                    servicer.isRowSelected,
                    request_deserializer=apitable__pb2.ApiTable.isRowSelectedRequest.FromString,
                    response_serializer=apitable__pb2.ApiTable.isRowSelectedResponse.SerializeToString,
            ),
            'numSelectedRows': grpc.unary_unary_rpc_method_handler(
                    servicer.numSelectedRows,
                    request_deserializer=apitable__pb2.ApiTable.numSelectedRowsRequest.FromString,
                    response_serializer=apitable__pb2.ApiTable.numSelectedRowsResponse.SerializeToString,
            ),
            'selectedRow': grpc.unary_unary_rpc_method_handler(
                    servicer.selectedRow,
                    request_deserializer=apitable__pb2.ApiTable.selectedRowRequest.FromString,
                    response_serializer=apitable__pb2.ApiTable.selectedRowResponse.SerializeToString,
            ),
            'lastRowSelected': grpc.unary_unary_rpc_method_handler(
                    servicer.lastRowSelected,
                    request_deserializer=apitable__pb2.ApiTable.lastRowSelectedRequest.FromString,
                    response_serializer=apitable__pb2.ApiTable.lastRowSelectedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiTableService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiTableService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiTableService(object):
    """GRPC interface definition for class 'ApiTable' from 'apitable.h'
    """

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/create',
            apitable__pb2.ApiTable.createRequest.SerializeToString,
            apitable__pb2.ApiTable.createResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/destroy',
            apitable__pb2.ApiTable.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/updateContent',
            apitable__pb2.ApiTable.updateContentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def selectRow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/selectRow',
            apitable__pb2.ApiTable.selectRowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def selectRangeOfRows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/selectRangeOfRows',
            apitable__pb2.ApiTable.selectRangeOfRowsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deselectRow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/deselectRow',
            apitable__pb2.ApiTable.deselectRowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deselectAllRows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/deselectAllRows',
            apitable__pb2.ApiTable.deselectAllRowsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def flipRowSelection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/flipRowSelection',
            apitable__pb2.ApiTable.flipRowSelectionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isRowSelected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/isRowSelected',
            apitable__pb2.ApiTable.isRowSelectedRequest.SerializeToString,
            apitable__pb2.ApiTable.isRowSelectedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def numSelectedRows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/numSelectedRows',
            apitable__pb2.ApiTable.numSelectedRowsRequest.SerializeToString,
            apitable__pb2.ApiTable.numSelectedRowsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def selectedRow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/selectedRow',
            apitable__pb2.ApiTable.selectedRowRequest.SerializeToString,
            apitable__pb2.ApiTable.selectedRowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def lastRowSelected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTableService/lastRowSelected',
            apitable__pb2.ApiTable.lastRowSelectedRequest.SerializeToString,
            apitable__pb2.ApiTable.lastRowSelectedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
