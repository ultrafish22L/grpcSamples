# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import apisharedsurface_pb2 as apisharedsurface__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiSharedSurfaceServiceStub(object):
    """GRPC interface definition for class 'ApiSharedSurface' from 'apisharedsurface.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createD3D11 = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/createD3D11',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.createD3D11Request.SerializeToString,
                response_deserializer=apisharedsurface__pb2.ApiSharedSurface.createD3D11Response.FromString,
                _registered_method=True)
        self.equals = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/equals',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.equalsRequest.SerializeToString,
                response_deserializer=apisharedsurface__pb2.ApiSharedSurface.equalsResponse.FromString,
                _registered_method=True)
        self.isLessThan = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/isLessThan',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.isLessThanRequest.SerializeToString,
                response_deserializer=apisharedsurface__pb2.ApiSharedSurface.isLessThanResponse.FromString,
                _registered_method=True)
        self.hash = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/hash',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.hashRequest.SerializeToString,
                response_deserializer=apisharedsurface__pb2.ApiSharedSurface.hashResponse.FromString,
                _registered_method=True)
        self.release = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/release',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.releaseRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clone = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/clone',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.cloneRequest.SerializeToString,
                response_deserializer=apisharedsurface__pb2.ApiSharedSurface.cloneResponse.FromString,
                _registered_method=True)
        self.getType = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/getType',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.getTypeRequest.SerializeToString,
                response_deserializer=apisharedsurface__pb2.ApiSharedSurface.getTypeResponse.FromString,
                _registered_method=True)
        self.getD3D11AdapterLuid = channel.unary_unary(
                '/octaneapi.ApiSharedSurfaceService/getD3D11AdapterLuid',
                request_serializer=apisharedsurface__pb2.ApiSharedSurface.getD3D11AdapterLuidRequest.SerializeToString,
                response_deserializer=apisharedsurface__pb2.ApiSharedSurface.getD3D11AdapterLuidResponse.FromString,
                _registered_method=True)


class ApiSharedSurfaceServiceServicer(object):
    """GRPC interface definition for class 'ApiSharedSurface' from 'apisharedsurface.h'
    """

    def createD3D11(self, request, context):
        """/ Creates a shared surface with a D3D11 texture
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def equals(self, request, context):
        """/ Returns whether two ApiSharedSurface pointers refer to the same underlying shared surface
        / object
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isLessThan(self, request, context):
        """/ Defines a strict total order of ApiSharedSurface pointers based on the underlying shared
        / surface object
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hash(self, request, context):
        """/ Returns a hash value that's the same for ApiSharedSurface instances that refer to the same
        / underlying shared surface object
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def release(self, request, context):
        """/ Destroys this specific ApiSharedSurface instance, decrementing the reference count of the
        / underlying shared surface object
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clone(self, request, context):
        """/ Creates a new ApiSharedSurface instance that refers to the same underlying shared surface
        / object as this instance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getType(self, request, context):
        """/ Gets the type of the shared surface
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getD3D11AdapterLuid(self, request, context):
        """/ Gets the LUID of the D3D11 adapter on which the shared texture exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiSharedSurfaceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createD3D11': grpc.unary_unary_rpc_method_handler(
                    servicer.createD3D11,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.createD3D11Request.FromString,
                    response_serializer=apisharedsurface__pb2.ApiSharedSurface.createD3D11Response.SerializeToString,
            ),
            'equals': grpc.unary_unary_rpc_method_handler(
                    servicer.equals,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.equalsRequest.FromString,
                    response_serializer=apisharedsurface__pb2.ApiSharedSurface.equalsResponse.SerializeToString,
            ),
            'isLessThan': grpc.unary_unary_rpc_method_handler(
                    servicer.isLessThan,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.isLessThanRequest.FromString,
                    response_serializer=apisharedsurface__pb2.ApiSharedSurface.isLessThanResponse.SerializeToString,
            ),
            'hash': grpc.unary_unary_rpc_method_handler(
                    servicer.hash,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.hashRequest.FromString,
                    response_serializer=apisharedsurface__pb2.ApiSharedSurface.hashResponse.SerializeToString,
            ),
            'release': grpc.unary_unary_rpc_method_handler(
                    servicer.release,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.releaseRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clone': grpc.unary_unary_rpc_method_handler(
                    servicer.clone,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.cloneRequest.FromString,
                    response_serializer=apisharedsurface__pb2.ApiSharedSurface.cloneResponse.SerializeToString,
            ),
            'getType': grpc.unary_unary_rpc_method_handler(
                    servicer.getType,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.getTypeRequest.FromString,
                    response_serializer=apisharedsurface__pb2.ApiSharedSurface.getTypeResponse.SerializeToString,
            ),
            'getD3D11AdapterLuid': grpc.unary_unary_rpc_method_handler(
                    servicer.getD3D11AdapterLuid,
                    request_deserializer=apisharedsurface__pb2.ApiSharedSurface.getD3D11AdapterLuidRequest.FromString,
                    response_serializer=apisharedsurface__pb2.ApiSharedSurface.getD3D11AdapterLuidResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiSharedSurfaceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiSharedSurfaceService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiSharedSurfaceService(object):
    """GRPC interface definition for class 'ApiSharedSurface' from 'apisharedsurface.h'
    """

    @staticmethod
    def createD3D11(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/createD3D11',
            apisharedsurface__pb2.ApiSharedSurface.createD3D11Request.SerializeToString,
            apisharedsurface__pb2.ApiSharedSurface.createD3D11Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def equals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/equals',
            apisharedsurface__pb2.ApiSharedSurface.equalsRequest.SerializeToString,
            apisharedsurface__pb2.ApiSharedSurface.equalsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isLessThan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/isLessThan',
            apisharedsurface__pb2.ApiSharedSurface.isLessThanRequest.SerializeToString,
            apisharedsurface__pb2.ApiSharedSurface.isLessThanResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def hash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/hash',
            apisharedsurface__pb2.ApiSharedSurface.hashRequest.SerializeToString,
            apisharedsurface__pb2.ApiSharedSurface.hashResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def release(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/release',
            apisharedsurface__pb2.ApiSharedSurface.releaseRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/clone',
            apisharedsurface__pb2.ApiSharedSurface.cloneRequest.SerializeToString,
            apisharedsurface__pb2.ApiSharedSurface.cloneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/getType',
            apisharedsurface__pb2.ApiSharedSurface.getTypeRequest.SerializeToString,
            apisharedsurface__pb2.ApiSharedSurface.getTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getD3D11AdapterLuid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiSharedSurfaceService/getD3D11AdapterLuid',
            apisharedsurface__pb2.ApiSharedSurface.getD3D11AdapterLuidRequest.SerializeToString,
            apisharedsurface__pb2.ApiSharedSurface.getD3D11AdapterLuidResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
