# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import apinodesystem_6_pb2 as apinodesystem__6__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiNodeGraphServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create1 = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/create1',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.createRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.createResponse.FromString,
                _registered_method=True)
        self.info1 = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/info1',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.infoRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.infoResponse.FromString,
                _registered_method=True)
        self.type1 = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/type1',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.typeRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.typeResponse.FromString,
                _registered_method=True)
        self.getOwnedItems = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/getOwnedItems',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.getOwnedItemsRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getOwnedItemsResponse.FromString,
                _registered_method=True)
        self.getInputNodes = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/getInputNodes',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.getInputNodesRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getInputNodesResponse.FromString,
                _registered_method=True)
        self.getOutputNodes = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/getOutputNodes',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.getOutputNodesRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getOutputNodesResponse.FromString,
                _registered_method=True)
        self.findNodes = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/findNodes',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.findNodesRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findNodesResponse.FromString,
                _registered_method=True)
        self.findFirstNode = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/findFirstNode',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstNodeRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstNodeResponse.FromString,
                _registered_method=True)
        self.findFirstOutputNode = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/findFirstOutputNode',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstOutputNodeRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstOutputNodeResponse.FromString,
                _registered_method=True)
        self.findItemsByName = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/findItemsByName',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.findItemsByNameRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findItemsByNameResponse.FromString,
                _registered_method=True)
        self.setLinearTimeTransform = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/setLinearTimeTransform',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.setLinearTimeTransformRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.timeTransform = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/timeTransform',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.timeTransformRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.timeTransformResponse.FromString,
                _registered_method=True)
        self.clearTimeTransform = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/clearTimeTransform',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.clearTimeTransformRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.getAssetPaths = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/getAssetPaths',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.getAssetPathsRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getAssetPathsResponse.FromString,
                _registered_method=True)
        self.recenter = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/recenter',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.recenterRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clear = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/clear',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.clearRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.copyFrom1 = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/copyFrom1',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyFromRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyFromResponse.FromString,
                _registered_method=True)
        self.copyFrom11 = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/copyFrom11',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom1Request.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom1Response.FromString,
                _registered_method=True)
        self.copyItemTree = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/copyItemTree',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyItemTreeRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyItemTreeResponse.FromString,
                _registered_method=True)
        self.copyFrom2 = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/copyFrom2',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom2Request.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom2Response.FromString,
                _registered_method=True)
        self.groupItems = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/groupItems',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.groupItemsRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.groupItemsResponse.FromString,
                _registered_method=True)
        self.ungroup = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/ungroup',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.ungroupRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.ungroupResponse.FromString,
                _registered_method=True)
        self.unfold = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/unfold',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.unfoldRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.showWindow = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/showWindow',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.showWindowRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.showWindowResponse.FromString,
                _registered_method=True)
        self.closeWindow = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/closeWindow',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.closeWindowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.showDbWindow = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/showDbWindow',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.showDbWindowRequest.SerializeToString,
                response_deserializer=apinodesystem__6__pb2.ApiNodeGraph.showDbWindowResponse.FromString,
                _registered_method=True)
        self.closeDbWindow = channel.unary_unary(
                '/octaneapi.ApiNodeGraphService/closeDbWindow',
                request_serializer=apinodesystem__6__pb2.ApiNodeGraph.closeDbWindowRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ApiNodeGraphServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create1(self, request, context):
        """/ Creates a new graph of the specified type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def info1(self, request, context):
        """/ Returns info for this graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def type1(self, request, context):
        """/ Returns this graph's type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getOwnedItems(self, request, context):
        """/ Returns the owned items of the node graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getInputNodes(self, request, context):
        """/ Returns the list of input nodes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getOutputNodes(self, request, context):
        """/ Returns the list of output nodes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findNodes(self, request, context):
        """/ Returns a list with all nodes in the graph of the given type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findFirstNode(self, request, context):
        """/ Returns the first node of the specified type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findFirstOutputNode(self, request, context):
        """/ Returns the first output linker of the specified pin type
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findItemsByName(self, request, context):
        """/ Find all items with a given name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setLinearTimeTransform(self, request, context):
        """/ Assigns linear time transformation to the animation of the nested owned items
        / Can be used to offset or scale the animation playback
        / 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def timeTransform(self, request, context):
        """/ Returns current ApiAnimationTimeTransform
        / or NULL if it doesn't have one
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearTimeTransform(self, request, context):
        """/ Removes animation time transformation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAssetPaths(self, request, context):
        """/ Returns an array of null-terminated strings containing all paths of the assets
        / currently used by the current node graph
        / 
        / 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def recenter(self, request, context):
        """/ Recenter all items in this graph around the given position
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clear(self, request, context):
        """/ Clears the node graph, i
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyFrom1(self, request, context):
        """/ Copies the items from the source graph into this graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyFrom11(self, request, context):
        """/ Copies one item into the node graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyItemTree(self, request, context):
        """/ Copies the tree starting at rootItem into this graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyFrom2(self, request, context):
        """/ Copies an array of items into the node graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def groupItems(self, request, context):
        """/ Replace a group of node items with a group node containing a copy of these items
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ungroup(self, request, context):
        """/ Replaces this node graph with a copy of its content in its parent node graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unfold(self, request, context):
        """/ Unfolds the specified node graph if it's inspectable, i
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def showWindow(self, request, context):
        """/ Shows the node graph in a window, allowing the user to edit this node graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def closeWindow(self, request, context):
        """/ Closes the opened node graph editor window (if any)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def showDbWindow(self, request, context):
        """/ Opens a dialog window where the user can import items from liveDB and localDB
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def closeDbWindow(self, request, context):
        """/ Closes the currently opened DB window (if any)
        /
        / 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiNodeGraphServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create1': grpc.unary_unary_rpc_method_handler(
                    servicer.create1,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.createRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.createResponse.SerializeToString,
            ),
            'info1': grpc.unary_unary_rpc_method_handler(
                    servicer.info1,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.infoRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.infoResponse.SerializeToString,
            ),
            'type1': grpc.unary_unary_rpc_method_handler(
                    servicer.type1,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.typeRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.typeResponse.SerializeToString,
            ),
            'getOwnedItems': grpc.unary_unary_rpc_method_handler(
                    servicer.getOwnedItems,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getOwnedItemsRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.getOwnedItemsResponse.SerializeToString,
            ),
            'getInputNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.getInputNodes,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getInputNodesRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.getInputNodesResponse.SerializeToString,
            ),
            'getOutputNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.getOutputNodes,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getOutputNodesRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.getOutputNodesResponse.SerializeToString,
            ),
            'findNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.findNodes,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findNodesRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.findNodesResponse.SerializeToString,
            ),
            'findFirstNode': grpc.unary_unary_rpc_method_handler(
                    servicer.findFirstNode,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstNodeRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstNodeResponse.SerializeToString,
            ),
            'findFirstOutputNode': grpc.unary_unary_rpc_method_handler(
                    servicer.findFirstOutputNode,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstOutputNodeRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.findFirstOutputNodeResponse.SerializeToString,
            ),
            'findItemsByName': grpc.unary_unary_rpc_method_handler(
                    servicer.findItemsByName,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.findItemsByNameRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.findItemsByNameResponse.SerializeToString,
            ),
            'setLinearTimeTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.setLinearTimeTransform,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.setLinearTimeTransformRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'timeTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.timeTransform,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.timeTransformRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.timeTransformResponse.SerializeToString,
            ),
            'clearTimeTransform': grpc.unary_unary_rpc_method_handler(
                    servicer.clearTimeTransform,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.clearTimeTransformRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getAssetPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.getAssetPaths,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.getAssetPathsRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.getAssetPathsResponse.SerializeToString,
            ),
            'recenter': grpc.unary_unary_rpc_method_handler(
                    servicer.recenter,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.recenterRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clear': grpc.unary_unary_rpc_method_handler(
                    servicer.clear,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.clearRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'copyFrom1': grpc.unary_unary_rpc_method_handler(
                    servicer.copyFrom1,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyFromRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyFromResponse.SerializeToString,
            ),
            'copyFrom11': grpc.unary_unary_rpc_method_handler(
                    servicer.copyFrom11,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom1Request.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom1Response.SerializeToString,
            ),
            'copyItemTree': grpc.unary_unary_rpc_method_handler(
                    servicer.copyItemTree,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyItemTreeRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyItemTreeResponse.SerializeToString,
            ),
            'copyFrom2': grpc.unary_unary_rpc_method_handler(
                    servicer.copyFrom2,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom2Request.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.copyFrom2Response.SerializeToString,
            ),
            'groupItems': grpc.unary_unary_rpc_method_handler(
                    servicer.groupItems,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.groupItemsRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.groupItemsResponse.SerializeToString,
            ),
            'ungroup': grpc.unary_unary_rpc_method_handler(
                    servicer.ungroup,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.ungroupRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.ungroupResponse.SerializeToString,
            ),
            'unfold': grpc.unary_unary_rpc_method_handler(
                    servicer.unfold,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.unfoldRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'showWindow': grpc.unary_unary_rpc_method_handler(
                    servicer.showWindow,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.showWindowRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.showWindowResponse.SerializeToString,
            ),
            'closeWindow': grpc.unary_unary_rpc_method_handler(
                    servicer.closeWindow,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.closeWindowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'showDbWindow': grpc.unary_unary_rpc_method_handler(
                    servicer.showDbWindow,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.showDbWindowRequest.FromString,
                    response_serializer=apinodesystem__6__pb2.ApiNodeGraph.showDbWindowResponse.SerializeToString,
            ),
            'closeDbWindow': grpc.unary_unary_rpc_method_handler(
                    servicer.closeDbWindow,
                    request_deserializer=apinodesystem__6__pb2.ApiNodeGraph.closeDbWindowRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiNodeGraphService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiNodeGraphService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiNodeGraphService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/create1',
            apinodesystem__6__pb2.ApiNodeGraph.createRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.createResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def info1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/info1',
            apinodesystem__6__pb2.ApiNodeGraph.infoRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.infoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def type1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/type1',
            apinodesystem__6__pb2.ApiNodeGraph.typeRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.typeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getOwnedItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/getOwnedItems',
            apinodesystem__6__pb2.ApiNodeGraph.getOwnedItemsRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.getOwnedItemsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getInputNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/getInputNodes',
            apinodesystem__6__pb2.ApiNodeGraph.getInputNodesRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.getInputNodesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getOutputNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/getOutputNodes',
            apinodesystem__6__pb2.ApiNodeGraph.getOutputNodesRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.getOutputNodesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/findNodes',
            apinodesystem__6__pb2.ApiNodeGraph.findNodesRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.findNodesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findFirstNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/findFirstNode',
            apinodesystem__6__pb2.ApiNodeGraph.findFirstNodeRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.findFirstNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findFirstOutputNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/findFirstOutputNode',
            apinodesystem__6__pb2.ApiNodeGraph.findFirstOutputNodeRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.findFirstOutputNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findItemsByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/findItemsByName',
            apinodesystem__6__pb2.ApiNodeGraph.findItemsByNameRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.findItemsByNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setLinearTimeTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/setLinearTimeTransform',
            apinodesystem__6__pb2.ApiNodeGraph.setLinearTimeTransformRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def timeTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/timeTransform',
            apinodesystem__6__pb2.ApiNodeGraph.timeTransformRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.timeTransformResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearTimeTransform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/clearTimeTransform',
            apinodesystem__6__pb2.ApiNodeGraph.clearTimeTransformRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getAssetPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/getAssetPaths',
            apinodesystem__6__pb2.ApiNodeGraph.getAssetPathsRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.getAssetPathsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def recenter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/recenter',
            apinodesystem__6__pb2.ApiNodeGraph.recenterRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/clear',
            apinodesystem__6__pb2.ApiNodeGraph.clearRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyFrom1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/copyFrom1',
            apinodesystem__6__pb2.ApiNodeGraph.copyFromRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.copyFromResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyFrom11(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/copyFrom11',
            apinodesystem__6__pb2.ApiNodeGraph.copyFrom1Request.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.copyFrom1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyItemTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/copyItemTree',
            apinodesystem__6__pb2.ApiNodeGraph.copyItemTreeRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.copyItemTreeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyFrom2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/copyFrom2',
            apinodesystem__6__pb2.ApiNodeGraph.copyFrom2Request.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.copyFrom2Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def groupItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/groupItems',
            apinodesystem__6__pb2.ApiNodeGraph.groupItemsRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.groupItemsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ungroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/ungroup',
            apinodesystem__6__pb2.ApiNodeGraph.ungroupRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.ungroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unfold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/unfold',
            apinodesystem__6__pb2.ApiNodeGraph.unfoldRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def showWindow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/showWindow',
            apinodesystem__6__pb2.ApiNodeGraph.showWindowRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.showWindowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def closeWindow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/closeWindow',
            apinodesystem__6__pb2.ApiNodeGraph.closeWindowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def showDbWindow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/showDbWindow',
            apinodesystem__6__pb2.ApiNodeGraph.showDbWindowRequest.SerializeToString,
            apinodesystem__6__pb2.ApiNodeGraph.showDbWindowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def closeDbWindow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiNodeGraphService/closeDbWindow',
            apinodesystem__6__pb2.ApiNodeGraph.closeDbWindowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
