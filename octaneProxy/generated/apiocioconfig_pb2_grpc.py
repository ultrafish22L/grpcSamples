# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import apiocioconfig_pb2 as apiocioconfig__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiOcioConfigServiceStub(object):
    """GRPC interface definition for class 'ApiOcioConfig' from 'apiocioconfig.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/create',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.createRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.createResponse.FromString,
                _registered_method=True)
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/destroy',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clone = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/clone',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.cloneRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.cloneResponse.FromString,
                _registered_method=True)
        self.getRoleCount = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getRoleCount',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getRoleCountRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getRoleCountResponse.FromString,
                _registered_method=True)
        self.getRoleName = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getRoleName',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getRoleNameRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getRoleNameResponse.FromString,
                _registered_method=True)
        self.getRoleColorSpaceName = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getRoleColorSpaceName',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getRoleColorSpaceNameRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getRoleColorSpaceNameResponse.FromString,
                _registered_method=True)
        self.getColorSpaceCount = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getColorSpaceCount',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceCountRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceCountResponse.FromString,
                _registered_method=True)
        self.getColorSpaceName = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getColorSpaceName',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceNameRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceNameResponse.FromString,
                _registered_method=True)
        self.getColorSpaceFamilyComponentCount = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getColorSpaceFamilyComponentCount',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentCountRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentCountResponse.FromString,
                _registered_method=True)
        self.getColorSpaceFamilyComponent = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getColorSpaceFamilyComponent',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentResponse.FromString,
                _registered_method=True)
        self.getDisplayCount = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getDisplayCount',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayCountRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayCountResponse.FromString,
                _registered_method=True)
        self.getDisplayName = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getDisplayName',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayNameRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayNameResponse.FromString,
                _registered_method=True)
        self.getDisplayViewCount = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getDisplayViewCount',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewCountRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewCountResponse.FromString,
                _registered_method=True)
        self.getDisplayViewName = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getDisplayViewName',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewNameRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewNameResponse.FromString,
                _registered_method=True)
        self.getLookCount = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getLookCount',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getLookCountRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getLookCountResponse.FromString,
                _registered_method=True)
        self.getLookName = channel.unary_unary(
                '/octaneapi.ApiOcioConfigService/getLookName',
                request_serializer=apiocioconfig__pb2.ApiOcioConfig.getLookNameRequest.SerializeToString,
                response_deserializer=apiocioconfig__pb2.ApiOcioConfig.getLookNameResponse.FromString,
                _registered_method=True)


class ApiOcioConfigServiceServicer(object):
    """GRPC interface definition for class 'ApiOcioConfig' from 'apiocioconfig.h'
    """

    def create(self, request, context):
        """/ Loads an OCIO config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clone(self, request, context):
        """/ 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRoleCount(self, request, context):
        """/ Gets the number of roles in the config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRoleName(self, request, context):
        """/ Gets the name of a role
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRoleColorSpaceName(self, request, context):
        """/ Gets the name of the color space for which a role is an alias
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getColorSpaceCount(self, request, context):
        """/ Gets the number of color spaces in the config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getColorSpaceName(self, request, context):
        """/ Gets the name of a color space
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getColorSpaceFamilyComponentCount(self, request, context):
        """/ Gets the number of components the family of a color space has
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getColorSpaceFamilyComponent(self, request, context):
        """/ Gets a component of the family of a color space
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDisplayCount(self, request, context):
        """/ Gets the number of displays in the config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDisplayName(self, request, context):
        """/ Gets the name of a display
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDisplayViewCount(self, request, context):
        """/ Gets the number of views a display has
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDisplayViewName(self, request, context):
        """/ Gets the name of a view
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getLookCount(self, request, context):
        """/ Gets the number of looks in the config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getLookName(self, request, context):
        """/ Gets the name of a look
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiOcioConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.createRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.createResponse.SerializeToString,
            ),
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clone': grpc.unary_unary_rpc_method_handler(
                    servicer.clone,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.cloneRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.cloneResponse.SerializeToString,
            ),
            'getRoleCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getRoleCount,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getRoleCountRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getRoleCountResponse.SerializeToString,
            ),
            'getRoleName': grpc.unary_unary_rpc_method_handler(
                    servicer.getRoleName,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getRoleNameRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getRoleNameResponse.SerializeToString,
            ),
            'getRoleColorSpaceName': grpc.unary_unary_rpc_method_handler(
                    servicer.getRoleColorSpaceName,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getRoleColorSpaceNameRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getRoleColorSpaceNameResponse.SerializeToString,
            ),
            'getColorSpaceCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getColorSpaceCount,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceCountRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceCountResponse.SerializeToString,
            ),
            'getColorSpaceName': grpc.unary_unary_rpc_method_handler(
                    servicer.getColorSpaceName,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceNameRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceNameResponse.SerializeToString,
            ),
            'getColorSpaceFamilyComponentCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getColorSpaceFamilyComponentCount,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentCountRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentCountResponse.SerializeToString,
            ),
            'getColorSpaceFamilyComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.getColorSpaceFamilyComponent,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentResponse.SerializeToString,
            ),
            'getDisplayCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getDisplayCount,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayCountRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayCountResponse.SerializeToString,
            ),
            'getDisplayName': grpc.unary_unary_rpc_method_handler(
                    servicer.getDisplayName,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayNameRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayNameResponse.SerializeToString,
            ),
            'getDisplayViewCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getDisplayViewCount,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewCountRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewCountResponse.SerializeToString,
            ),
            'getDisplayViewName': grpc.unary_unary_rpc_method_handler(
                    servicer.getDisplayViewName,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewNameRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getDisplayViewNameResponse.SerializeToString,
            ),
            'getLookCount': grpc.unary_unary_rpc_method_handler(
                    servicer.getLookCount,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getLookCountRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getLookCountResponse.SerializeToString,
            ),
            'getLookName': grpc.unary_unary_rpc_method_handler(
                    servicer.getLookName,
                    request_deserializer=apiocioconfig__pb2.ApiOcioConfig.getLookNameRequest.FromString,
                    response_serializer=apiocioconfig__pb2.ApiOcioConfig.getLookNameResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiOcioConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiOcioConfigService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiOcioConfigService(object):
    """GRPC interface definition for class 'ApiOcioConfig' from 'apiocioconfig.h'
    """

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/create',
            apiocioconfig__pb2.ApiOcioConfig.createRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.createResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/destroy',
            apiocioconfig__pb2.ApiOcioConfig.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/clone',
            apiocioconfig__pb2.ApiOcioConfig.cloneRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.cloneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getRoleCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getRoleCount',
            apiocioconfig__pb2.ApiOcioConfig.getRoleCountRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getRoleCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getRoleName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getRoleName',
            apiocioconfig__pb2.ApiOcioConfig.getRoleNameRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getRoleNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getRoleColorSpaceName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getRoleColorSpaceName',
            apiocioconfig__pb2.ApiOcioConfig.getRoleColorSpaceNameRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getRoleColorSpaceNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getColorSpaceCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getColorSpaceCount',
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceCountRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getColorSpaceName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getColorSpaceName',
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceNameRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getColorSpaceFamilyComponentCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getColorSpaceFamilyComponentCount',
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentCountRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getColorSpaceFamilyComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getColorSpaceFamilyComponent',
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getColorSpaceFamilyComponentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getDisplayCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getDisplayCount',
            apiocioconfig__pb2.ApiOcioConfig.getDisplayCountRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getDisplayCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getDisplayName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getDisplayName',
            apiocioconfig__pb2.ApiOcioConfig.getDisplayNameRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getDisplayNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getDisplayViewCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getDisplayViewCount',
            apiocioconfig__pb2.ApiOcioConfig.getDisplayViewCountRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getDisplayViewCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getDisplayViewName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getDisplayViewName',
            apiocioconfig__pb2.ApiOcioConfig.getDisplayViewNameRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getDisplayViewNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getLookCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getLookCount',
            apiocioconfig__pb2.ApiOcioConfig.getLookCountRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getLookCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getLookName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioConfigService/getLookName',
            apiocioconfig__pb2.ApiOcioConfig.getLookNameRequest.SerializeToString,
            apiocioconfig__pb2.ApiOcioConfig.getLookNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
