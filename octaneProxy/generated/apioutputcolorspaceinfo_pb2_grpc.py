# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import apioutputcolorspaceinfo_pb2 as apioutputcolorspaceinfo__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiOutputColorSpaceInfoServiceStub(object):
    """GRPC interface definition for class 'ApiOutputColorSpaceInfo' from 'apioutputcolorspaceinfo.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createKnownColorSpace = channel.unary_unary(
                '/octaneapi.ApiOutputColorSpaceInfoService/createKnownColorSpace',
                request_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createKnownColorSpaceRequest.SerializeToString,
                response_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createKnownColorSpaceResponse.FromString,
                _registered_method=True)
        self.createOcioColorSpace = channel.unary_unary(
                '/octaneapi.ApiOutputColorSpaceInfoService/createOcioColorSpace',
                request_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioColorSpaceRequest.SerializeToString,
                response_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioColorSpaceResponse.FromString,
                _registered_method=True)
        self.createOcioView = channel.unary_unary(
                '/octaneapi.ApiOutputColorSpaceInfoService/createOcioView',
                request_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioViewRequest.SerializeToString,
                response_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioViewResponse.FromString,
                _registered_method=True)
        self.createUseImagerSettings = channel.unary_unary(
                '/octaneapi.ApiOutputColorSpaceInfoService/createUseImagerSettings',
                request_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createUseImagerSettingsRequest.SerializeToString,
                response_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createUseImagerSettingsResponse.FromString,
                _registered_method=True)
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiOutputColorSpaceInfoService/destroy',
                request_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clone = channel.unary_unary(
                '/octaneapi.ApiOutputColorSpaceInfoService/clone',
                request_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.cloneRequest.SerializeToString,
                response_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.cloneResponse.FromString,
                _registered_method=True)
        self.equals = channel.unary_unary(
                '/octaneapi.ApiOutputColorSpaceInfoService/equals',
                request_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.equalsRequest.SerializeToString,
                response_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.equalsResponse.FromString,
                _registered_method=True)


class ApiOutputColorSpaceInfoServiceServicer(object):
    """GRPC interface definition for class 'ApiOutputColorSpaceInfo' from 'apioutputcolorspaceinfo.h'
    """

    def createKnownColorSpace(self, request, context):
        """/ Makes an info to produce output in a known color space
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createOcioColorSpace(self, request, context):
        """/ Makes an info to produce output in an OCIO color space
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createOcioView(self, request, context):
        """/ Makes an info to produce output using an OCIO view
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createUseImagerSettings(self, request, context):
        """/ Makes an info to produce output in whatever is specified in the imager node of the render
        / target being rendered
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def destroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clone(self, request, context):
        """/ 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def equals(self, request, context):
        """/ Returns whether two ApiOutputColorSpaceInfo instances are equivalent
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiOutputColorSpaceInfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createKnownColorSpace': grpc.unary_unary_rpc_method_handler(
                    servicer.createKnownColorSpace,
                    request_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createKnownColorSpaceRequest.FromString,
                    response_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createKnownColorSpaceResponse.SerializeToString,
            ),
            'createOcioColorSpace': grpc.unary_unary_rpc_method_handler(
                    servicer.createOcioColorSpace,
                    request_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioColorSpaceRequest.FromString,
                    response_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioColorSpaceResponse.SerializeToString,
            ),
            'createOcioView': grpc.unary_unary_rpc_method_handler(
                    servicer.createOcioView,
                    request_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioViewRequest.FromString,
                    response_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioViewResponse.SerializeToString,
            ),
            'createUseImagerSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.createUseImagerSettings,
                    request_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createUseImagerSettingsRequest.FromString,
                    response_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createUseImagerSettingsResponse.SerializeToString,
            ),
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clone': grpc.unary_unary_rpc_method_handler(
                    servicer.clone,
                    request_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.cloneRequest.FromString,
                    response_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.cloneResponse.SerializeToString,
            ),
            'equals': grpc.unary_unary_rpc_method_handler(
                    servicer.equals,
                    request_deserializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.equalsRequest.FromString,
                    response_serializer=apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.equalsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiOutputColorSpaceInfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiOutputColorSpaceInfoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiOutputColorSpaceInfoService(object):
    """GRPC interface definition for class 'ApiOutputColorSpaceInfo' from 'apioutputcolorspaceinfo.h'
    """

    @staticmethod
    def createKnownColorSpace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOutputColorSpaceInfoService/createKnownColorSpace',
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createKnownColorSpaceRequest.SerializeToString,
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createKnownColorSpaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createOcioColorSpace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOutputColorSpaceInfoService/createOcioColorSpace',
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioColorSpaceRequest.SerializeToString,
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioColorSpaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createOcioView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOutputColorSpaceInfoService/createOcioView',
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioViewRequest.SerializeToString,
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createOcioViewResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createUseImagerSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOutputColorSpaceInfoService/createUseImagerSettings',
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createUseImagerSettingsRequest.SerializeToString,
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.createUseImagerSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOutputColorSpaceInfoService/destroy',
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOutputColorSpaceInfoService/clone',
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.cloneRequest.SerializeToString,
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.cloneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def equals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOutputColorSpaceInfoService/equals',
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.equalsRequest.SerializeToString,
            apioutputcolorspaceinfo__pb2.ApiOutputColorSpaceInfo.equalsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
