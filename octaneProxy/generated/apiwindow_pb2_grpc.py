# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import apiwindow_pb2 as apiwindow__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiWindowServiceStub(object):
    """GRPC interface definition for class 'ApiWindow' from 'apiwindow.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/octaneapi.ApiWindowService/create',
                request_serializer=apiwindow__pb2.ApiWindow.createRequest.SerializeToString,
                response_deserializer=apiwindow__pb2.ApiWindow.createResponse.FromString,
                _registered_method=True)
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiWindowService/destroy',
                request_serializer=apiwindow__pb2.ApiWindow.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.addContentComponent = channel.unary_unary(
                '/octaneapi.ApiWindowService/addContentComponent',
                request_serializer=apiwindow__pb2.ApiWindow.addContentComponentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.show = channel.unary_unary(
                '/octaneapi.ApiWindowService/show',
                request_serializer=apiwindow__pb2.ApiWindow.showRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.hide = channel.unary_unary(
                '/octaneapi.ApiWindowService/hide',
                request_serializer=apiwindow__pb2.ApiWindow.hideRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.visible = channel.unary_unary(
                '/octaneapi.ApiWindowService/visible',
                request_serializer=apiwindow__pb2.ApiWindow.visibleRequest.SerializeToString,
                response_deserializer=apiwindow__pb2.ApiWindow.visibleResponse.FromString,
                _registered_method=True)
        self.nativeHandle = channel.unary_unary(
                '/octaneapi.ApiWindowService/nativeHandle',
                request_serializer=apiwindow__pb2.ApiWindow.nativeHandleRequest.SerializeToString,
                response_deserializer=apiwindow__pb2.ApiWindow.nativeHandleResponse.FromString,
                _registered_method=True)


class ApiWindowServiceServicer(object):
    """GRPC interface definition for class 'ApiWindow' from 'apiwindow.h'
    """

    def create(self, request, context):
        """/ Creates a new ApiWindow
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def destroy(self, request, context):
        """/ Destroys this window
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addContentComponent(self, request, context):
        """/ Windows only have a single content component
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def show(self, request, context):
        """/ Shows this window
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hide(self, request, context):
        """/ Hides this window again
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def visible(self, request, context):
        """/ Returns whether this window is visible
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nativeHandle(self, request, context):
        """/ Returns the native window handle of the window
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiWindowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=apiwindow__pb2.ApiWindow.createRequest.FromString,
                    response_serializer=apiwindow__pb2.ApiWindow.createResponse.SerializeToString,
            ),
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apiwindow__pb2.ApiWindow.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'addContentComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.addContentComponent,
                    request_deserializer=apiwindow__pb2.ApiWindow.addContentComponentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'show': grpc.unary_unary_rpc_method_handler(
                    servicer.show,
                    request_deserializer=apiwindow__pb2.ApiWindow.showRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'hide': grpc.unary_unary_rpc_method_handler(
                    servicer.hide,
                    request_deserializer=apiwindow__pb2.ApiWindow.hideRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'visible': grpc.unary_unary_rpc_method_handler(
                    servicer.visible,
                    request_deserializer=apiwindow__pb2.ApiWindow.visibleRequest.FromString,
                    response_serializer=apiwindow__pb2.ApiWindow.visibleResponse.SerializeToString,
            ),
            'nativeHandle': grpc.unary_unary_rpc_method_handler(
                    servicer.nativeHandle,
                    request_deserializer=apiwindow__pb2.ApiWindow.nativeHandleRequest.FromString,
                    response_serializer=apiwindow__pb2.ApiWindow.nativeHandleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiWindowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiWindowService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiWindowService(object):
    """GRPC interface definition for class 'ApiWindow' from 'apiwindow.h'
    """

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiWindowService/create',
            apiwindow__pb2.ApiWindow.createRequest.SerializeToString,
            apiwindow__pb2.ApiWindow.createResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiWindowService/destroy',
            apiwindow__pb2.ApiWindow.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addContentComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiWindowService/addContentComponent',
            apiwindow__pb2.ApiWindow.addContentComponentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def show(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiWindowService/show',
            apiwindow__pb2.ApiWindow.showRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def hide(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiWindowService/hide',
            apiwindow__pb2.ApiWindow.hideRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def visible(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiWindowService/visible',
            apiwindow__pb2.ApiWindow.visibleRequest.SerializeToString,
            apiwindow__pb2.ApiWindow.visibleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def nativeHandle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiWindowService/nativeHandle',
            apiwindow__pb2.ApiWindow.nativeHandleRequest.SerializeToString,
            apiwindow__pb2.ApiWindow.nativeHandleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
