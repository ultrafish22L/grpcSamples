# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import apinodesystem_3_pb2 as apinodesystem__3__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApiItemServiceStub(object):
    """/ ApiItem
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiItemService/destroy',
                request_serializer=apinodesystem__3__pb2.ApiItem.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.name = channel.unary_unary(
                '/octaneapi.ApiItemService/name',
                request_serializer=apinodesystem__3__pb2.ApiItem.nameRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.nameResponse.FromString,
                _registered_method=True)
        self.position = channel.unary_unary(
                '/octaneapi.ApiItemService/position',
                request_serializer=apinodesystem__3__pb2.ApiItem.positionRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.positionResponse.FromString,
                _registered_method=True)
        self.uiOperationFlags = channel.unary_unary(
                '/octaneapi.ApiItemService/uiOperationFlags',
                request_serializer=apinodesystem__3__pb2.ApiItem.uiOperationFlagsRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.uiOperationFlagsResponse.FromString,
                _registered_method=True)
        self.select = channel.unary_unary(
                '/octaneapi.ApiItemService/select',
                request_serializer=apinodesystem__3__pb2.ApiItem.selectRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.time = channel.unary_unary(
                '/octaneapi.ApiItemService/time',
                request_serializer=apinodesystem__3__pb2.ApiItem.timeRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.timeResponse.FromString,
                _registered_method=True)
        self.outType = channel.unary_unary(
                '/octaneapi.ApiItemService/outType',
                request_serializer=apinodesystem__3__pb2.ApiItem.outTypeRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.outTypeResponse.FromString,
                _registered_method=True)
        self.persistentId = channel.unary_unary(
                '/octaneapi.ApiItemService/persistentId',
                request_serializer=apinodesystem__3__pb2.ApiItem.persistentIdRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.persistentIdResponse.FromString,
                _registered_method=True)
        self.uniqueId = channel.unary_unary(
                '/octaneapi.ApiItemService/uniqueId',
                request_serializer=apinodesystem__3__pb2.ApiItem.uniqueIdRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.uniqueIdResponse.FromString,
                _registered_method=True)
        self.collectItemTree = channel.unary_unary(
                '/octaneapi.ApiItemService/collectItemTree',
                request_serializer=apinodesystem__3__pb2.ApiItem.collectItemTreeRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.collectItemTreeResponse.FromString,
                _registered_method=True)
        self.deleteUnconnectedItems = channel.unary_unary(
                '/octaneapi.ApiItemService/deleteUnconnectedItems',
                request_serializer=apinodesystem__3__pb2.ApiItem.deleteUnconnectedItemsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.switchToFileData = channel.unary_unary(
                '/octaneapi.ApiItemService/switchToFileData',
                request_serializer=apinodesystem__3__pb2.ApiItem.switchToFileDataRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.version = channel.unary_unary(
                '/octaneapi.ApiItemService/version',
                request_serializer=apinodesystem__3__pb2.ApiItem.versionRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.versionResponse.FromString,
                _registered_method=True)
        self.isGraph = channel.unary_unary(
                '/octaneapi.ApiItemService/isGraph',
                request_serializer=apinodesystem__3__pb2.ApiItem.isGraphRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isGraphResponse.FromString,
                _registered_method=True)
        self.isNode = channel.unary_unary(
                '/octaneapi.ApiItemService/isNode',
                request_serializer=apinodesystem__3__pb2.ApiItem.isNodeRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isNodeResponse.FromString,
                _registered_method=True)
        self.isLinker = channel.unary_unary(
                '/octaneapi.ApiItemService/isLinker',
                request_serializer=apinodesystem__3__pb2.ApiItem.isLinkerRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isLinkerResponse.FromString,
                _registered_method=True)
        self.isInputLinker = channel.unary_unary(
                '/octaneapi.ApiItemService/isInputLinker',
                request_serializer=apinodesystem__3__pb2.ApiItem.isInputLinkerRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isInputLinkerResponse.FromString,
                _registered_method=True)
        self.isOutputLinker = channel.unary_unary(
                '/octaneapi.ApiItemService/isOutputLinker',
                request_serializer=apinodesystem__3__pb2.ApiItem.isOutputLinkerRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isOutputLinkerResponse.FromString,
                _registered_method=True)
        self.toGraph = channel.unary_unary(
                '/octaneapi.ApiItemService/toGraph',
                request_serializer=apinodesystem__3__pb2.ApiItem.toGraphRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.toGraphResponse.FromString,
                _registered_method=True)
        self.toNode = channel.unary_unary(
                '/octaneapi.ApiItemService/toNode',
                request_serializer=apinodesystem__3__pb2.ApiItem.toNodeRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.toNodeResponse.FromString,
                _registered_method=True)
        self.toGraph1 = channel.unary_unary(
                '/octaneapi.ApiItemService/toGraph1',
                request_serializer=apinodesystem__3__pb2.ApiItem.toGraph1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.toGraph1Response.FromString,
                _registered_method=True)
        self.toNode1 = channel.unary_unary(
                '/octaneapi.ApiItemService/toNode1',
                request_serializer=apinodesystem__3__pb2.ApiItem.toNode1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.toNode1Response.FromString,
                _registered_method=True)
        self.hasOwner = channel.unary_unary(
                '/octaneapi.ApiItemService/hasOwner',
                request_serializer=apinodesystem__3__pb2.ApiItem.hasOwnerRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.hasOwnerResponse.FromString,
                _registered_method=True)
        self.graphOwned = channel.unary_unary(
                '/octaneapi.ApiItemService/graphOwned',
                request_serializer=apinodesystem__3__pb2.ApiItem.graphOwnedRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.graphOwnedResponse.FromString,
                _registered_method=True)
        self.pinOwned = channel.unary_unary(
                '/octaneapi.ApiItemService/pinOwned',
                request_serializer=apinodesystem__3__pb2.ApiItem.pinOwnedRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.pinOwnedResponse.FromString,
                _registered_method=True)
        self.graphOwner = channel.unary_unary(
                '/octaneapi.ApiItemService/graphOwner',
                request_serializer=apinodesystem__3__pb2.ApiItem.graphOwnerRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.graphOwnerResponse.FromString,
                _registered_method=True)
        self.pinOwner = channel.unary_unary(
                '/octaneapi.ApiItemService/pinOwner',
                request_serializer=apinodesystem__3__pb2.ApiItem.pinOwnerRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.pinOwnerResponse.FromString,
                _registered_method=True)
        self.rootGraph = channel.unary_unary(
                '/octaneapi.ApiItemService/rootGraph',
                request_serializer=apinodesystem__3__pb2.ApiItem.rootGraphRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.rootGraphResponse.FromString,
                _registered_method=True)
        self.rootGraph1 = channel.unary_unary(
                '/octaneapi.ApiItemService/rootGraph1',
                request_serializer=apinodesystem__3__pb2.ApiItem.rootGraph1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.rootGraph1Response.FromString,
                _registered_method=True)
        self.attrCount = channel.unary_unary(
                '/octaneapi.ApiItemService/attrCount',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrCountRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrCountResponse.FromString,
                _registered_method=True)
        self.hasAttr = channel.unary_unary(
                '/octaneapi.ApiItemService/hasAttr',
                request_serializer=apinodesystem__3__pb2.ApiItem.hasAttrRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.hasAttrResponse.FromString,
                _registered_method=True)
        self.hasAttr1 = channel.unary_unary(
                '/octaneapi.ApiItemService/hasAttr1',
                request_serializer=apinodesystem__3__pb2.ApiItem.hasAttr1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.hasAttr1Response.FromString,
                _registered_method=True)
        self.findAttr = channel.unary_unary(
                '/octaneapi.ApiItemService/findAttr',
                request_serializer=apinodesystem__3__pb2.ApiItem.findAttrRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.findAttrResponse.FromString,
                _registered_method=True)
        self.findAttr1 = channel.unary_unary(
                '/octaneapi.ApiItemService/findAttr1',
                request_serializer=apinodesystem__3__pb2.ApiItem.findAttr1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.findAttr1Response.FromString,
                _registered_method=True)
        self.attrId = channel.unary_unary(
                '/octaneapi.ApiItemService/attrId',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrIdRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrIdResponse.FromString,
                _registered_method=True)
        self.attrIdIx = channel.unary_unary(
                '/octaneapi.ApiItemService/attrIdIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrIdIxRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrIdIxResponse.FromString,
                _registered_method=True)
        self.attrName = channel.unary_unary(
                '/octaneapi.ApiItemService/attrName',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrNameRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrNameResponse.FromString,
                _registered_method=True)
        self.attrNameIx = channel.unary_unary(
                '/octaneapi.ApiItemService/attrNameIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrNameIxRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrNameIxResponse.FromString,
                _registered_method=True)
        self.attrType = channel.unary_unary(
                '/octaneapi.ApiItemService/attrType',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrTypeRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrTypeResponse.FromString,
                _registered_method=True)
        self.attrType1 = channel.unary_unary(
                '/octaneapi.ApiItemService/attrType1',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrType1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrType1Response.FromString,
                _registered_method=True)
        self.attrTypeIx = channel.unary_unary(
                '/octaneapi.ApiItemService/attrTypeIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrTypeIxRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrTypeIxResponse.FromString,
                _registered_method=True)
        self.attrInfo = channel.unary_unary(
                '/octaneapi.ApiItemService/attrInfo',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrInfoRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrInfoResponse.FromString,
                _registered_method=True)
        self.attrInfo1 = channel.unary_unary(
                '/octaneapi.ApiItemService/attrInfo1',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrInfo1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrInfo1Response.FromString,
                _registered_method=True)
        self.attrInfoIx = channel.unary_unary(
                '/octaneapi.ApiItemService/attrInfoIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrInfoIxRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrInfoIxResponse.FromString,
                _registered_method=True)
        self.attrAreDirty = channel.unary_unary(
                '/octaneapi.ApiItemService/attrAreDirty',
                request_serializer=apinodesystem__3__pb2.ApiItem.attrAreDirtyRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.attrAreDirtyResponse.FromString,
                _registered_method=True)
        self.isDirtyAttr = channel.unary_unary(
                '/octaneapi.ApiItemService/isDirtyAttr',
                request_serializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrResponse.FromString,
                _registered_method=True)
        self.isDirtyAttr1 = channel.unary_unary(
                '/octaneapi.ApiItemService/isDirtyAttr1',
                request_serializer=apinodesystem__3__pb2.ApiItem.isDirtyAttr1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isDirtyAttr1Response.FromString,
                _registered_method=True)
        self.isDirtyAttrIx = channel.unary_unary(
                '/octaneapi.ApiItemService/isDirtyAttrIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrIxRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrIxResponse.FromString,
                _registered_method=True)
        self.copyAttrFrom = channel.unary_unary(
                '/octaneapi.ApiItemService/copyAttrFrom',
                request_serializer=apinodesystem__3__pb2.ApiItem.copyAttrFromRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.copyAttrFrom1 = channel.unary_unary(
                '/octaneapi.ApiItemService/copyAttrFrom1',
                request_serializer=apinodesystem__3__pb2.ApiItem.copyAttrFrom1Request.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.copyAttrFromIx = channel.unary_unary(
                '/octaneapi.ApiItemService/copyAttrFromIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.copyAttrFromIxRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.copyAttrFrom2 = channel.unary_unary(
                '/octaneapi.ApiItemService/copyAttrFrom2',
                request_serializer=apinodesystem__3__pb2.ApiItem.copyAttrFrom2Request.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clearAllAttr = channel.unary_unary(
                '/octaneapi.ApiItemService/clearAllAttr',
                request_serializer=apinodesystem__3__pb2.ApiItem.clearAllAttrRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clearAttr = channel.unary_unary(
                '/octaneapi.ApiItemService/clearAttr',
                request_serializer=apinodesystem__3__pb2.ApiItem.clearAttrRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clearAttr1 = channel.unary_unary(
                '/octaneapi.ApiItemService/clearAttr1',
                request_serializer=apinodesystem__3__pb2.ApiItem.clearAttr1Request.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clearAttrIx = channel.unary_unary(
                '/octaneapi.ApiItemService/clearAttrIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.clearAttrIxRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clearAnim = channel.unary_unary(
                '/octaneapi.ApiItemService/clearAnim',
                request_serializer=apinodesystem__3__pb2.ApiItem.clearAnimRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clearAnim1 = channel.unary_unary(
                '/octaneapi.ApiItemService/clearAnim1',
                request_serializer=apinodesystem__3__pb2.ApiItem.clearAnim1Request.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clearAnimIx = channel.unary_unary(
                '/octaneapi.ApiItemService/clearAnimIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.clearAnimIxRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.isAnimated = channel.unary_unary(
                '/octaneapi.ApiItemService/isAnimated',
                request_serializer=apinodesystem__3__pb2.ApiItem.isAnimatedRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isAnimatedResponse.FromString,
                _registered_method=True)
        self.isAnimated1 = channel.unary_unary(
                '/octaneapi.ApiItemService/isAnimated1',
                request_serializer=apinodesystem__3__pb2.ApiItem.isAnimated1Request.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isAnimated1Response.FromString,
                _registered_method=True)
        self.isAnimatedIx = channel.unary_unary(
                '/octaneapi.ApiItemService/isAnimatedIx',
                request_serializer=apinodesystem__3__pb2.ApiItem.isAnimatedIxRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.isAnimatedIxResponse.FromString,
                _registered_method=True)
        self.evaluate = channel.unary_unary(
                '/octaneapi.ApiItemService/evaluate',
                request_serializer=apinodesystem__3__pb2.ApiItem.evaluateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.expand = channel.unary_unary(
                '/octaneapi.ApiItemService/expand',
                request_serializer=apinodesystem__3__pb2.ApiItem.expandRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.expandOutOfPin = channel.unary_unary(
                '/octaneapi.ApiItemService/expandOutOfPin',
                request_serializer=apinodesystem__3__pb2.ApiItem.expandOutOfPinRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.expandOutOfPinResponse.FromString,
                _registered_method=True)
        self.collapse = channel.unary_unary(
                '/octaneapi.ApiItemService/collapse',
                request_serializer=apinodesystem__3__pb2.ApiItem.collapseRequest.SerializeToString,
                response_deserializer=apinodesystem__3__pb2.ApiItem.collapseResponse.FromString,
                _registered_method=True)
        self.dumpAttributes = channel.unary_unary(
                '/octaneapi.ApiItemService/dumpAttributes',
                request_serializer=apinodesystem__3__pb2.ApiItem.dumpAttributesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ApiItemServiceServicer(object):
    """/ ApiItem
    """

    def destroy(self, request, context):
        """/ Destroys this item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def name(self, request, context):
        """/ Returns the name of this item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def position(self, request, context):
        """/ Returns the position of the item inside its owner
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uiOperationFlags(self, request, context):
        """/ Returns the UI operation flags of this node item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def select(self, request, context):
        """/ Sets the node item to selected state (for the window opened using ApiNodeGraph::showWindow())
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def time(self, request, context):
        """/ Returns the current time of this item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def outType(self, request, context):
        """/ Returns the output type for this item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def persistentId(self, request, context):
        """/ Returns the persistent ID of the node item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uniqueId(self, request, context):
        """/ Returns the unique ID of the node item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def collectItemTree(self, request, context):
        """/ Collects all items that are connected to this node item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteUnconnectedItems(self, request, context):
        """/ If the item is owned by a node graph, this function will remove all items owned by that node
        / graph that are not directly/indirectly connected with the item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def switchToFileData(self, request, context):
        """/ If this item stores file data that has been provided by plugins directly, this function
        / will export that data into a file with the specified name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def version(self, request, context):
        """/ Returns the version of the item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isGraph(self, request, context):
        """/ Returns TRUE if this item is a graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isNode(self, request, context):
        """/ Returns TRUE if this item is a node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isLinker(self, request, context):
        """/ Returns TRUE if the item is an input/output linker node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isInputLinker(self, request, context):
        """/ Returns TRUE if the item is an input linker node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isOutputLinker(self, request, context):
        """/ Returns TRUE if the item is an output linker node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toGraph(self, request, context):
        """/ Downcasts this item to a graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toNode(self, request, context):
        """/ Downcasts this item to a node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toGraph1(self, request, context):
        """/ Downcasts this item to a graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def toNode1(self, request, context):
        """/ Downcasts this item to a node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hasOwner(self, request, context):
        """/ Returns TRUE if this item has an owner (graph or pin), usually always TRUE with the
        / exception of root node graphs, which never have an owner
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def graphOwned(self, request, context):
        """/ Returns TRUE if this item is owned by a graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pinOwned(self, request, context):
        """/ Returns TRUE if this item is owned by a pin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def graphOwner(self, request, context):
        """/ Gets the graph owner (if any)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def pinOwner(self, request, context):
        """/ Gets the pin owner (if any)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rootGraph(self, request, context):
        """/ Returns the root node graph which contains this node item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def rootGraph1(self, request, context):
        """/ Returns the root node graph which contains this node item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrCount(self, request, context):
        """/ Returns the number of attributes of this item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hasAttr(self, request, context):
        """/ Returns TRUE if an attribute with the specified ID exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hasAttr1(self, request, context):
        """/ Returns TRUE if an attribute with the specified name exists
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findAttr(self, request, context):
        """/ Returns TRUE if an attribute with this ID exists and returns its index in "foundIndex"
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findAttr1(self, request, context):
        """/ Returns TRUE if an attribute with this name exists and returns its index in "foundIndex"
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrId(self, request, context):
        """/ Returns the ID of attribute provided by it's name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrIdIx(self, request, context):
        """/ Returns the ID of the attribute at index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrName(self, request, context):
        """/ Returns the name of the attribute at the provided ID or "unknown" if there's no such attribute
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrNameIx(self, request, context):
        """/ Returns the name of the attribute at the index or "unknown" if there's no such attribute
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrType(self, request, context):
        """/ Returns the type of the attribute identified by it's ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrType1(self, request, context):
        """/ Returns the type of the attribute identified by it's name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrTypeIx(self, request, context):
        """/ Returns the type of the attribute at the index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrInfo(self, request, context):
        """/ Returns the info for the attribute identified by the ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrInfo1(self, request, context):
        """/ Returns the info for the attribute identified by the name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrInfoIx(self, request, context):
        """/ Returns the info for the attribute at index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def attrAreDirty(self, request, context):
        """/ Returns TRUE if any of the attributes are flagged dirty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isDirtyAttr(self, request, context):
        """/ Returns TRUE if the attribute is flagged dirty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isDirtyAttr1(self, request, context):
        """/ Returns TRUE if the attribute is flagged dirty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isDirtyAttrIx(self, request, context):
        """/ Returns TRUE if the attribute is flagged dirty
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyAttrFrom(self, request, context):
        """/ Copies another item's attribute value into this item's attribute
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyAttrFrom1(self, request, context):
        """/ Copies the attribute into our attribute, specified by its name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyAttrFromIx(self, request, context):
        """/ Copies the attribute into our attribute, specified by its index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def copyAttrFrom2(self, request, context):
        """/ Copies all matching attributes from another item into this item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearAllAttr(self, request, context):
        """/ Clears all attributes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearAttr(self, request, context):
        """/ Clears the attribute specified by its ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearAttr1(self, request, context):
        """/ Clears the attribute specified by its name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearAttrIx(self, request, context):
        """/ Clears the attribute specified by its index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearAnim(self, request, context):
        """/ Removes any animation from an attribute (if it has one)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearAnim1(self, request, context):
        """/ Removes any animation from an attribute (if it has one)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearAnimIx(self, request, context):
        """/ Removes any animation from an attribute (if it has one)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isAnimated(self, request, context):
        """/ Returns TRUE if the attribute has an animator object assigned to it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isAnimated1(self, request, context):
        """/ Returns TRUE if the attribute has an animator object assigned to it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isAnimatedIx(self, request, context):
        """/ Returns TRUE if the attribute has an animator object assigned to it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def evaluate(self, request, context):
        """/ Evaluates the item's attributes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def expand(self, request, context):
        """/ Expands all items owned by the pins of the node or by the input linkers of the node graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def expandOutOfPin(self, request, context):
        """/ Expands the current item out of its owner pin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def collapse(self, request, context):
        """/ Collapse this node item down into all destination pins
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dumpAttributes(self, request, context):
        """/ Dump all attributes of this item to a text file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiItemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'name': grpc.unary_unary_rpc_method_handler(
                    servicer.name,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.nameRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.nameResponse.SerializeToString,
            ),
            'position': grpc.unary_unary_rpc_method_handler(
                    servicer.position,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.positionRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.positionResponse.SerializeToString,
            ),
            'uiOperationFlags': grpc.unary_unary_rpc_method_handler(
                    servicer.uiOperationFlags,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.uiOperationFlagsRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.uiOperationFlagsResponse.SerializeToString,
            ),
            'select': grpc.unary_unary_rpc_method_handler(
                    servicer.select,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.selectRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'time': grpc.unary_unary_rpc_method_handler(
                    servicer.time,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.timeRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.timeResponse.SerializeToString,
            ),
            'outType': grpc.unary_unary_rpc_method_handler(
                    servicer.outType,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.outTypeRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.outTypeResponse.SerializeToString,
            ),
            'persistentId': grpc.unary_unary_rpc_method_handler(
                    servicer.persistentId,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.persistentIdRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.persistentIdResponse.SerializeToString,
            ),
            'uniqueId': grpc.unary_unary_rpc_method_handler(
                    servicer.uniqueId,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.uniqueIdRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.uniqueIdResponse.SerializeToString,
            ),
            'collectItemTree': grpc.unary_unary_rpc_method_handler(
                    servicer.collectItemTree,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.collectItemTreeRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.collectItemTreeResponse.SerializeToString,
            ),
            'deleteUnconnectedItems': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteUnconnectedItems,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.deleteUnconnectedItemsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'switchToFileData': grpc.unary_unary_rpc_method_handler(
                    servicer.switchToFileData,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.switchToFileDataRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'version': grpc.unary_unary_rpc_method_handler(
                    servicer.version,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.versionRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.versionResponse.SerializeToString,
            ),
            'isGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.isGraph,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isGraphRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isGraphResponse.SerializeToString,
            ),
            'isNode': grpc.unary_unary_rpc_method_handler(
                    servicer.isNode,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isNodeRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isNodeResponse.SerializeToString,
            ),
            'isLinker': grpc.unary_unary_rpc_method_handler(
                    servicer.isLinker,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isLinkerRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isLinkerResponse.SerializeToString,
            ),
            'isInputLinker': grpc.unary_unary_rpc_method_handler(
                    servicer.isInputLinker,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isInputLinkerRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isInputLinkerResponse.SerializeToString,
            ),
            'isOutputLinker': grpc.unary_unary_rpc_method_handler(
                    servicer.isOutputLinker,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isOutputLinkerRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isOutputLinkerResponse.SerializeToString,
            ),
            'toGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.toGraph,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.toGraphRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.toGraphResponse.SerializeToString,
            ),
            'toNode': grpc.unary_unary_rpc_method_handler(
                    servicer.toNode,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.toNodeRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.toNodeResponse.SerializeToString,
            ),
            'toGraph1': grpc.unary_unary_rpc_method_handler(
                    servicer.toGraph1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.toGraph1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.toGraph1Response.SerializeToString,
            ),
            'toNode1': grpc.unary_unary_rpc_method_handler(
                    servicer.toNode1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.toNode1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.toNode1Response.SerializeToString,
            ),
            'hasOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.hasOwner,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.hasOwnerRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.hasOwnerResponse.SerializeToString,
            ),
            'graphOwned': grpc.unary_unary_rpc_method_handler(
                    servicer.graphOwned,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.graphOwnedRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.graphOwnedResponse.SerializeToString,
            ),
            'pinOwned': grpc.unary_unary_rpc_method_handler(
                    servicer.pinOwned,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.pinOwnedRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.pinOwnedResponse.SerializeToString,
            ),
            'graphOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.graphOwner,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.graphOwnerRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.graphOwnerResponse.SerializeToString,
            ),
            'pinOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.pinOwner,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.pinOwnerRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.pinOwnerResponse.SerializeToString,
            ),
            'rootGraph': grpc.unary_unary_rpc_method_handler(
                    servicer.rootGraph,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.rootGraphRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.rootGraphResponse.SerializeToString,
            ),
            'rootGraph1': grpc.unary_unary_rpc_method_handler(
                    servicer.rootGraph1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.rootGraph1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.rootGraph1Response.SerializeToString,
            ),
            'attrCount': grpc.unary_unary_rpc_method_handler(
                    servicer.attrCount,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrCountRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrCountResponse.SerializeToString,
            ),
            'hasAttr': grpc.unary_unary_rpc_method_handler(
                    servicer.hasAttr,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.hasAttrRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.hasAttrResponse.SerializeToString,
            ),
            'hasAttr1': grpc.unary_unary_rpc_method_handler(
                    servicer.hasAttr1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.hasAttr1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.hasAttr1Response.SerializeToString,
            ),
            'findAttr': grpc.unary_unary_rpc_method_handler(
                    servicer.findAttr,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.findAttrRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.findAttrResponse.SerializeToString,
            ),
            'findAttr1': grpc.unary_unary_rpc_method_handler(
                    servicer.findAttr1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.findAttr1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.findAttr1Response.SerializeToString,
            ),
            'attrId': grpc.unary_unary_rpc_method_handler(
                    servicer.attrId,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrIdRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrIdResponse.SerializeToString,
            ),
            'attrIdIx': grpc.unary_unary_rpc_method_handler(
                    servicer.attrIdIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrIdIxRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrIdIxResponse.SerializeToString,
            ),
            'attrName': grpc.unary_unary_rpc_method_handler(
                    servicer.attrName,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrNameRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrNameResponse.SerializeToString,
            ),
            'attrNameIx': grpc.unary_unary_rpc_method_handler(
                    servicer.attrNameIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrNameIxRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrNameIxResponse.SerializeToString,
            ),
            'attrType': grpc.unary_unary_rpc_method_handler(
                    servicer.attrType,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrTypeRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrTypeResponse.SerializeToString,
            ),
            'attrType1': grpc.unary_unary_rpc_method_handler(
                    servicer.attrType1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrType1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrType1Response.SerializeToString,
            ),
            'attrTypeIx': grpc.unary_unary_rpc_method_handler(
                    servicer.attrTypeIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrTypeIxRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrTypeIxResponse.SerializeToString,
            ),
            'attrInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.attrInfo,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrInfoRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrInfoResponse.SerializeToString,
            ),
            'attrInfo1': grpc.unary_unary_rpc_method_handler(
                    servicer.attrInfo1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrInfo1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrInfo1Response.SerializeToString,
            ),
            'attrInfoIx': grpc.unary_unary_rpc_method_handler(
                    servicer.attrInfoIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrInfoIxRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrInfoIxResponse.SerializeToString,
            ),
            'attrAreDirty': grpc.unary_unary_rpc_method_handler(
                    servicer.attrAreDirty,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.attrAreDirtyRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.attrAreDirtyResponse.SerializeToString,
            ),
            'isDirtyAttr': grpc.unary_unary_rpc_method_handler(
                    servicer.isDirtyAttr,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrResponse.SerializeToString,
            ),
            'isDirtyAttr1': grpc.unary_unary_rpc_method_handler(
                    servicer.isDirtyAttr1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isDirtyAttr1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isDirtyAttr1Response.SerializeToString,
            ),
            'isDirtyAttrIx': grpc.unary_unary_rpc_method_handler(
                    servicer.isDirtyAttrIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrIxRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isDirtyAttrIxResponse.SerializeToString,
            ),
            'copyAttrFrom': grpc.unary_unary_rpc_method_handler(
                    servicer.copyAttrFrom,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.copyAttrFromRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'copyAttrFrom1': grpc.unary_unary_rpc_method_handler(
                    servicer.copyAttrFrom1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.copyAttrFrom1Request.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'copyAttrFromIx': grpc.unary_unary_rpc_method_handler(
                    servicer.copyAttrFromIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.copyAttrFromIxRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'copyAttrFrom2': grpc.unary_unary_rpc_method_handler(
                    servicer.copyAttrFrom2,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.copyAttrFrom2Request.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clearAllAttr': grpc.unary_unary_rpc_method_handler(
                    servicer.clearAllAttr,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.clearAllAttrRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clearAttr': grpc.unary_unary_rpc_method_handler(
                    servicer.clearAttr,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.clearAttrRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clearAttr1': grpc.unary_unary_rpc_method_handler(
                    servicer.clearAttr1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.clearAttr1Request.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clearAttrIx': grpc.unary_unary_rpc_method_handler(
                    servicer.clearAttrIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.clearAttrIxRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clearAnim': grpc.unary_unary_rpc_method_handler(
                    servicer.clearAnim,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.clearAnimRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clearAnim1': grpc.unary_unary_rpc_method_handler(
                    servicer.clearAnim1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.clearAnim1Request.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clearAnimIx': grpc.unary_unary_rpc_method_handler(
                    servicer.clearAnimIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.clearAnimIxRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'isAnimated': grpc.unary_unary_rpc_method_handler(
                    servicer.isAnimated,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isAnimatedRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isAnimatedResponse.SerializeToString,
            ),
            'isAnimated1': grpc.unary_unary_rpc_method_handler(
                    servicer.isAnimated1,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isAnimated1Request.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isAnimated1Response.SerializeToString,
            ),
            'isAnimatedIx': grpc.unary_unary_rpc_method_handler(
                    servicer.isAnimatedIx,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.isAnimatedIxRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.isAnimatedIxResponse.SerializeToString,
            ),
            'evaluate': grpc.unary_unary_rpc_method_handler(
                    servicer.evaluate,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.evaluateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'expand': grpc.unary_unary_rpc_method_handler(
                    servicer.expand,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.expandRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'expandOutOfPin': grpc.unary_unary_rpc_method_handler(
                    servicer.expandOutOfPin,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.expandOutOfPinRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.expandOutOfPinResponse.SerializeToString,
            ),
            'collapse': grpc.unary_unary_rpc_method_handler(
                    servicer.collapse,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.collapseRequest.FromString,
                    response_serializer=apinodesystem__3__pb2.ApiItem.collapseResponse.SerializeToString,
            ),
            'dumpAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.dumpAttributes,
                    request_deserializer=apinodesystem__3__pb2.ApiItem.dumpAttributesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiItemService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiItemService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiItemService(object):
    """/ ApiItem
    """

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/destroy',
            apinodesystem__3__pb2.ApiItem.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def name(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/name',
            apinodesystem__3__pb2.ApiItem.nameRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.nameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def position(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/position',
            apinodesystem__3__pb2.ApiItem.positionRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.positionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def uiOperationFlags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/uiOperationFlags',
            apinodesystem__3__pb2.ApiItem.uiOperationFlagsRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.uiOperationFlagsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def select(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/select',
            apinodesystem__3__pb2.ApiItem.selectRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def time(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/time',
            apinodesystem__3__pb2.ApiItem.timeRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.timeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def outType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/outType',
            apinodesystem__3__pb2.ApiItem.outTypeRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.outTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def persistentId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/persistentId',
            apinodesystem__3__pb2.ApiItem.persistentIdRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.persistentIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def uniqueId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/uniqueId',
            apinodesystem__3__pb2.ApiItem.uniqueIdRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.uniqueIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def collectItemTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/collectItemTree',
            apinodesystem__3__pb2.ApiItem.collectItemTreeRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.collectItemTreeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteUnconnectedItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/deleteUnconnectedItems',
            apinodesystem__3__pb2.ApiItem.deleteUnconnectedItemsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def switchToFileData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/switchToFileData',
            apinodesystem__3__pb2.ApiItem.switchToFileDataRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/version',
            apinodesystem__3__pb2.ApiItem.versionRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.versionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isGraph',
            apinodesystem__3__pb2.ApiItem.isGraphRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isGraphResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isNode',
            apinodesystem__3__pb2.ApiItem.isNodeRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isLinker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isLinker',
            apinodesystem__3__pb2.ApiItem.isLinkerRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isLinkerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isInputLinker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isInputLinker',
            apinodesystem__3__pb2.ApiItem.isInputLinkerRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isInputLinkerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isOutputLinker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isOutputLinker',
            apinodesystem__3__pb2.ApiItem.isOutputLinkerRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isOutputLinkerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def toGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/toGraph',
            apinodesystem__3__pb2.ApiItem.toGraphRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.toGraphResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def toNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/toNode',
            apinodesystem__3__pb2.ApiItem.toNodeRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.toNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def toGraph1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/toGraph1',
            apinodesystem__3__pb2.ApiItem.toGraph1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.toGraph1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def toNode1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/toNode1',
            apinodesystem__3__pb2.ApiItem.toNode1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.toNode1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def hasOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/hasOwner',
            apinodesystem__3__pb2.ApiItem.hasOwnerRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.hasOwnerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def graphOwned(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/graphOwned',
            apinodesystem__3__pb2.ApiItem.graphOwnedRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.graphOwnedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def pinOwned(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/pinOwned',
            apinodesystem__3__pb2.ApiItem.pinOwnedRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.pinOwnedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def graphOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/graphOwner',
            apinodesystem__3__pb2.ApiItem.graphOwnerRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.graphOwnerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def pinOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/pinOwner',
            apinodesystem__3__pb2.ApiItem.pinOwnerRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.pinOwnerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def rootGraph(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/rootGraph',
            apinodesystem__3__pb2.ApiItem.rootGraphRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.rootGraphResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def rootGraph1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/rootGraph1',
            apinodesystem__3__pb2.ApiItem.rootGraph1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.rootGraph1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrCount',
            apinodesystem__3__pb2.ApiItem.attrCountRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def hasAttr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/hasAttr',
            apinodesystem__3__pb2.ApiItem.hasAttrRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.hasAttrResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def hasAttr1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/hasAttr1',
            apinodesystem__3__pb2.ApiItem.hasAttr1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.hasAttr1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findAttr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/findAttr',
            apinodesystem__3__pb2.ApiItem.findAttrRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.findAttrResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def findAttr1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/findAttr1',
            apinodesystem__3__pb2.ApiItem.findAttr1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.findAttr1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrId',
            apinodesystem__3__pb2.ApiItem.attrIdRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrIdIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrIdIx',
            apinodesystem__3__pb2.ApiItem.attrIdIxRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrIdIxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrName',
            apinodesystem__3__pb2.ApiItem.attrNameRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrNameIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrNameIx',
            apinodesystem__3__pb2.ApiItem.attrNameIxRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrNameIxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrType',
            apinodesystem__3__pb2.ApiItem.attrTypeRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrTypeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrType1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrType1',
            apinodesystem__3__pb2.ApiItem.attrType1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrType1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrTypeIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrTypeIx',
            apinodesystem__3__pb2.ApiItem.attrTypeIxRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrTypeIxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrInfo',
            apinodesystem__3__pb2.ApiItem.attrInfoRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrInfo1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrInfo1',
            apinodesystem__3__pb2.ApiItem.attrInfo1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrInfo1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrInfoIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrInfoIx',
            apinodesystem__3__pb2.ApiItem.attrInfoIxRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrInfoIxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def attrAreDirty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/attrAreDirty',
            apinodesystem__3__pb2.ApiItem.attrAreDirtyRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.attrAreDirtyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isDirtyAttr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isDirtyAttr',
            apinodesystem__3__pb2.ApiItem.isDirtyAttrRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isDirtyAttrResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isDirtyAttr1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isDirtyAttr1',
            apinodesystem__3__pb2.ApiItem.isDirtyAttr1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isDirtyAttr1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isDirtyAttrIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isDirtyAttrIx',
            apinodesystem__3__pb2.ApiItem.isDirtyAttrIxRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isDirtyAttrIxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyAttrFrom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/copyAttrFrom',
            apinodesystem__3__pb2.ApiItem.copyAttrFromRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyAttrFrom1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/copyAttrFrom1',
            apinodesystem__3__pb2.ApiItem.copyAttrFrom1Request.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyAttrFromIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/copyAttrFromIx',
            apinodesystem__3__pb2.ApiItem.copyAttrFromIxRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def copyAttrFrom2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/copyAttrFrom2',
            apinodesystem__3__pb2.ApiItem.copyAttrFrom2Request.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearAllAttr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/clearAllAttr',
            apinodesystem__3__pb2.ApiItem.clearAllAttrRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearAttr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/clearAttr',
            apinodesystem__3__pb2.ApiItem.clearAttrRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearAttr1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/clearAttr1',
            apinodesystem__3__pb2.ApiItem.clearAttr1Request.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearAttrIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/clearAttrIx',
            apinodesystem__3__pb2.ApiItem.clearAttrIxRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearAnim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/clearAnim',
            apinodesystem__3__pb2.ApiItem.clearAnimRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearAnim1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/clearAnim1',
            apinodesystem__3__pb2.ApiItem.clearAnim1Request.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearAnimIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/clearAnimIx',
            apinodesystem__3__pb2.ApiItem.clearAnimIxRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isAnimated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isAnimated',
            apinodesystem__3__pb2.ApiItem.isAnimatedRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isAnimatedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isAnimated1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isAnimated1',
            apinodesystem__3__pb2.ApiItem.isAnimated1Request.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isAnimated1Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isAnimatedIx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/isAnimatedIx',
            apinodesystem__3__pb2.ApiItem.isAnimatedIxRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.isAnimatedIxResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def evaluate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/evaluate',
            apinodesystem__3__pb2.ApiItem.evaluateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def expand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/expand',
            apinodesystem__3__pb2.ApiItem.expandRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def expandOutOfPin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/expandOutOfPin',
            apinodesystem__3__pb2.ApiItem.expandOutOfPinRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.expandOutOfPinResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def collapse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/collapse',
            apinodesystem__3__pb2.ApiItem.collapseRequest.SerializeToString,
            apinodesystem__3__pb2.ApiItem.collapseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def dumpAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiItemService/dumpAttributes',
            apinodesystem__3__pb2.ApiItem.dumpAttributesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
