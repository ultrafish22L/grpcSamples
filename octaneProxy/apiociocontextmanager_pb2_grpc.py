# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import apiociocontextmanager_pb2 as apiociocontextmanager__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in apiociocontextmanager_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ApiOcioContextManagerServiceStub(object):
    """GRPC interface definition for class 'ApiOcioContextManager' from 'apiociocontextmanager.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.guessIntermediateColorSpace = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/guessIntermediateColorSpace',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.guessIntermediateColorSpaceRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.guessIntermediateColorSpaceResponse.FromString,
                _registered_method=True)
        self.create = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/create',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.createRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.createResponse.FromString,
                _registered_method=True)
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/destroy',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.addCallback = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/addCallback',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.addCallbackRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.addCallbackResponse.FromString,
                _registered_method=True)
        self.removeCallback = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/removeCallback',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.removeCallbackRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.removeCallbackResponse.FromString,
                _registered_method=True)
        self.getDefaultConfigFilename = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/getDefaultConfigFilename',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.getDefaultConfigFilenameRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.getDefaultConfigFilenameResponse.FromString,
                _registered_method=True)
        self.getLastConfigLoadFilename = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/getLastConfigLoadFilename',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.getLastConfigLoadFilenameRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.getLastConfigLoadFilenameResponse.FromString,
                _registered_method=True)
        self.createConfig = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/createConfig',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.createConfigRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.createConfigResponse.FromString,
                _registered_method=True)
        self.getContextUsableForConversion = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/getContextUsableForConversion',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.getContextUsableForConversionRequest.SerializeToString,
                response_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.getContextUsableForConversionResponse.FromString,
                _registered_method=True)
        self.donateConfig = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/donateConfig',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.donateConfigRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.handlePendingConfigDonation = channel.unary_unary(
                '/octaneapi.ApiOcioContextManagerService/handlePendingConfigDonation',
                request_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.handlePendingConfigDonationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ApiOcioContextManagerServiceServicer(object):
    """GRPC interface definition for class 'ApiOcioContextManager' from 'apiociocontextmanager.h'
    """

    def guessIntermediateColorSpace(self, request, context):
        """/ Guesses the best values to use for the intermediate color space based on the names of color
        / spaces in the OCIO config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """/ 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def destroy(self, request, context):
        """/ Must not be called from a callback function
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addCallback(self, request, context):
        """/ Registers a callback to be called when the current OCIO context changes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeCallback(self, request, context):
        """/ Deregisters a callback that was registered with addCallback
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDefaultConfigFilename(self, request, context):
        """/ Gets the filename of the default config to use if it is not overridden by local preferences
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getLastConfigLoadFilename(self, request, context):
        """/ Gets the most recent config filename that we tried to load
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createConfig(self, request, context):
        """/ Gets the config of the current context, if there is a config loaded
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getContextUsableForConversion(self, request, context):
        """/ Gets whether the current context is suitable for use by the renderer for color conversions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def donateConfig(self, request, context):
        """/ Sets the current config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def handlePendingConfigDonation(self, request, context):
        """/ This should be called after calling donateConfig and changing local preferences, to handle
        / the case where the local preferences technically didn't change (because filenames etc
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiOcioContextManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'guessIntermediateColorSpace': grpc.unary_unary_rpc_method_handler(
                    servicer.guessIntermediateColorSpace,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.guessIntermediateColorSpaceRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.guessIntermediateColorSpaceResponse.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.createRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.createResponse.SerializeToString,
            ),
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'addCallback': grpc.unary_unary_rpc_method_handler(
                    servicer.addCallback,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.addCallbackRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.addCallbackResponse.SerializeToString,
            ),
            'removeCallback': grpc.unary_unary_rpc_method_handler(
                    servicer.removeCallback,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.removeCallbackRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.removeCallbackResponse.SerializeToString,
            ),
            'getDefaultConfigFilename': grpc.unary_unary_rpc_method_handler(
                    servicer.getDefaultConfigFilename,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.getDefaultConfigFilenameRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.getDefaultConfigFilenameResponse.SerializeToString,
            ),
            'getLastConfigLoadFilename': grpc.unary_unary_rpc_method_handler(
                    servicer.getLastConfigLoadFilename,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.getLastConfigLoadFilenameRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.getLastConfigLoadFilenameResponse.SerializeToString,
            ),
            'createConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.createConfig,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.createConfigRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.createConfigResponse.SerializeToString,
            ),
            'getContextUsableForConversion': grpc.unary_unary_rpc_method_handler(
                    servicer.getContextUsableForConversion,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.getContextUsableForConversionRequest.FromString,
                    response_serializer=apiociocontextmanager__pb2.ApiOcioContextManager.getContextUsableForConversionResponse.SerializeToString,
            ),
            'donateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.donateConfig,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.donateConfigRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'handlePendingConfigDonation': grpc.unary_unary_rpc_method_handler(
                    servicer.handlePendingConfigDonation,
                    request_deserializer=apiociocontextmanager__pb2.ApiOcioContextManager.handlePendingConfigDonationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiOcioContextManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiOcioContextManagerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiOcioContextManagerService(object):
    """GRPC interface definition for class 'ApiOcioContextManager' from 'apiociocontextmanager.h'
    """

    @staticmethod
    def guessIntermediateColorSpace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/guessIntermediateColorSpace',
            apiociocontextmanager__pb2.ApiOcioContextManager.guessIntermediateColorSpaceRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.guessIntermediateColorSpaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/create',
            apiociocontextmanager__pb2.ApiOcioContextManager.createRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.createResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/destroy',
            apiociocontextmanager__pb2.ApiOcioContextManager.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addCallback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/addCallback',
            apiociocontextmanager__pb2.ApiOcioContextManager.addCallbackRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.addCallbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeCallback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/removeCallback',
            apiociocontextmanager__pb2.ApiOcioContextManager.removeCallbackRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.removeCallbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getDefaultConfigFilename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/getDefaultConfigFilename',
            apiociocontextmanager__pb2.ApiOcioContextManager.getDefaultConfigFilenameRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.getDefaultConfigFilenameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getLastConfigLoadFilename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/getLastConfigLoadFilename',
            apiociocontextmanager__pb2.ApiOcioContextManager.getLastConfigLoadFilenameRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.getLastConfigLoadFilenameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/createConfig',
            apiociocontextmanager__pb2.ApiOcioContextManager.createConfigRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.createConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getContextUsableForConversion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/getContextUsableForConversion',
            apiociocontextmanager__pb2.ApiOcioContextManager.getContextUsableForConversionRequest.SerializeToString,
            apiociocontextmanager__pb2.ApiOcioContextManager.getContextUsableForConversionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def donateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/donateConfig',
            apiociocontextmanager__pb2.ApiOcioContextManager.donateConfigRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def handlePendingConfigDonation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiOcioContextManagerService/handlePendingConfigDonation',
            apiociocontextmanager__pb2.ApiOcioContextManager.handlePendingConfigDonationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
