# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import apilocaldb_pb2 as apilocaldb__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in apilocaldb_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ApiLocalDBServiceStub(object):
    """GRPC interface definition for class 'ApiLocalDB' from 'apilocaldb.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.isSupported = channel.unary_unary(
                '/octaneapi.ApiLocalDBService/isSupported',
                request_serializer=apilocaldb__pb2.ApiLocalDB.isSupportedRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.isSupportedResponse.FromString,
                _registered_method=True)
        self.root = channel.unary_unary(
                '/octaneapi.ApiLocalDBService/root',
                request_serializer=apilocaldb__pb2.ApiLocalDB.rootRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.rootResponse.FromString,
                _registered_method=True)
        self.setRootDirectory = channel.unary_unary(
                '/octaneapi.ApiLocalDBService/setRootDirectory',
                request_serializer=apilocaldb__pb2.ApiLocalDB.setRootDirectoryRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.setRootDirectoryResponse.FromString,
                _registered_method=True)
        self.addObserver = channel.unary_unary(
                '/octaneapi.ApiLocalDBService/addObserver',
                request_serializer=apilocaldb__pb2.ApiLocalDB.addObserverRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.addObserverResponse.FromString,
                _registered_method=True)
        self.removeObserver = channel.unary_unary(
                '/octaneapi.ApiLocalDBService/removeObserver',
                request_serializer=apilocaldb__pb2.ApiLocalDB.removeObserverRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.removeObserverResponse.FromString,
                _registered_method=True)


class ApiLocalDBServiceServicer(object):
    """GRPC interface definition for class 'ApiLocalDB' from 'apilocaldb.h'
    """

    def isSupported(self, request, context):
        """/ Tells whether 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def root(self, request, context):
        """/ Returns the root category of the local DB
        /
        / 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setRootDirectory(self, request, context):
        """/ Moves the localDb folder to a new location
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addObserver(self, request, context):
        """/ Add an observer to receive change notifications for localDB updates
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeObserver(self, request, context):
        """/ Remove an observer to receive change notifications for localDB updates
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiLocalDBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'isSupported': grpc.unary_unary_rpc_method_handler(
                    servicer.isSupported,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.isSupportedRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.isSupportedResponse.SerializeToString,
            ),
            'root': grpc.unary_unary_rpc_method_handler(
                    servicer.root,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.rootRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.rootResponse.SerializeToString,
            ),
            'setRootDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.setRootDirectory,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.setRootDirectoryRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.setRootDirectoryResponse.SerializeToString,
            ),
            'addObserver': grpc.unary_unary_rpc_method_handler(
                    servicer.addObserver,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.addObserverRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.addObserverResponse.SerializeToString,
            ),
            'removeObserver': grpc.unary_unary_rpc_method_handler(
                    servicer.removeObserver,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.removeObserverRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.removeObserverResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiLocalDBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiLocalDBService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiLocalDBService(object):
    """GRPC interface definition for class 'ApiLocalDB' from 'apilocaldb.h'
    """

    @staticmethod
    def isSupported(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDBService/isSupported',
            apilocaldb__pb2.ApiLocalDB.isSupportedRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.isSupportedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def root(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDBService/root',
            apilocaldb__pb2.ApiLocalDB.rootRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.rootResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setRootDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDBService/setRootDirectory',
            apilocaldb__pb2.ApiLocalDB.setRootDirectoryRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.setRootDirectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addObserver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDBService/addObserver',
            apilocaldb__pb2.ApiLocalDB.addObserverRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.addObserverResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeObserver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDBService/removeObserver',
            apilocaldb__pb2.ApiLocalDB.removeObserverRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.removeObserverResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ApiLocalDB_CategoryServiceStub(object):
    """GRPC interface definition for class 'ApiLocalDB_Category' from 'apilocaldb.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.name = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/name',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.nameRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.nameResponse.FromString,
                _registered_method=True)
        self.fileName = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/fileName',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.fileNameRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.fileNameResponse.FromString,
                _registered_method=True)
        self.subCategoryCount = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/subCategoryCount',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryCountRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryCountResponse.FromString,
                _registered_method=True)
        self.subCategoryName = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/subCategoryName',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryNameRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryNameResponse.FromString,
                _registered_method=True)
        self.subCategory = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/subCategory',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryResponse.FromString,
                _registered_method=True)
        self.packageCount = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/packageCount',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageCountRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageCountResponse.FromString,
                _registered_method=True)
        self.package = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/package',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageResponse.FromString,
                _registered_method=True)
        self.categoryByPath = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/categoryByPath',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.categoryByPathRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.categoryByPathResponse.FromString,
                _registered_method=True)
        self.packageByPath = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/packageByPath',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageByPathRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageByPathResponse.FromString,
                _registered_method=True)
        self.createCategory = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/createCategory',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.createCategoryRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.createCategoryResponse.FromString,
                _registered_method=True)
        self.deleteCategory = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/deleteCategory',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deleteCategoryRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deleteCategoryResponse.FromString,
                _registered_method=True)
        self.savePackage = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/savePackage',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.savePackageRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.savePackageResponse.FromString,
                _registered_method=True)
        self.deletePackage = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/deletePackage',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deletePackageRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deletePackageResponse.FromString,
                _registered_method=True)
        self.free = channel.unary_unary(
                '/octaneapi.ApiLocalDB_CategoryService/free',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.freeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ApiLocalDB_CategoryServiceServicer(object):
    """GRPC interface definition for class 'ApiLocalDB_Category' from 'apilocaldb.h'
    """

    def name(self, request, context):
        """/ Get the name for this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fileName(self, request, context):
        """/ Returns the directory where the files in this category are
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subCategoryCount(self, request, context):
        """/ Returns the number of subcategories in this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subCategoryName(self, request, context):
        """/ returns the name of one of the subcategories in this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subCategory(self, request, context):
        """/ returns one of the subcategories in this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def packageCount(self, request, context):
        """/ Returns the number of packages in this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def package(self, request, context):
        """/ Returns one of the packages in this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def categoryByPath(self, request, context):
        """/ Get a package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def packageByPath(self, request, context):
        """/ Get a package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createCategory(self, request, context):
        """/ Creates a new category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteCategory(self, request, context):
        """/ Delete a child category of this category, including all subcategories and packages
        / inside it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def savePackage(self, request, context):
        """/ Save a package in the localDB under this category
        / 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deletePackage(self, request, context):
        """/ Delete a package in this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def free(self, request, context):
        """/ Releases any memory allocated for this category
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiLocalDB_CategoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'name': grpc.unary_unary_rpc_method_handler(
                    servicer.name,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.nameRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.nameResponse.SerializeToString,
            ),
            'fileName': grpc.unary_unary_rpc_method_handler(
                    servicer.fileName,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.fileNameRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.fileNameResponse.SerializeToString,
            ),
            'subCategoryCount': grpc.unary_unary_rpc_method_handler(
                    servicer.subCategoryCount,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryCountRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryCountResponse.SerializeToString,
            ),
            'subCategoryName': grpc.unary_unary_rpc_method_handler(
                    servicer.subCategoryName,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryNameRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryNameResponse.SerializeToString,
            ),
            'subCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.subCategory,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryResponse.SerializeToString,
            ),
            'packageCount': grpc.unary_unary_rpc_method_handler(
                    servicer.packageCount,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageCountRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageCountResponse.SerializeToString,
            ),
            'package': grpc.unary_unary_rpc_method_handler(
                    servicer.package,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageResponse.SerializeToString,
            ),
            'categoryByPath': grpc.unary_unary_rpc_method_handler(
                    servicer.categoryByPath,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.categoryByPathRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.categoryByPathResponse.SerializeToString,
            ),
            'packageByPath': grpc.unary_unary_rpc_method_handler(
                    servicer.packageByPath,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageByPathRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageByPathResponse.SerializeToString,
            ),
            'createCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.createCategory,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.createCategoryRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.createCategoryResponse.SerializeToString,
            ),
            'deleteCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteCategory,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deleteCategoryRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deleteCategoryResponse.SerializeToString,
            ),
            'savePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.savePackage,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.savePackageRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.savePackageResponse.SerializeToString,
            ),
            'deletePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.deletePackage,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deletePackageRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deletePackageResponse.SerializeToString,
            ),
            'free': grpc.unary_unary_rpc_method_handler(
                    servicer.free,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.freeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiLocalDB_CategoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiLocalDB_CategoryService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiLocalDB_CategoryService(object):
    """GRPC interface definition for class 'ApiLocalDB_Category' from 'apilocaldb.h'
    """

    @staticmethod
    def name(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/name',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.nameRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.nameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fileName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/fileName',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.fileNameRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.fileNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def subCategoryCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/subCategoryCount',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryCountRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def subCategoryName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/subCategoryName',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryNameRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def subCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/subCategory',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.subCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def packageCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/packageCount',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageCountRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def package(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/package',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def categoryByPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/categoryByPath',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.categoryByPathRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.categoryByPathResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def packageByPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/packageByPath',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageByPathRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.packageByPathResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/createCategory',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.createCategoryRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.createCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/deleteCategory',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deleteCategoryRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deleteCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def savePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/savePackage',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.savePackageRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.savePackageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deletePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/deletePackage',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deletePackageRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.deletePackageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def free(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_CategoryService/free',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Category.freeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ApiLocalDB_PackageServiceStub(object):
    """GRPC interface definition for class 'ApiLocalDB_Package' from 'apilocaldb.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.name1 = channel.unary_unary(
                '/octaneapi.ApiLocalDB_PackageService/name1',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.nameRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.nameResponse.FromString,
                _registered_method=True)
        self.fileName1 = channel.unary_unary(
                '/octaneapi.ApiLocalDB_PackageService/fileName1',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.fileNameRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.fileNameResponse.FromString,
                _registered_method=True)
        self.hasThumbnail = channel.unary_unary(
                '/octaneapi.ApiLocalDB_PackageService/hasThumbnail',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.hasThumbnailRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.hasThumbnailResponse.FromString,
                _registered_method=True)
        self.getThumbnail = channel.unary_unary(
                '/octaneapi.ApiLocalDB_PackageService/getThumbnail',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.getThumbnailRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.getThumbnailResponse.FromString,
                _registered_method=True)
        self.loadPackage = channel.unary_unary(
                '/octaneapi.ApiLocalDB_PackageService/loadPackage',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.loadPackageRequest.SerializeToString,
                response_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.loadPackageResponse.FromString,
                _registered_method=True)
        self.free1 = channel.unary_unary(
                '/octaneapi.ApiLocalDB_PackageService/free1',
                request_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.freeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class ApiLocalDB_PackageServiceServicer(object):
    """GRPC interface definition for class 'ApiLocalDB_Package' from 'apilocaldb.h'
    """

    def name1(self, request, context):
        """/ Get the name for this package
        / The returned pointer will remain valid until this package object is freed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fileName1(self, request, context):
        """/ Get the file name for this package
        / The returned pointer will remain valid until this package object is freed
        /
        / Note: it is recommended to use Category::savePackage() and category::deletePackage()
        / to add and remove packages, this will raise the corresponding events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hasThumbnail(self, request, context):
        """/ Check if a preview image embedded into this package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getThumbnail(self, request, context):
        """/ Get the preview image embedded into this package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loadPackage(self, request, context):
        """/ Loads this package into a root node graph
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def free1(self, request, context):
        """/ Releases any memory allocated for this package
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiLocalDB_PackageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'name1': grpc.unary_unary_rpc_method_handler(
                    servicer.name1,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.nameRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.nameResponse.SerializeToString,
            ),
            'fileName1': grpc.unary_unary_rpc_method_handler(
                    servicer.fileName1,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.fileNameRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.fileNameResponse.SerializeToString,
            ),
            'hasThumbnail': grpc.unary_unary_rpc_method_handler(
                    servicer.hasThumbnail,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.hasThumbnailRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.hasThumbnailResponse.SerializeToString,
            ),
            'getThumbnail': grpc.unary_unary_rpc_method_handler(
                    servicer.getThumbnail,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.getThumbnailRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.getThumbnailResponse.SerializeToString,
            ),
            'loadPackage': grpc.unary_unary_rpc_method_handler(
                    servicer.loadPackage,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.loadPackageRequest.FromString,
                    response_serializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.loadPackageResponse.SerializeToString,
            ),
            'free1': grpc.unary_unary_rpc_method_handler(
                    servicer.free1,
                    request_deserializer=apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.freeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiLocalDB_PackageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiLocalDB_PackageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiLocalDB_PackageService(object):
    """GRPC interface definition for class 'ApiLocalDB_Package' from 'apilocaldb.h'
    """

    @staticmethod
    def name1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_PackageService/name1',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.nameRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.nameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fileName1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_PackageService/fileName1',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.fileNameRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.fileNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def hasThumbnail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_PackageService/hasThumbnail',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.hasThumbnailRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.hasThumbnailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getThumbnail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_PackageService/getThumbnail',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.getThumbnailRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.getThumbnailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def loadPackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_PackageService/loadPackage',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.loadPackageRequest.SerializeToString,
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.loadPackageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def free1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiLocalDB_PackageService/free1',
            apilocaldb__pb2.ApiLocalDB.ApiLocalDB_Package.freeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
