# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import apitexteditor_pb2 as apitexteditor__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in apitexteditor_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ApiTextEditorServiceStub(object):
    """GRPC interface definition for class 'ApiTextEditor' from 'apitexteditor.h'
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/create',
                request_serializer=apitexteditor__pb2.ApiTextEditor.createRequest.SerializeToString,
                response_deserializer=apitexteditor__pb2.ApiTextEditor.createResponse.FromString,
                _registered_method=True)
        self.destroy = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/destroy',
                request_serializer=apitexteditor__pb2.ApiTextEditor.destroyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.text = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/text',
                request_serializer=apitexteditor__pb2.ApiTextEditor.textRequest.SerializeToString,
                response_deserializer=apitexteditor__pb2.ApiTextEditor.textResponse.FromString,
                _registered_method=True)
        self.isEmpty = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/isEmpty',
                request_serializer=apitexteditor__pb2.ApiTextEditor.isEmptyRequest.SerializeToString,
                response_deserializer=apitexteditor__pb2.ApiTextEditor.isEmptyResponse.FromString,
                _registered_method=True)
        self.setText = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/setText',
                request_serializer=apitexteditor__pb2.ApiTextEditor.setTextRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.clear = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/clear',
                request_serializer=apitexteditor__pb2.ApiTextEditor.clearRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.setReadOnly = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/setReadOnly',
                request_serializer=apitexteditor__pb2.ApiTextEditor.setReadOnlyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.isReadOnly = channel.unary_unary(
                '/octaneapi.ApiTextEditorService/isReadOnly',
                request_serializer=apitexteditor__pb2.ApiTextEditor.isReadOnlyRequest.SerializeToString,
                response_deserializer=apitexteditor__pb2.ApiTextEditor.isReadOnlyResponse.FromString,
                _registered_method=True)


class ApiTextEditorServiceServicer(object):
    """GRPC interface definition for class 'ApiTextEditor' from 'apitexteditor.h'
    """

    def create(self, request, context):
        """/ Creates a new text editor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def destroy(self, request, context):
        """/ Destroys this text editor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def text(self, request, context):
        """/ Returns the text the user typed in the text editor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isEmpty(self, request, context):
        """/ Returns TRUE if there's no text in the text editor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setText(self, request, context):
        """/ Sets the text in the text editor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clear(self, request, context):
        """/ Clears the text in the text editor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setReadOnly(self, request, context):
        """/ Changes the text editor to read only mode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def isReadOnly(self, request, context):
        """/ Returns true if the editor is in read-only mode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiTextEditorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.createRequest.FromString,
                    response_serializer=apitexteditor__pb2.ApiTextEditor.createResponse.SerializeToString,
            ),
            'destroy': grpc.unary_unary_rpc_method_handler(
                    servicer.destroy,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.destroyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'text': grpc.unary_unary_rpc_method_handler(
                    servicer.text,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.textRequest.FromString,
                    response_serializer=apitexteditor__pb2.ApiTextEditor.textResponse.SerializeToString,
            ),
            'isEmpty': grpc.unary_unary_rpc_method_handler(
                    servicer.isEmpty,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.isEmptyRequest.FromString,
                    response_serializer=apitexteditor__pb2.ApiTextEditor.isEmptyResponse.SerializeToString,
            ),
            'setText': grpc.unary_unary_rpc_method_handler(
                    servicer.setText,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.setTextRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'clear': grpc.unary_unary_rpc_method_handler(
                    servicer.clear,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.clearRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'setReadOnly': grpc.unary_unary_rpc_method_handler(
                    servicer.setReadOnly,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.setReadOnlyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'isReadOnly': grpc.unary_unary_rpc_method_handler(
                    servicer.isReadOnly,
                    request_deserializer=apitexteditor__pb2.ApiTextEditor.isReadOnlyRequest.FromString,
                    response_serializer=apitexteditor__pb2.ApiTextEditor.isReadOnlyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'octaneapi.ApiTextEditorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('octaneapi.ApiTextEditorService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApiTextEditorService(object):
    """GRPC interface definition for class 'ApiTextEditor' from 'apitexteditor.h'
    """

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/create',
            apitexteditor__pb2.ApiTextEditor.createRequest.SerializeToString,
            apitexteditor__pb2.ApiTextEditor.createResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def destroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/destroy',
            apitexteditor__pb2.ApiTextEditor.destroyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def text(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/text',
            apitexteditor__pb2.ApiTextEditor.textRequest.SerializeToString,
            apitexteditor__pb2.ApiTextEditor.textResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isEmpty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/isEmpty',
            apitexteditor__pb2.ApiTextEditor.isEmptyRequest.SerializeToString,
            apitexteditor__pb2.ApiTextEditor.isEmptyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/setText',
            apitexteditor__pb2.ApiTextEditor.setTextRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clear(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/clear',
            apitexteditor__pb2.ApiTextEditor.clearRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setReadOnly(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/setReadOnly',
            apitexteditor__pb2.ApiTextEditor.setReadOnlyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def isReadOnly(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/octaneapi.ApiTextEditorService/isReadOnly',
            apitexteditor__pb2.ApiTextEditor.isReadOnlyRequest.SerializeToString,
            apitexteditor__pb2.ApiTextEditor.isReadOnlyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
